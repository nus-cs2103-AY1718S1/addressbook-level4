
[33mcommit c5c06bd682137f801ceaad32e1e1cfa2416332a3[m
Merge: 3e1cef7 82f647a
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 23 04:12:34 2017 +0800

    Merge branch 'addtask-tests' into add-task

[33mcommit 3e1cef7851bca0b480e829716b8810cbe6041d1f[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 23 03:39:56 2017 +0800

    added validator for determining if start date is before deadline

[33mcommit 1bc3fb38385ee2d1af5b6e1c97e2b26cabad24ee[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 22 20:46:36 2017 +0800

    NLP

[33mcommit cc4d86796affae792a5c3a778e80635afb28890a[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 22 13:54:18 2017 +0800

    added support for Natural Langauge Processing

[33mcommit f4b7938a85238391e948bb24c5aab00a8f40a292[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 22 03:38:02 2017 +0800

    improved listcommand so it lists both tasks and people

[33mcommit aa5a19b01f72ebc40b5b9d46fbd3b7f614ce7c5f[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 16:22:24 2017 +0800

    updated TaskBuilder

[33mcommit f463086059f964ee941ab1e59edf2c33b02c2174[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 16:16:58 2017 +0800

    fixed line length

[33mcommit 298f6950c635e5a7575b2e1f9650da78b7d93b06[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 16:12:50 2017 +0800

    removed whitespace

[33mcommit 82f647a945b3d7f6cd79fdbef50311e9de2a0272[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 16:08:52 2017 +0800

    whitespace removal

[33mcommit 7a75070ac8927d45e97e0b0561ba3e23536c8128[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 16:06:58 2017 +0800

    added missing test

[33mcommit 96398cedc7bf01882c5e7908c9cd9799870b81bc[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 16:04:24 2017 +0800

    added missing taskdate tesks

[33mcommit f9fa4f53441a6f28a6cee66d640806140255ea85[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 15:57:37 2017 +0800

    whitespace removal

[33mcommit 31916e357d9f0e788f233e29489b9dbfa6d1608e[m
Merge: c379099 f6a32e4
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 15:40:37 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into addtask-tests

[33mcommit fc23d2ab8a701e7b98b08999ba686be98c273ed2[m
Merge: 1e149ee f6a32e4
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 15:30:00 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into add-task

[33mcommit f6a32e42b778d2e0d2aa273827535b6cf1189754[m
Merge: 8ac2c0e 5937534
Author: tby1994 <31119218+tby1994@users.noreply.github.com>
Date:   Sat Oct 21 13:52:29 2017 +0800

    Merge pull request #68 from eryao95/Remove_task_feature

    Remove task feature

[33mcommit 593753422fc6d28e7988bedc59843f991031ca91[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 13:31:33 2017 +0800

    changed for codacy again

[33mcommit 27b4ce52763dfb66664f6a7045d9646a3415afd6[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 13:08:01 2017 +0800

    changed for codacy...

[33mcommit 119a0bdc04ea3c2651f6bb6f3852c787815b2c1d[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 13:02:21 2017 +0800

    checkstyle..

[33mcommit b02066f836e4e5d07519db5e069b4323bd8f0b59[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 12:57:59 2017 +0800

    updated checkstyle

[33mcommit df8b11f023acdce755628da94733b8f53864d2b8[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 12:54:21 2017 +0800

    corrected test cases

[33mcommit 24449c8776e87a1ae342c66a8d8dbfd99f890ec5[m
Merge: 8dbf94b 8ac2c0e
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 12:03:10 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main into Remove_task_feature

[33mcommit 8dbf94baea3c26423ae7ea4c5503080671c1b6e8[m
Merge: 2a55311 52d95ac
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Sat Oct 21 12:02:52 2017 +0800

    updated delete task tests

[33mcommit 8ac2c0e20fb228fa69fa8e4baa78edf4df1abe56[m
Merge: 52d95ac 6844ad6
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Sat Oct 21 12:02:01 2017 +0800

    Merge pull request #66 from tby1994/TaskManager

    Task manager (Included basic Gui test files for future system tests)

[33mcommit c37909983c3dfb6c113bbe90829e48370a00d6d8[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 03:21:04 2017 +0800

    travis errors

[33mcommit 1e149ee65c70e1d0cd8e02fdd2f5dac7a300cb52[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 02:47:43 2017 +0800

    added tags to tasks

[33mcommit 1525fa5d145fc1a790fee99bb18a551f31f7a54e[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 02:26:10 2017 +0800

    remove trailing whitespace

[33mcommit b8e4f1007bc9728fd2abff691c5cee1f91b2c494[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 21 02:19:37 2017 +0800

    tests complete

[33mcommit 6844ad6cf4c2557d6c3bba19eea693a44f239860[m
Author: TBY\User <tby1994@gmail.com>
Date:   Sat Oct 21 00:35:30 2017 +0800

    Changed style

[33mcommit 275f21c3d00b8b1f95f5576a57e30120053e8549[m
Author: TBY\User <tby1994@gmail.com>
Date:   Sat Oct 21 00:29:47 2017 +0800

    Included GUI test files for system tests

[33mcommit f0eb172e12c39f17ad16fe7f3fc684538f0092b1[m
Author: TBY\User <tby1994@gmail.com>
Date:   Fri Oct 20 20:25:28 2017 +0800

    Changed layout

[33mcommit e9aba92d8de73310c570b8a684c8f2b392ebad97[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Fri Oct 20 11:51:40 2017 +0800

    Changed layout

[33mcommit 2182ab0d1263d9deef9d4a645274069599a6df51[m
Merge: e4f4417 52d95ac
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 10:10:57 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into add-task

[33mcommit 2a553117912faf763576a6fc50d7a6ec3a24eff4[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Fri Oct 20 10:10:21 2017 +0800

    added delete task

[33mcommit a73787d5f2084e7f3d81f5c2f0d860c1546a608f[m
Merge: a2d8d97 52d95ac
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Fri Oct 20 10:09:23 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main into TaskManager

[33mcommit a2d8d97a551f9a9a75279401a26fdf5c7412ae5f[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Fri Oct 20 10:02:56 2017 +0800

    Updated BrowserPanel

[33mcommit 493125de372367bd434d3ba3001b098cfee8c01a[m
Merge: f519aeb 52d95ac
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 09:21:34 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into addtask-tests

[33mcommit 52d95ac80ee4e0a50a9fe7917313efca3fbd75a0[m
Merge: 4e10883 ca358cf
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 09:02:52 2017 +0800

    Merge pull request #63 from raisa2010/tby1994-TaskManagerUI[v1.2]

    tby1994-task manager UI [resolved conflicts][V1.2]

[33mcommit ca358cf7aed87a765428354d5d24a3024858e51f[m
Merge: 0cbe092 d6f3632
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 08:46:19 2017 +0800

    resolved conflicts

[33mcommit f519aebc292df86805457ccaf62e2740fa1e8e37[m
Merge: b3743b8 4e10883
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 08:25:39 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into addtask-tests

[33mcommit e4f4417a6eb8be27ff984db0c487cf4495a3a359[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 08:21:29 2017 +0800

    update single dates

[33mcommit 4e10883bc460383c906268721ada1e1e091382ec[m
Merge: 3b2cbb9 000f875
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 07:48:48 2017 +0800

    Merge pull request #59 from raisa2010/addtask-dg

    changed sequence diagram

[33mcommit b3743b84db6fdd7323f0c751305faa6b70461edd[m
Merge: 41ec57a 3b2cbb9
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 07:21:12 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into addtask-tests

[33mcommit 000f875cf09a3d935fa38fc5318efe60a447dbba[m
Merge: 761d5b7 3b2cbb9
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 07:20:29 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into addtask-dg

[33mcommit 41ec57ae773e44ae6e279a4e4de1a54c38eeca84[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 07:19:25 2017 +0800

    added JUnit tests

[33mcommit 761d5b7cb2b9276949b63553ce4a6d9854a3fc6a[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 05:43:25 2017 +0800

    changed sequence diagram

[33mcommit 3b2cbb96472380ce3a1b239fdbd3859e92ace6a5[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 20 05:21:20 2017 +0800

    Added badges

[33mcommit 1fe13e1eb783f4bbfbd2dc98edf0de12cde0599d[m
Merge: e955241 14e3ea6
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 19 21:55:43 2017 +0800

    Merge pull request #57 from tpq95/v1.1.1-remove-tag-document

    update DG for detag

[33mcommit e955241298fb012620842de26dd91fefd8865244[m
Merge: d73ead4 01fe4f7
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 19 21:54:05 2017 +0800

    Merge pull request #18 from tpq95/v1.1-colour

    update tag color and gui color

[33mcommit 14e3ea60438b8c09d2d401b8bcfc2602c125de83[m
Merge: e033dbd d73ead4
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 19 21:48:16 2017 +0800

    Merge branch 'master' into v1.1.1-remove-tag-document

[33mcommit e033dbda523d78e63be2144873db363adb5d55cd[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 21:43:57 2017 +0800

    update DG for detag

[33mcommit 01fe4f70b87223726b08cc0ac3405448adcfef7a[m
Merge: 34d812b 962cda4
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 20:47:46 2017 +0800

    Merge branch 'master' into v1.1-colour

    * master: (96 commits)
      update typicalperson
      Revert "remove tag command"
      Delete TaskListPanel.java
      Delete TaskCard.java
      travis checkstyle errors not found
      resolved test case errors
      updated UG for birthday
      added space
      resolved test cases
      changed import order
      updated checkstyle error
      changed according to checkstyle
      changed indentations and import statements
      added birthday
      import statement changes
      checkstyle edits
      fixed test errors
      checkstyle changes
      checkstyle changes
      whitespace removal
      ...

[33mcommit d6f363284d340f21c97494464efed7da07c659cb[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 20:36:22 2017 +0800

    Changed style

[33mcommit d32104df99bfc500e24db9f58c6401894b6dd0b4[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 20:11:56 2017 +0800

    Removed comparsion to null

[33mcommit 9270a27298a65f8f25463e31377d78f5fa499b29[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 19:57:42 2017 +0800

    Removed unused imports

[33mcommit 1091b670597b8e4f6e66bf74d7c885a7a2ffca48[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 19:52:48 2017 +0800

    Added TaskCard test

[33mcommit 024051a247aa2a8c22c834bb487a13f6d122772c[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 19:06:27 2017 +0800

    Changed style

[33mcommit e7eadbef77a74f0e7080e1a268d434866d52b2a5[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 19:03:52 2017 +0800

    Added Description test

[33mcommit 04cb213c6e2950d1c6bbccc8cd2cb1110909baec[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 18:08:22 2017 +0800

    Change to a higher quality Ui screenshot

[33mcommit 2616416d80a6d0c546010d93ed969585970548ad[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 18:03:26 2017 +0800

    Updated DG and Ui image

[33mcommit cfc9f396ff299130c7bf187d7bb9054957b2a149[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 17:35:32 2017 +0800

    Changed style

[33mcommit ad5ba0a4a3631b3f7a63e93a29d6e130447a1c8a[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 17:31:02 2017 +0800

    Removed unused imports

[33mcommit 4460e1454fcf8472f9da7b48c62fbcbcbb6def89[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 17:26:46 2017 +0800

    Edited test files

[33mcommit 36f202fbdc6af32ef1da7d540a1a494273ae7e39[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 16:09:13 2017 +0800

    Fixed a bug

[33mcommit 25b8689d1388bd681e52d7854bf8d229a8e5e87a[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 16:03:50 2017 +0800

    Added white space

[33mcommit 12abcae650e2aeea4d005c29c8fb07ecb8526526[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 15:59:34 2017 +0800

    Changed Browser Test case

[33mcommit 2eadb79f2ba63833d7f76da67b18b2ef28bffed2[m
Merge: cce9737 c46522b
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 14:35:31 2017 +0800

    Merge branch 'TaskManager' of https://github.com/tby1994/main into TaskManager

    # Conflicts:
    #       src/test/java/guitests/AddressBookGuiTest.java
    #       src/test/java/guitests/guihandles/MainWindowHandle.java

[33mcommit cce97370e9d64ee12fa1368ff553cfffea6ed107[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 14:33:42 2017 +0800

    Clean up guitest

[33mcommit c46522ba7c19698ad73a391fa1eea06659a9d5b2[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:46:39 2017 +0800

    I wanna punch this travis

[33mcommit 6304d7efbf4da995888afa78136d2092bf61c984[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:43:20 2017 +0800

    Changed import style AGAIN

[33mcommit bf3f5dbcfae1bde9d79ff1384fced6288b757399[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:37:27 2017 +0800

    Changed import order

[33mcommit 8cd5495d712cbaae4555c8461a99b8c83f760dfd[m
Merge: 962cda4 b9db8fd
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Thu Oct 19 11:36:20 2017 +0800

    Merge branch 'add_birthday'

[33mcommit d73ead439def6a257a2ee5c591784aab8de49bec[m
Merge: dadfba2 b9db8fd
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Thu Oct 19 11:35:58 2017 +0800

    Merge pull request #55 from eryao95/add_birthday

    updated birthday

[33mcommit c2d8010d11ce1d88a111fcd8f227da4a1cba7412[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:35:25 2017 +0800

    Changed import order

[33mcommit 4aaf9bd595f3d238725126d303364f6e79388112[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:31:34 2017 +0800

    Changed style

[33mcommit 96f1f2dee06ccc80c8ffe502296c07e0da37ba30[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:28:41 2017 +0800

    Changed coding style

[33mcommit b9db8fd5e07859b48349748bd4d41873070b3f25[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Thu Oct 19 11:18:59 2017 +0800

    update

[33mcommit ed2d0fe527c29b765ebdad1337bedb098021ea7d[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Thu Oct 19 11:15:56 2017 +0800

    updated birthday

[33mcommit 676cfd8501b0c5b60dd9d422e3d514d701bfe376[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 19 11:15:35 2017 +0800

    Removed changes in guitest

[33mcommit dadfba22180f7e832cba577707a946502a079eb8[m
Merge: 40902f5 331644b
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 11:04:03 2017 +0800

    Merge pull request #54 from raisa2010/addtask-documentation[v1.2]

    edited UG for AddTaskCommand [V1.2]

[33mcommit 40902f5c168bcbe8f744a2f9afd61ac60897135b[m
Merge: 68ec774 3bd02ca
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Thu Oct 19 11:03:21 2017 +0800

    Merge pull request #51 from eryao95/DG_for_findTag

    updated DG

[33mcommit 3bd02cacb01b2f6ff455e29a0f8510ae8336bc1e[m
Merge: 47997df 68ec774
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Thu Oct 19 10:54:21 2017 +0800

    changed DG

[33mcommit 47997dfca8b007d063aac76903fd3e18965ff127[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Thu Oct 19 10:48:32 2017 +0800

    updated DG

[33mcommit 68ec774901eaf4f4ccf2815ad32db6d17f5024a1[m
Merge: 0cbe092 bd4e5d1
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 10:22:59 2017 +0800

    Merge pull request #53 from raisa2010/addtask-dg[v1.2]

    Addtask DG[V1.2]

[33mcommit 331644be7e5251c6586b16fe009baf534bab9785[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 10:17:52 2017 +0800

    edited UG

[33mcommit bd4e5d1a4a2f3e4ad026aa503499ff35cc285c3f[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 10:06:01 2017 +0800

    Updated DG for AddTaskCommand

[33mcommit 23dbd10abb16f8e52b73e47ca76720a590fe0c69[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 10:03:15 2017 +0800

    Updated DG for AddTaskCommand

[33mcommit 0cbe0925b04e99b50eefb7f096db5e6ce4024050[m
Merge: 962cda4 8be1635
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 19 09:29:38 2017 +0800

    Merge pull request #52 from tpq95/v1.1.1-remove-tag

    revert changes to detag

[33mcommit 8be1635275f36e1eef33e9941573ee3d237de163[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 09:20:23 2017 +0800

    remove trailing whitespace

[33mcommit b39a54b88cd270f753c29f2b604794ce04f40c2a[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 09:17:19 2017 +0800

    resolve conflicts

[33mcommit caf679a9a610912dad0b397e7c60056b3a10b799[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 09:06:32 2017 +0800

    resolve conflict

[33mcommit 0dbf3ff4ccd500990ecfa3f6cabbbca4745705bd[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 09:00:23 2017 +0800

    revert changes to detag

[33mcommit 252b7a5ebe243b3aa523377e4dd93f9e86271019[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Thu Oct 19 08:48:26 2017 +0800

    updated DG

[33mcommit 962cda4bff097fe3aeab17c1371b6ee0d4c45a09[m
Merge: d02615e a27f66b
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 07:46:10 2017 +0800

    Merge pull request #50 from tpq95/v1.1-remove-tag [V1.2]

    remove tag

[33mcommit a27f66b4caaaba37967ef2de6c40d2dab003a06e[m
Merge: d5172d0 d02615e
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 19 07:32:26 2017 +0800

    Merge branch 'master' into v1.1-remove-tag

[33mcommit d5172d04a4f320188d76c052b7062ebfde8fab7c[m
Merge: e32e3ae 9c833d8
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 07:29:24 2017 +0800

    Merge branch 'v1.1-remove-tag' of https://github.com/tpq95/main into v1.1-remove-tag

    * 'v1.1-remove-tag' of https://github.com/tpq95/main: (35 commits)
      Delete TaskListPanel.java
      Delete TaskCard.java
      travis checkstyle errors not found
      resolved test case errors
      updated UG for birthday
      added space
      resolved test cases
      changed import order
      updated checkstyle error
      changed according to checkstyle
      changed indentations and import statements
      added birthday
      import statement changes
      checkstyle edits
      fixed test errors
      checkstyle changes
      checkstyle changes
      whitespace removal
      made dates optional
      changes to make Dates optional
      ...

[33mcommit e32e3ae27a92d95a71788892a4924bb4dcabf284[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 19 07:25:08 2017 +0800

    update typicalperson

[33mcommit d02615e19a8964add2413d4a60d5d1ec67a7d9b9[m
Merge: 6228979 63925dd
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 07:14:32 2017 +0800

    Merge pull request #49 from CS2103AUG2017-T11-B3/revert-20-v1.1-remove-tag

    Revert "remove tag command" [for running tests]

[33mcommit 63925ddefaa6639d241023f4a56d27a5e56fec87[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 07:14:01 2017 +0800

    Revert "remove tag command"

[33mcommit 622897911212ce1309f41225ec7f80918dd67527[m
Merge: 3ec5cc7 9c833d8
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 07:13:52 2017 +0800

    Merge pull request #20 from tpq95/v1.1-remove-tag [V1.2]

    remove tag command

[33mcommit 9c833d8d8df559b8527321069f0d22fd43e70928[m
Merge: ade8e27 3ec5cc7
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 07:12:54 2017 +0800

    Merge branch 'master' into v1.1-remove-tag

[33mcommit 3ec5cc7f74e6272db6a6334468abd222e828a3a8[m
Merge: 5ba807f 35ef53c
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 07:00:14 2017 +0800

    Merge pull request #42 from tpq95/v1.1.1-document [V1.2]

    update UG and DG for detag

[33mcommit 5ba807f9871fb733208a14fd5cc9ae3c01051ee8[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 03:35:29 2017 +0800

    Delete TaskListPanel.java

[33mcommit f9d767ead14ef28c17e0e47579cbde19d33a533c[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 03:35:17 2017 +0800

    Delete TaskCard.java

[33mcommit 3956fc08198ad2c2d0b118fdfd308b92564d6542[m
Merge: 66643e4 62743fe
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 03:30:50 2017 +0800

    Merge pull request #48 from raisa2010/add-task

    AddTask Feature Added

[33mcommit 62743fe40347ebec4c3351131ada561f320abf7f[m
Merge: b6073f7 66643e4
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 03:23:23 2017 +0800

    Merge branch 'master' into add-task

[33mcommit b6073f720d3526bac363034a52601bd85ae90300[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 03:20:23 2017 +0800

    travis checkstyle errors not found

[33mcommit 0fa8282a368b573f8cc9fd3312c5af83863b5368[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 19 03:02:02 2017 +0800

    resolved test case errors

[33mcommit 6dcd7d734595c60a3b58e342d6608c6c8eb2c359[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 19 00:15:57 2017 +0800

    removed unused imports

[33mcommit 2450d57e46e5be531e59750d45172bdb5d71e3a0[m
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 23:43:08 2017 +0800

    Modified UI and GUI test

[33mcommit 66643e48409a11d9f960528f5cb9ea4311268bae[m
Merge: 555e995 45691d7
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Wed Oct 18 22:25:45 2017 +0800

    Merge pull request #46 from eryao95/UG_for_birthday

    updated UG for birthday

[33mcommit 45691d796fec2ad14e30dee8e50cb27f2ad0eaf8[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 22:12:47 2017 +0800

    updated UG for birthday

[33mcommit 555e995b33ca3416374af19eeb8058acd7edb2cb[m
Merge: 7e788f2 ef26ea9
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Wed Oct 18 22:02:41 2017 +0800

    Merge pull request #44 from eryao95/add_birthday

    Add birthday

[33mcommit 7e788f26e9cb9d93a9610575079b1c6a2b718149[m
Merge: c945d73 2d35120
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Wed Oct 18 21:57:46 2017 +0800

    Merge pull request #16 from eryao95/documenting

    updated on user guides

[33mcommit ef26ea95a281558c481bb5da0ac8ac4c6a0688fe[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 19:05:24 2017 +0800

    added space

[33mcommit d57df06a53e51a7dadb458a4d5dd35de664dd56d[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 18:56:41 2017 +0800

    resolved test cases

[33mcommit 42d47f815fd82e9f8f988bc43bc0017b4d10b57a[m
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 18:35:25 2017 +0800

    Changed indentation

[33mcommit 43b0eeab0d78b8a73c8ea9030d6fd7a0f6b04b0e[m
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 18:30:49 2017 +0800

    Changed indentation and removed extra file

[33mcommit 4110956451ce4bee01ab8453d770c59d09103770[m
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 18:23:29 2017 +0800

    Changed UI for task manager

[33mcommit dfc9ea7bfd8152edc3ec4b095fd2d0562ee0854b[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 18:02:56 2017 +0800

    changed import order

[33mcommit 3790f111c7d6f4519d23e675e3b3fa6089fac920[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 17:58:16 2017 +0800

    updated checkstyle error

[33mcommit 337d31e62918588d0594d276300434af58ddb1a3[m
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 17:56:50 2017 +0800

    added task manager into the UI

[33mcommit 71bc9e0d770b66047b3b7bb39229a1faa633e4c4[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 17:30:20 2017 +0800

    changed according to checkstyle

[33mcommit 1edf7d2fa7378565d7641f518a9ffe0f0ecfd1b7[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 17:23:58 2017 +0800

    changed indentations and import statements

[33mcommit 6d52fa8b90970ddb41d7eb90b2bcdb29f39f6f17[m
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Wed Oct 18 16:51:46 2017 +0800

    added birthday

[33mcommit e631f58de0a88c2bebb9f469b07f3e9fddb8d956[m
Merge: 54a83d7 c6abde3
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 12:37:01 2017 +0800

    Merge branch 'add-task' of https://github.com/raisa2010/main into TaskManager

[33mcommit 54a83d7b3afd8b6c2dc073c6d8eaa56190537055[m
Merge: 9efdf5c c945d73
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 12:26:28 2017 +0800

    Merge branch 'task-manager' of https://github.com/CS2103AUG2017-T11-B3/main into TaskManager

[33mcommit c6abde30cc6cbb5f6eff2fe9dc96d042d1819173[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 11:59:29 2017 +0800

    import statement changes

[33mcommit 887f6255f63f11f70e5a7ebd22111465fe9c00db[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 11:45:15 2017 +0800

    checkstyle edits

[33mcommit 9efdf5c3cb00391dff7aecac8308ebc191fa9f77[m
Author: TBY\User <tby1994@gmail.com>
Date:   Wed Oct 18 11:36:32 2017 +0800

    Changed indentation

[33mcommit cd1674878555991eec2e4d5d6b91510624cb11d4[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 11:34:02 2017 +0800

    fixed test errors

[33mcommit 28ef01b42d68246582861dbe75ddd5f4c6988c78[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 09:56:01 2017 +0800

    checkstyle changes

[33mcommit 92c7afa8f1e5b0181d8436c112779a057c4e0089[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 09:54:07 2017 +0800

    checkstyle changes

[33mcommit 4cf3230809545f189434198c8fc156911d69f7ee[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 09:48:08 2017 +0800

    whitespace removal

[33mcommit f1bed003b992b0382e61890b6d4490cabdbc8760[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 09:34:18 2017 +0800

    made dates optional

[33mcommit f17916476acd5eccbe811a80d67b10eb4257d851[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 18 01:38:39 2017 +0800

    changes to make Dates optional

[33mcommit 35ef53c78f26b275bf38ee42023590a5d54f62b2[m
Author: peiquan <peiquan@hiei.local>
Date:   Tue Oct 17 17:07:30 2017 +0800

    update UG and DG for detag function

[33mcommit 7e3a64eaf85a04be8e7c02c6ac514b2e620d4437[m
Merge: 0cad859 c945d73
Author: peiquan <peiquan@hiei.local>
Date:   Tue Oct 17 16:49:39 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main

    * 'master' of https://github.com/CS2103AUG2017-T11-B3/main: (32 commits)
      Added line breaks
      Update AboutUs.adoc
      removed trailing whitespace
      changed photos to png format
      edited About Us
      Added my handsome photo
      Modified test cases
      Updated test file
      Removed some unnecessary test cases
      Changed indentation
      Changed indentation
      Changed indentation
      Changed coding style
      Modified coding standard
      Modified FindTagCommandPaser to resolve conflict
      Resolved some conflicts
      Modified test cases coding standard
      Updated test cases
      Included case insensitive feature in the find tag command
      add profile pic
      ...

[33mcommit ade8e27cd3f420cc9e2b553178c19991562933c7[m
Author: peiquan <peiquan@hiei.local>
Date:   Tue Oct 17 00:05:36 2017 +0800

    update style

[33mcommit 22483b5ddd6a8a841b882ba161af7f3c5b636ce2[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 21:17:51 2017 +0800

    changes

[33mcommit 5d2f20eb5128e834013e11ac7854c27b0b436103[m
Author: peiquan <peiquan@hiei.local>
Date:   Mon Oct 16 20:25:10 2017 +0800

    remove remove(Tag) method in AddressBook and UniqueTagList

[33mcommit 40d99daf073ef00d5830807247d59f367fbd90c0[m
Author: peiquan <peiquan@hiei.local>
Date:   Mon Oct 16 20:11:07 2017 +0800

    update TypicalPersons.java to ensure FindTag system test pass

[33mcommit bcb19a63dc12e5c0b7ca3628cc9fde7b6a48d8c4[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 19:54:38 2017 +0800

    travis stop

[33mcommit e11f69cdf3376cac5f6893a8855a82d8e697e785[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 19:48:44 2017 +0800

    travis stop

[33mcommit 1701230034ea6c53856202dc08f3c9cff0563080[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 19:45:22 2017 +0800

    imports, javadoc

[33mcommit 60bb547f19caacfb47d271047799041f06b8b328[m
Merge: 55c6027 c945d73
Author: peiquan <peiquan@hiei.local>
Date:   Mon Oct 16 19:29:42 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main into v1.1-remove-tag

    * 'master' of https://github.com/CS2103AUG2017-T11-B3/main: (26 commits)
      Added line breaks
      Update AboutUs.adoc
      removed trailing whitespace
      changed photos to png format
      edited About Us
      Added my handsome photo
      Modified test cases
      Updated test file
      Removed some unnecessary test cases
      Changed indentation
      Changed indentation
      Changed indentation
      Changed coding style
      Modified coding standard
      Modified FindTagCommandPaser to resolve conflict
      Resolved some conflicts
      Modified test cases coding standard
      Updated test cases
      Included case insensitive feature in the find tag command
      add profile pic
      ...

[33mcommit 56d5a51e52dd74d58d4475672de67b7d3af6ff81[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 18:58:22 2017 +0800

    ...

[33mcommit 102afec707b4328245cbf4f09a195c74be42fd50[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 18:54:36 2017 +0800

    Travis why

[33mcommit aa48e99e4f592bc543ed0ba36073b95d9ba0108e[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 18:45:49 2017 +0800

    commented out incomplete ui changes

[33mcommit c25daf553572ac591eb763cc2140687f58f2822c[m
Merge: dfc7c97 c945d73
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Mon Oct 16 12:12:31 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main

[33mcommit dfc7c97cccbef43024c64ad3c4bbe6afd691380a[m
Merge: e1ffe88 cfc47eb
Author: DESKTOP-D6JEPK4\user <lite0520@gmail.com>
Date:   Mon Oct 16 12:12:02 2017 +0800

    Merge branch 'new_findTag_Command' of https://github.com/eryao95/main

    # Conflicts:
    #       src/main/java/seedu/address/storage/XmlAddressBookStorage.java

[33mcommit fa6687ca9b6c6505deaa6757965804dd1372e0fc[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 16 07:10:36 2017 +0800

    edited ui

[33mcommit 55c6027dc7e0ecf29ae289985d3a6d028724ae81[m
Author: peiquan <peiquan@hiei.local>
Date:   Sun Oct 15 22:47:35 2017 +0800

    update style

[33mcommit b61a737cbaf7245fb18e58f0264d8bf106d92bbf[m
Author: peiquan <peiquan@hiei.local>
Date:   Sun Oct 15 22:26:22 2017 +0800

    update style

[33mcommit 3dc3caef848531faf0f1eff9f4d9f7419e1efb7d[m
Author: peiquan <peiquan@hiei.local>
Date:   Sun Oct 15 22:19:54 2017 +0800

    remove unused imports

[33mcommit ab287297f65240dfd3d62de554f83229a37401a8[m
Author: peiquan <peiquan@hiei.local>
Date:   Sun Oct 15 22:16:55 2017 +0800

    update detagcommand with exception tagnotfound
    update addressbook with new methods
    update various files to suit new detag command
    update relevant test cases
    edit typicalperson muts be

[33mcommit 80b3a6ee49f5218117e184aa91404ef1ae95a5b8[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 15 09:31:54 2017 +0800

    updated storage

[33mcommit 9a4a062feb658004a5f55581324612bce6f0c64b[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 15 08:40:59 2017 +0800

    edited logic

[33mcommit c2ac0cdd8b0de5ece257af9326d02174e38b5757[m
Merge: 94112ed c945d73
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 15 07:29:32 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main into add-task

[33mcommit 94112ed292d756dfc6976e61048a1ca014254dd6[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sun Oct 15 07:29:16 2017 +0800

    updated model

[33mcommit 0d013e6c66309605da69f7abaca6b9ec4ce8f0ed[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 14 11:34:44 2017 +0800

    updated model to support tasks

[33mcommit 34d812bf81288b993dcfe52deb7cb309844e2f0f[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Sat Oct 14 08:57:42 2017 +0800

    Reverted incorrect changes

[33mcommit c945d73e89b11d68b69f527ab5113d164487fd4b[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 21:46:48 2017 +0800

    Added line breaks

[33mcommit 65ac0c496ce317cfdd06b7185351316656e66f44[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 21:45:23 2017 +0800

    Update AboutUs.adoc

[33mcommit 05c1b661bbf2d5efe6f3a7723ee367a0de16bcd8[m
Merge: c56faa5 29ecbb5
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 21:42:34 2017 +0800

    Merge pull request #23 from raisa2010/update-about-us

    Updated about us

[33mcommit 29ecbb54d89ae4e03a6595135daf2e9c2381eaf5[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 21:09:30 2017 +0800

    removed trailing whitespace

[33mcommit ab16bc3117cd1d8c29297e5b4f787ee137a4cdf0[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 21:03:53 2017 +0800

    changed photos to png format

[33mcommit b3de865553313a919c0fe58ca71207a954039ef4[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 20:58:38 2017 +0800

    edited About Us

[33mcommit c56faa543f62d0aaa6ea34d1b4deaea00beb4230[m
Merge: 0872868 c68b494
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 20:33:15 2017 +0800

    Merge pull request #13 from eryao95/random_branch

    uploaded my photo into images folder

[33mcommit 0872868102c8b9b095ed40f2cb32a604e77911f2[m
Merge: 8b9bbde 43a6498
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 20:32:54 2017 +0800

    Merge pull request #15 from tpq95/v1.1-photo

    add profile pic

[33mcommit 8b9bbde8192a81c70feb9baf0f9543a9f10ef7e2[m
Merge: add44fa 0b63729
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Fri Oct 13 20:32:32 2017 +0800

    Merge pull request #19 from tby1994/FindTagCommand

    Find tag command

[33mcommit 89ebccc1fd7f76fa8854ebd7efe0d75ac9d20538[m
Merge: 1398216 add44fa
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 15:52:07 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main into v1.1.1-test

    * 'master' of https://github.com/CS2103AUG2017-T11-B3/main:
      added coverall link
      changed import order
      changed some indentations
      some changes
      added findTag command
      added a backup storage

[33mcommit 13982161f98368b0f55ea1751a0db953989e4aa4[m
Merge: 672ef44 0cad859
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 15:46:59 2017 +0800

    Merge branch 'master' of https://github.com/tpq95/main into v1.1.1-test

    * 'master' of https://github.com/tpq95/main:
      update DG

[33mcommit 0b637290650993db7f92db717e38f99d4dcfc0a0[m
Author: TBY\User <tby1994@gmail.com>
Date:   Fri Oct 13 14:54:58 2017 +0800

    Added my handsome photo

[33mcommit 672ef44bd2041eadf38e2888769d0f2ccf378250[m
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 14:20:40 2017 +0800

    update codestyle DetagCommandTest

[33mcommit eef4cad2caab98521f1821149d4e69fb39493c90[m
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 14:17:13 2017 +0800

    update DetagCommandTest code style

[33mcommit 716b5bc90bc9ea7debfd1fb1f8a52ceb02e44481[m
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 14:10:15 2017 +0800

    update ModelManager.java style

[33mcommit 1886c2d21042395d246882cbf008f321e4edbac2[m
Author: peiquan <peiquan@r-130-104-25-172.comp.nus.edu.sg>
Date:   Fri Oct 13 13:54:24 2017 +0800

    remove Logger in DetagCommandTest.java

[33mcommit 06833b5ffaa323b3510f42cbdca6447e20465015[m
Author: peiquan <peiquan@r-130-104-25-172.comp.nus.edu.sg>
Date:   Fri Oct 13 13:53:39 2017 +0800

    update DetagCommand.java message when successfully executed
    update ModelManager.java
    update DetagCommandTest.java: include logging and update test cases

[33mcommit ce7a74802dde4f1f4a9d829bb5105e814c7d197e[m
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 00:21:08 2017 +0800

    update code according to online continuous integration

[33mcommit 84604644b8353514d5aaf2147c4efd88c381a79c[m
Author: peiquan <peiquan@hiei.local>
Date:   Fri Oct 13 00:06:49 2017 +0800

    update format and import

[33mcommit 27632b162d628654ce54bce37a1f92255ae8ffab[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:55:08 2017 +0800

    update whitespace

[33mcommit 57d0291c682d4d5df8a8e5054e69f87d937f1be5[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:51:11 2017 +0800

    manual pull FindTagCommand to resolve conflicts

[33mcommit 09e7579e4f55e7ab671a418e4cec89bc1429f027[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:41:02 2017 +0800

    update imports

[33mcommit 5d96e685344ed32bd8ce10db66723d688fae7460[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:34:16 2017 +0800

    update addressbookparser.java

[33mcommit 6bec30c6306918216d76a03e1d51a78794303910[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:33:02 2017 +0800

    resolve conflict with main

[33mcommit 7dbcf0d1d75821693f93627f916bfd13c5e939d6[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:30:48 2017 +0800

    update imports order

[33mcommit 75fe946ce67d3406bc65fb3c68ccf1247dadecbb[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 23:24:26 2017 +0800

    Modified test cases

[33mcommit 11aaa43632ba7a4dc45d9437a0b1759589ed1973[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:24:13 2017 +0800

    update whitespaces and imports order

[33mcommit 567b7e3496495dcb9e465081c34f2d986eb04d3f[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:11:57 2017 +0800

    resolve conflict with imports of AddressBookParser

[33mcommit d2682a7a9a2247077081c56b092b45dcec567215[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 23:11:24 2017 +0800

    Updated test file

[33mcommit 79fe4b810bba6942c8262f8823de2a39e78b6a66[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 23:07:59 2017 +0800

    Removed some unnecessary test cases

[33mcommit b5ce71061397a99b9894b95ef173e7ae970cc690[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 23:06:25 2017 +0800

    update DG

[33mcommit bc664f47c524b39fc5fb1f5ee133be73d6930c34[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 22:58:44 2017 +0800

    add DetagCommandTest.java
    update TypicalIndexes.java to accommodate for detag test

[33mcommit 95eac2f294253051acc7f60dbab97d19042341e8[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 22:10:58 2017 +0800

    Changed indentation

[33mcommit 2a2e8452112769de9600e7f9034e82a99716b80e[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 22:06:22 2017 +0800

    Changed indentation

[33mcommit 70734f9ed53c4299b5a95dfb04d0a1c6986dcf0f[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:57:29 2017 +0800

    Changed indentation

[33mcommit df6b1a11f5ca27478e8758a9c1e0a395ca0c4340[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:44:49 2017 +0800

    Changed coding style

[33mcommit e886432e8f6dde584990c773df04741545c6bb8c[m
Merge: b267c97 69f3660
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:39:21 2017 +0800

    Merge branch 'FindTagCommand' of https://github.com/tby1994/main into FindTagCommand

    # Conflicts:
    #       src/main/java/seedu/address/logic/commands/FindTagCommand.java
    #       src/main/java/seedu/address/logic/parser/FindTagCommandParser.java
    #       src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java

[33mcommit e4e8605916f2c916d7198fd9c6174758b6721ea5[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 21:33:03 2017 +0800

    update DG

[33mcommit b267c97f285eb14245cecc581fcac91e569b0b01[m
Merge: beb4758 add44fa
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:33:02 2017 +0800

    Merge branch 'master' of https://github.com/CS2103AUG2017-T11-B3/main into FindTagCommand

    # Conflicts:
    #       src/main/java/seedu/address/logic/commands/FindTagCommand.java
    #       src/main/java/seedu/address/logic/parser/FindTagCommandParser.java
    #       src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java

[33mcommit 0cad8590a849069fb0a9b127f3b4f21d350b34f6[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 21:31:42 2017 +0800

    update DG

[33mcommit beb4758763f7d823b31bd5715b9621b650e852a4[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:23:17 2017 +0800

    Modified coding standard

[33mcommit 69f366037b6b969517941514b6cc4542330d217f[m
Merge: 9bb6a7e add44fa
Author: tby1994 <31119218+tby1994@users.noreply.github.com>
Date:   Thu Oct 12 21:16:29 2017 +0800

    Merge branch 'master' into FindTagCommand

[33mcommit e7d72538b080328a038067d32e5d34a6b0747e4b[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 21:14:20 2017 +0800

    add DetagCommand and update relevant parsers

[33mcommit 9bb6a7ec4989bc39d41b39deff347f450c0e54ee[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:14:13 2017 +0800

    Modified FindTagCommandPaser to resolve conflict

[33mcommit 9274aee9242f50b29537dbcb7a4736422b69e111[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 21:04:02 2017 +0800

    Resolved some conflicts

[33mcommit e07efea80073e28c6782f0cd1e42b8f29b63385d[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 20:58:39 2017 +0800

    Modified test cases coding standard

[33mcommit 5a69ffa6674f6d668c801591c59cd55719d47afd[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 20:49:09 2017 +0800

    Updated test cases

[33mcommit 03604e7baa7658f7f74c6d16015e041823014e8d[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 20:48:56 2017 +0800

    Included case insensitive feature in the find tag command

[33mcommit 2d35120f7cb3ab9022eef294acc24310e66c8a6d[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Thu Oct 12 20:46:03 2017 +0800

    updated user guide

[33mcommit 43a64982ecb8b5608fc8b4e5ed40f89fe95f119c[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 20:19:21 2017 +0800

    add profile pic

[33mcommit c68b49462f3347c887d796260a9812e8a7547ff3[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Thu Oct 12 19:58:34 2017 +0800

    uploaded my photo into images folder

[33mcommit c291e4f69301582bb99de010b27d1ce8dd90c58c[m
Author: DESKTOP-JENMVTR\User <tby1994>
Date:   Thu Oct 12 19:26:47 2017 +0800

    added incomplete Junit test for find tag feature

[33mcommit add44fa0fcad7962f86ebe5e5485ed74a1f90337[m
Merge: 0e5e887 cfc47eb
Author: tby1994 <31119218+tby1994@users.noreply.github.com>
Date:   Thu Oct 12 19:14:15 2017 +0800

    Merge pull request #11 from eryao95/new_findTag_Command

    New find tag command

[33mcommit 6106ffae479fbff75a5b01226a6a2c629d956d4b[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 19:05:11 2017 +0800

    add addTag(), deleteTag() in Model: allowing adding/deleting of tag of specific person without adding/removing person
    update AddCommandTest.java: to accommodate for the new methods

[33mcommit 294dd95062dce9c9b3b2bb82973ede4d882f9b46[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 12 19:02:53 2017 +0800

    update DarkTheme.css: fix color matching of gui when find command return null
    update PersonCard.java: introduce colors to tags, allowing same tag to be of same color

[33mcommit 0e5e8879625616a6b560144c9c43785f1f3b616a[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 12 16:02:10 2017 +0800

    added coverall link

[33mcommit cfc47ebe253a0389a7f1707eadda35c7e4e4b705[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Thu Oct 12 07:45:15 2017 +0800

    changed import order

[33mcommit 7fa803176c4dac0fa71cccf668ed8e7bebead5e5[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Thu Oct 12 07:43:05 2017 +0800

    changed some indentations

[33mcommit 34e40d7e08a2d4feb61e89704670a072bd8fecf9[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Thu Oct 12 07:36:14 2017 +0800

    some changes

[33mcommit bc15168e5128783599999f7ad4a9c8da4517c879[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Thu Oct 12 07:27:36 2017 +0800

    added findTag command

[33mcommit e2febd46d35bdedfe47c3a365c19aa43c9a2ae8e[m
Merge: 175af60 26e0a21
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 12 04:49:23 2017 +0800

    Merge pull request #2 from tpq95/revert-1-v1.1-enhancement

    Revert "V1.1 enhancement"

[33mcommit 26e0a21fff18ac976248cca42bc2c1eb6919f22d[m
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 12 04:44:52 2017 +0800

    Revert "V1.1 enhancement"

[33mcommit 175af605408adaed5c6e9501247ef2c7703a9152[m
Merge: 9580ab9 f51cbbd
Author: tpq95 <31122808+tpq95@users.noreply.github.com>
Date:   Thu Oct 12 04:33:30 2017 +0800

    Merge pull request #1 from raisa2010/v1.1-enhancement

    V1.1 enhancement

[33mcommit f51cbbd69166e384d7c104953b7d85012c35e710[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 12 04:13:50 2017 +0800

    completed logic for tagging multiple contacts

[33mcommit ae2690deef60c1bebb2392620494c387aec5415a[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 01:34:25 2017 +0800

    Changed indentation AGAIN

[33mcommit 1ef93569af281c37809011d7676957d28236e7f7[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 01:32:19 2017 +0800

    Modified some indentation

[33mcommit ab6aa1fd2860e0f5a33e49fd40492a3c8df6b0d8[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 01:26:32 2017 +0800

    Changed some of the coding style

[33mcommit 1f7009975585f1bb6f2964c1eda55425179ead8a[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Oct 12 01:11:45 2017 +0800

    Added FindTag feature

[33mcommit c44b07e54e0ad88da162f0c855f85c58044df020[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 12 01:09:36 2017 +0800

    edited TagCommandParser to parse multiple indices

[33mcommit e454ed89a7efdebbb1105477bae73272a12589bc[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 23:52:37 2017 +0800

    edited AddressBookParser and started on TagCommandParser

[33mcommit 366e4ba8f00914bc1ee79599747cb10dc8db2133[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 22:37:45 2017 +0800

    modified AddressBookParser to accept new TagCommand

[33mcommit 9b50f9ac85872f6325e1ccc7fe5603ba9b592856[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 22:33:38 2017 +0800

    created dummy tagCommand class

[33mcommit e1ffe8853ac1ba309422890ec8c7e58561625d61[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Wed Oct 11 21:01:29 2017 +0800

    changed bakup storage

[33mcommit b711cbd91eb960f76d9c12e79a80431ab1bf096d[m
Merge: c8eaeae 4fd046c
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 09:46:28 2017 +0800

    Merge https://github.com/CS2103AUG2017-T11-B3/main

[33mcommit 4fd046cb13b43c5fe6f53a9317d47314e4dbdb2c[m
Merge: 30d3a18 9580ab9
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 09:43:30 2017 +0800

    Merge pull request #6 from tpq95/document-v1.0

    update some user story and use case

[33mcommit 30d3a18465b54dcc503101ff85299d44f4d5cc75[m
Merge: e893431 6a4bca0
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 09:34:18 2017 +0800

    Merge pull request #7 from raisa2010/ui-enhancement-error-detection

    [W7.8] Post Review Corrections in UI Enhancement

[33mcommit e8934313d5170b90b0b31d20639b7b1020ad2b4e[m
Merge: 88ac019 3b3b625
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 09:34:03 2017 +0800

    Merge pull request #8 from raisa2010/documentation-update

    [W7.7] Post Review Corrections in Documentation

[33mcommit 9580ab9583bab66f2179524be8a4f92e59bb7a0a[m
Merge: bd847d4 88ac019
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 09:29:32 2017 +0800

    Merge branch 'master' into document-v1.0

[33mcommit 6a4bca05094297134b9134ba570fba701a7dfef2[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 09:07:25 2017 +0800

    replaced instance variable with local variable commandIsInvalid

[33mcommit 90114edebf68c4ed7a0fd8665c50e515dd0f7921[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 08:58:17 2017 +0800

    edited coding style

[33mcommit 3b3b625c6e76e39f3817c18561c3bdbf7f0e37c3[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Wed Oct 11 08:45:14 2017 +0800

    removed 'I can' in user story

[33mcommit c8eaeae8b1b0d4819a99602753d600cda6b395a8[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 11:18:05 2017 +0800

    Update Travis and AppVeyor Links

[33mcommit bd847d42c5d47fbe420636c9a5507d950791261b[m
Author: peiquan <peiquan@hiei.local>
Date:   Thu Oct 5 09:50:28 2017 +0800

    update some user story and use case

[33mcommit 88ac019d04921f6c4141e6a1dd6414210e181a3f[m
Merge: ff3136a f9a8b03
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 09:45:25 2017 +0800

    Merge pull request #5 from raisa2010/documentation-update

    [W7.7] Added User Stories, Use Cases, NFR and Product Survey

[33mcommit f9a8b03421347611c02ad78936413a5e6685df25[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 09:34:06 2017 +0800

    fixed trailing space

[33mcommit 852d9e3e964010e3c02e414cff6d3c8074731bfe[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 09:29:10 2017 +0800

    added product survey

[33mcommit 11f69729d283339f385c22513153cf895b8c289a[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 09:19:04 2017 +0800

    added some non functional requirements

[33mcommit 0b03f1cd52184a2c052ef817ee9fbcf99d44c113[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 09:15:52 2017 +0800

    added some use cases

[33mcommit 84e50a80071d34c951e9c0f3d264a15bc79474a9[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Thu Oct 5 08:16:11 2017 +0800

    added user-stories

[33mcommit a84768fa77d6a5cdc876933e7d6f364189dd39e7[m
Author: eryao95 <e0030855@u.nus.edu>
Date:   Tue Oct 3 22:16:33 2017 +0800

    added a backup storage

[33mcommit ff3136abad0dea6f24366f9a6e0e608a5f1d77de[m
Merge: c04df4e 3171723
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Tue Oct 3 08:44:36 2017 +0800

    Merge pull request #3 from raisa2010/ui-enhancement-error-detection

    [W7.8] UI Enhancement: ResultDisplay shows different style on error

[33mcommit c04df4eb1e74579b50af6af1b5b58bcc05203515[m
Merge: ba25793 0e659e0
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Tue Oct 3 08:44:19 2017 +0800

    Merge pull request #2 from tpq95/w7.1b

    Add changeTag() to API of model

[33mcommit 3171723dc1c6968da709f0b56af23bdddc41dae0[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Tue Oct 3 07:28:58 2017 +0800

    removed trailing whitespace

[33mcommit 3156929498bb2372229f363ef0eb945a78cb1082[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Tue Oct 3 07:22:49 2017 +0800

    fixed bug relating to restoring default display style after error detection

[33mcommit 5fbffd7567e7b8899b61d2a428bc76da5b9b7c8a[m
Author: Raisa Kabir <raisa.kabir201@gmail.com>
Date:   Mon Oct 2 23:12:17 2017 +0800

    modified UI to have ResultDisplay show a different style on error

[33mcommit 0e659e06417b9846b698c20b26af8226ae264506[m
Author: peiquan <peiquan@hiei.local>
Date:   Sun Oct 1 14:28:12 2017 +0800

    update model stubs in AddCommandTest.java

[33mcommit 117e439c77403e841a66a22e11d7ba7f4eb73230[m
Author: peiquan <peiquan@hiei.local>
Date:   Sun Oct 1 14:24:28 2017 +0800

    add changeTag() to API of Model component

[33mcommit ba2579313f4f89032866c2e318a9b5c005485f3b[m
Merge: c1bb12d 7204575
Author: eryao95 <31096282+eryao95@users.noreply.github.com>
Date:   Thu Sep 28 16:33:13 2017 +0800

    Merge pull request #1 from tby1994/Remove_case_sensitive_command

    Remove case sensitive command

[33mcommit 7204575d98a9754660320780d08da177a1eed370[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Sep 28 16:26:24 2017 +0800

    Updated test cases

[33mcommit 7301826e4fd5b6b172ab77a35da947f434d254c9[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Sep 28 16:19:19 2017 +0800

    Updated test cases for the case insensitive commands

[33mcommit abbcced890f253a6804a3481aecd8af2fc395b40[m
Author: TBY\User <tby1994@gmail.com>
Date:   Thu Sep 28 15:07:16 2017 +0800

    Remove case sensitive command

[33mcommit c1bb12dab64dff38458bb59063542ea6f8e6077f[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Tue Sep 12 22:06:46 2017 +0800

    build.gradle: upgrade TestFX to 4.0.7-alpha

    TestFX 4.0.7-alpha has been released. Besides being the latest and
    greatest version, 4.0.7-alpha also contains a proper working headless
    mode for Linux.

    Without this upgrade, attempting to run `./gradlew headless guiTests` on
    Linux would result with the GUI tests failing with the following
    exception:

            java.lang.RuntimeException: java.lang.RuntimeException: java.lang.IllegalAccessException: Class org.testfx.toolkit.impl.ApplicationLauncherImpl can not access a member of class com.sun.glass.ui.monocle.HeadlessPlatform with modifiers ""

                Caused by:
                java.lang.RuntimeException: java.lang.IllegalAccessException: Class org.testfx.toolkit.impl.ApplicationLauncherImpl can not access a member of class com.sun.glass.ui.monocle.HeadlessPlatform with modifiers ""

                    Caused by:
                    java.lang.IllegalAccessException: Class org.testfx.toolkit.impl.ApplicationLauncherImpl can not access a member of class com.sun.glass.ui.monocle.HeadlessPlatform with modifiers ""

    Let's upgrade TestFX to 4.0.7-alpha to have happy Linux developers.

    This working headless mode was also present in the 4.0.6-alpha, but we
    couldn't upgrade to it as it broke our gui tests. (See e1eafd1 ([#353]
    All gui tests are failing  (#354), 2017-03-23))

    Furthermore, since headless mode now works on Linux, our Travis CI
    builds do not need to run xvfb any more. As such, let's remove its usage
    from .travis.yml.

[33mcommit dd162d5483acb85aa60a3bdda8b2f83cb4db568f[m
Merge: 71dceb2 e018385
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 22:58:08 2017 +0800

    [#698] Update User Guide (#703)

    Some parts of the UserGuide are inconsistent, and some segments can be
    written clearer.

    Let's update it.

[33mcommit e01838596ae5f036ed8658c4bbd4907dbeb7eefb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:32:14 2017 +0800

    UserGuide: Update broken link

    This link breaks on the offline version.

[33mcommit 73c179f703e5d13955ce785c340eeff8152f290b[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:20:03 2017 +0800

    UserGuide: Fix typo

[33mcommit 9cbbf8a9c9a32a4fa76fe581ee2832951ffc7efb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:19:56 2017 +0800

    UserGuide: Update find command example

[33mcommit 1390523cb86b9b6993ea61e2c8b722b628c63dc9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:18:06 2017 +0800

    UserGuide: Update Command Format

[33mcommit 2a4e8fd7a954030367061ae379eb8172542f7b07[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:15:07 2017 +0800

    UserGuide: Improve clarity and readability

[33mcommit cfcebedbfba50afe2b07bdc149ab43b9ef0d06ef[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:14:23 2017 +0800

    UserGuide: Update command headers

[33mcommit f1e11184e4199f318ad5257310ac57dd1a62a29a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:40:49 2017 +0800

    UserGuide: Add EditCommand to Command Summary

    This was missing.

[33mcommit 71dceb204436ea8c1f55000d83011955288a0c62[m
Merge: 921211b dc7d5f7
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 22:19:14 2017 +0800

    Update Developer Docs #700

    Extracted/reordered/rephrased content to improve readability. Also
    updated outdated information in DeveloperGuide.

[33mcommit dc7d5f7ddb5d4bb63c9256517a3068fe111fcd0e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 21:07:52 2017 +0800

    DeveloperGuide: Update outdated information

[33mcommit c142d9f45a1854575b5a266e5aeabc16b7d7c635[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 21 16:04:42 2017 +0800

    docs: restructure dev docs

[33mcommit 921211be662eff61b06546952e7d2c6f4d191d39[m
Merge: 1488051 2e608f0
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 22:03:56 2017 +0800

    Update LearningOutcomes.adoc (#699)

[33mcommit 1488051e2795c1e41d82850f949a9de157516050[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 20:45:02 2017 +0800

    [#672] DeveloperGuide: Update instructions on setting up (#691)

    HelpWindowTest fails if the processResources task isn?t executed by
    Gradle before the test runs.

    This isn?t documented in the DeveloperGuide, which may cause confusion
    to future developers if they encounter this issue.

    Let?s update the setting up instructions in DeveloperGuide to reflect
    this issue.

[33mcommit 2e608f0badfae4d030f22ed72d7836d1d34afa13[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:29:37 2017 +0800

    LearningOutcomes: Update System Tests

[33mcommit 3f8b0ee31b2167b908574c446d919f50991ce309[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:29:17 2017 +0800

    LearningOutcomes: Update LogicManagerTest

[33mcommit e1bff8fe57f5bc9c03ca47b84d4316b7d6c92263[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:28:38 2017 +0800

    LearningOutcomes: Fix method reference in documentation

[33mcommit 57e71f4811eb4380a8fea20ffc428940c98abe52[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:28:01 2017 +0800

    LearningOutcomes: Fix typo

[33mcommit 467805643b20219c425c151269141483c51f9fe6[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:26:58 2017 +0800

    LearningOutComes: Remove redundant instructions

    The hyperlink to the instructions are given just a few lines above this
    line.

[33mcommit c2de0d491991e48ab8f1c5310a6e94c47ce81909[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 19:25:46 2017 +0800

    LearningOutComes: Add hyperlink to EventsCenter

    This allows students to access EventsCenter.java easily.

[33mcommit ae25c1619a8d9c254f49540dd9c4dcd82b964755[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 21 11:22:34 2017 +0800

    LearningOutcomes.adoc: tweak to refer to se-book

[33mcommit 8b11b6b85ada2aa52e27198f71e2cd7268c4c90c[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Sep 21 16:48:10 2017 +0800

    [#680] HelpWindowTest: Write header comments concerning possible test failure (#694)

    HelpWindowTest fails on certain computers. The cursor does not move to
    the correct location, resulting in the wrong UI component being
    clicked. We suspect this to be a bug in the TestFX library.

    This causes the wrong UI component to be in focus, which leads to a
    test failure.

    Let's show an error message when the test fails.

[33mcommit 56949f20b39a3635975f32e278fb8543a3606e27[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Thu Sep 21 09:42:48 2017 +0800

    [#319] Checkstyle: enforce one variable declaration per line (#671)

    Having several variables are on the same line risk having conflicts
    for unrelated modifications by different developers.

    This rule checks for multiple variable declarations on single lines
    such as these,

    int a; int b;
    int a, b;

    while still allow multiple variable declarations on single statements
    such as these,

    int a,
         b;

    Let's teach Checkstyle to enforce the rule
    MultipleVariableDeclarations to check that there are no multiple
    variable declarations on single lines.

[33mcommit 1b9b5c38f14de086fddb4f7d387e140a7529b4b5[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 20 22:35:59 2017 +0800

    [#675] GuiUnitTest: Clears subscribers from EventsCenter after each test (#697)

    EventsCenter is a Singleton object, which is a possible cause of state
    leaks between tests as the state of the static objects are preserved
    across tests.

    EventsCenter isn?t cleared after each GuiUnitTest is executed, as such
    it stores a reference to its? subscribers, which causes these objects
    to not be removed by Garbage Collection after the test is done
    executing. This causes AddCommandTest to fail when run locally on
    IntelliJ together with other tests.

    Let?s update GuiUnitTest to clears subscribers from EventsCenter after
    each test.

    Credits of debugging this issue goes to @pyokagan.

[33mcommit d1ede94244fb0bb0c28538828ca2a7c0af09fcb1[m
Merge: c56aa3f 5ef9d78
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 20 22:34:15 2017 +0800

    DeveloperGuide: Update converting docs instructions to use local files (#676)

    We use GitHub pages to print out the PDF version of the
    documentations.

    It is easier for developers to simply generate the PDF files directly
    using their local files without having to go through the steps of
    publishing the documentation on GitHub Pages.

    Let's modify the instructions under "Converting Documentation To PDF
    format" to use local html files instead.

[33mcommit 5ef9d78de051221fe861c04a12d5de9c49037fdf[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Wed Sep 20 16:32:44 2017 +0800

    DeveloperGuide: modify converting docs instructions to use local files

    We use GitHub pages to print out the PDF version of the
    documentations.

    It is easier for developers to simply generate the PDF files directly
    using their local files without having to go through the steps of
    publishing the documentation on GitHub Pages.

    Let's modify the instructions under "Converting Documentation To PDF
    format" to use local html files instead.

[33mcommit 41e8df9b94dc070384ecb2bbb51ac07166888229[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Mon Sep 18 13:38:01 2017 +0800

    DeveloperGuide: update figure number

[33mcommit c56aa3f9e869959d699a5884d60102391aee0f0c[m
Merge: 0608f61 48237d0
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 20 16:17:59 2017 +0800

    Documentation: Update instructions on deploying to GitHub Pages (#673)

[33mcommit 48237d005cbb6c812ad70b1f011d381081ccb17f[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Mon Sep 18 00:52:04 2017 +0800

    DeveloperGuide: update Publishing Documentation

[33mcommit 46d34e00e3a9d058f88c85464b7f9e397d0626ee[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Tue Sep 19 12:35:52 2017 +0800

    UsingTravis: add Deploying GitHub Pages section

[33mcommit b090f07e202379a1e6a97bbbac040343c8edbcc1[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Mon Sep 18 00:48:03 2017 +0800

    Remove UsingGithubPages.adoc

[33mcommit 0608f618270dca1b1558d3183dd8595713f8a72d[m
Merge: 726daed 26ed50f
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Sep 19 23:22:25 2017 +0800

    DeleteCommandSystemTest: Replace Assume with Assert (#693)

    We use Assume to show that a precondition is met before executing a
    test.

    Assume should not be used in test cases as the Travis build passes even
    if tests are ignored. This forces developers to have to manually
    verify each Travis build to ensure that no tests are ignored.

    Let?s replace Assume with Assert.

[33mcommit 26ed50f9b44b666c577eebfa4eb1c8009afcb20a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Sep 19 22:01:28 2017 +0800

    DeleteCommandSystemTest: Replace Assume with Assert

    We use Assume to show that a precondition is met before executing a
    test.

    Assume should not be used in test cases as the Travis build passes even
    if tests are ignored. This forces developers to have to manually
    verify each Travis build to ensure that no tests are ignored.

    Let?s replace Assume with Assert.

[33mcommit 726daedb1e40c818a67ab1e8017229a9f55c5793[m
Merge: 9d0d80c baaaffe
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Sep 19 21:52:39 2017 +0800

    [#678] SampleDataTest: Fix buggy implementation of getDataFileLocation() (#679)

    getDataFileLocation() must return a non-existent file location as part
    of this method's post-condition.

    However, this isn't ensured in the current implementation. As a result,
    the test case in SampleDataTest may fail.

    Let's update getDataFileLocation() to ensure that it returns a
    non-existent file location.

[33mcommit 9d0d80c2ed5761f70b4f4a1fdb90fead79c61dbc[m
Merge: 705f37c 8bc11d6
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Sep 19 21:41:01 2017 +0800

    EditCommandSystemTest: Replace assert with junit.Assert (#689)

    We use assert to show that a precondition is met before executing a
    test.

    Asserts should not be used in test cases as they can be disabled.

    Let?s replace assert statements with junit.Assert

[33mcommit baaaffebdf1500b657b10120dfd7e8772522a812[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 18 17:42:51 2017 +0800

    SampleDataTest: Fix buggy implementation of getDataFileLocation()

    getDataFileLocation() must return a non-existent file location as part
    of this method's post-condition.

    However, this isn't ensured in the current implementation. As a result,
    the test case in SampleDataTest may fail.

    Let's update getDataFileLocation() to ensure that it returns a
    non-existent file location.

[33mcommit 8bc11d6f6b8dfd1640e4bf449c39ab695e8c8e24[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Sep 19 11:13:40 2017 +0800

    EditCommandSystemTest: Replace assert with junit.Assert

    We use assert to show that a precondition is met before executing a
    test.

    Asserts should not be used in test cases as they can be disabled.

    Let?s replace assert statements with junit.Assert

[33mcommit 705f37c3b954aca71277cbad7e883b242539eb0e[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Sep 19 13:08:08 2017 +0800

    [#677] Gradle configuration: Fix nonGuiTests (#666)

    The command `gradle nonGuiTests` is expected to execute only non GUI
    tests. However, it is currently executing GUI tests as well.

    Let?s update this task to exclude the execution of GUI tests.

[33mcommit f44a524b29127d154a6858f036b535f2bf62dd9d[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 13 20:42:31 2017 +0800

    DeleteCommandSystemTest: Replace assert with Assume

    We use assert to show that a precondition is met before executing a
    test.

    Asserts should not be used in test cases as JUnit?s Assume class
    provides the same functionality, and it conveys the message that a
    particular condition needs to be met before the test is executed.

    Let?s replace assert statements with Assume.

[33mcommit 4334a642340a8b11fb2c8bb10f75abdeb6f73e70[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 13 20:38:16 2017 +0800

    AddressBookSystemTest: Extract common test helper methods

    System tests manually execute FindCommand, ListCommand and SelectCommand
    to set up the some of the tests.

    It is unnecessary for these tests to know the exact command to execute
    to set up the tests.

    Let?s extract the execution of these commands to AddressBookSystemTest
    to provide a layer of abstraction for these system tests.

[33mcommit 11f1e7c2c842faa5bd547cea6f911bb473750abc[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 15:40:35 2017 +0800

    AddressBookSystemTest: Remove getTestApp()

    All test classes call getTestApp()#getModel() to retrieve the model.

    This is unnecessarily long. Also, it?s unnecessary for these test
    classes to be aware of what a TestApp is.

    Let?s replace getTestApp() with getModel(), which retrieves the
    testApp?s model directly.

[33mcommit 44b7dcda16e7022f6d7ef3c417b635b24d91a786[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 13:56:35 2017 +0800

    DeleteCommandSystemTest: Remove String#valueOf(int) call

    We convert an int value to a String by calling String#valueOf(int) when
    we are creating a command.

    This method call is unnecessary as the integer value is automatically
    converted to a String.

    Let?s remove the call to String#valueOf(int).

[33mcommit e57cdf5677ed4d473d33161607924ebe903377e3[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 13:52:09 2017 +0800

    DeleteCommandSystemTest: Segment test cases

    There are many tests cases in the test method.

    Without segmenting the tests, it is harder for future readers to know
    what we are testing.

    Let?s segment the test cases to improve readability of the test cases.

[33mcommit 48abf5a3d160c77f529803d1825ed8b514848f6e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 13:47:01 2017 +0800

    DeleteCommandSystemTest: Update test verification method comments

    The javadoc comments for test verification methods are written in a
    paragraph.

    This makes it hard to read, especially since it's quite long.

    Let's improve readability by making it into point forms instead.

[33mcommit 31efee105e7ead4ee458ca2de957c3dded46a109[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 13:43:05 2017 +0800

    DeleteCommandSystemTest: Rename variable commandToRun to command

    assertCommandSuccess(...) and assertCommandFailure(...) takes in a
    String named commandToRun.

    This variable is unnecessarily long; naming it as command is
    sufficiently descriptive.

    Let's update commandToRun to command.

[33mcommit 3e4e6c86318216427c8ab1d4b4482636b4dfd3dc[m
Merge: 66d24fc 8c15810
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 18 22:27:39 2017 +0800

    [#660] Update AboutUs.adoc (#661)

    The AboutUs page has a different format compared to other versions of
    AddressBook.

    This is untidy.

    Let's convert AddressBook - Level4's AboutUs page to be of the same
    format as that of other versions of AddressBook. Also, as this project
    is expected to be forked and worked on by students, let's also add a
    sample page format by updating existing names and images to use
    placeholder names and images.

[33mcommit 8c158106ad43c1db8f3e2f20f8759bdd3df8b6db[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 13 21:08:43 2017 +0800

    Update AboutUs.adoc

    The AboutUs page has a different format compared to other versions of
    AddressBook.

    This is untidy.

    Let's convert AddressBook - Level4's AboutUs page to be of the same
    format as that of other versions of AddressBook. Also, as this project
    is expected to be forked and worked on by students, let's also add a
    sample page format by updating existing names and images to use
    placeholder names and images.

[33mcommit 66d24fc7d51db891f93095d29344300e63ce1049[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Sun Sep 17 18:21:28 2017 +0800

    [#319] Checkstyle: enforce single statement per line (#669)

    It's difficult to read multiple statements on a single line. Also,
    single statement per line means fewer merge conflicts to clean up.

    Let's teach Checkstyle to enforce the rules OneStatementPerLine to
    maintain the single line statements practice in our code.

[33mcommit ba2559428a75d9e3f0e2c5fd21ffb9bbd9a115db[m
Merge: a0fda2d 3a347a8
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 17:28:46 2017 +0800

    [#608] Developer Guide: Fix formatting errors in the use case (#662)

    There are formatting errors in the use cases. For example, some use
    cases are not properly indented.

    Let's fix them.

[33mcommit 3a347a81c3a75a38fe052bd6ac771ad94b37dc65[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Sep 2 22:36:47 2017 +0800

    DeveloperGuide: Fix formatting errors in the use case

    There are formatting errors in the use cases. For example, some use
    cases are not properly indented.

    Let's fix them.

[33mcommit a0fda2db0fca2940013c90cf28c93510281c3bb5[m
Merge: 135f5d7 f8b29a6
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 09:41:05 2017 +0800

    [#461] Developer Guide: Fix unintended quote marks (#656)

    There are no quotes in the Developer Guide, but there are quote marks
    in it.

    This is misleading.

    Let's remove these quote marks.

[33mcommit f8b29a62da1cea2d5b90b17356ad6c958576b4f7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 4 09:34:01 2017 +0800

    Developer Guide: Fix unintended quote marks

    There are no quotes in the Developer Guide, but there are quote marks
    in it.

    This is misleading.

    Let's remove these quote marks.

[33mcommit 135f5d735bdd275eb58f126fecb81fedd00c2a67[m
Merge: 8e7dc86 c07e146
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 09:18:49 2017 +0800

    [#551] Convert EditCommandTest to EditCommandSystemTest (#655)

    Tests in the 'guitests' packages, such as EditCommandTest, merely
    concern themselves with the relevant GUI components and the model, and
    do not verify other parts of the application (e.g. storage, status bar,
    ...).

    They do not fully qualify as system tests, and we already have
    unit tests and integration tests for commands, thus making them
    redundant. Also, without any system tests in the codebase, we are unable
    to demonstrate to the students how one should be written.

    Let's convert EditCommandTest to a system test.

[33mcommit c07e1463923e1cab7bb65d167ce6f57d35c18287[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Sep 2 11:26:42 2017 +0800

    Convert EditCommandTest to EditCommandSystemTest

[33mcommit 8e7dc8636eec6bee6faed5582f79f4c07bd72ca5[m
Merge: bfaee14 8915a7d
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 8 08:18:10 2017 +0800

    [#641] DeleteCommandSystemTest: Add missing test case (#657)

    DeleteCommandSystemTest is missing test cases pertaining to filtered
    lists. There are also other minor issues in the code, such as calling of old
    API which is unnecessarily long, and violation of DRY principle.

    Let's write the missing test cases and fix these issues.

[33mcommit bfaee145bbc4be28b9826ac8780946133a69f805[m
Merge: e3f161f d33ffaf
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Sep 6 09:04:19 2017 +0800

    [#649] Remove UnmodifiableObservableList (#652)

    FXCollections#unmodifiableObservableList(ObservableList<E>) returns an
    unmodifiable wrapper list on top of provided observable list. This
    works similarly to UnmodifiableObservableList in our code base.

    There is no need for us to use our own version of
    UnmodifiableObservableList.

    Let's update classes to call this method in FXCollections to create an
    unmodifiable ObservableList instead of using
    UnmodifiableObservableList. Then, let's delete
    UnmodifiableObservableList.

[33mcommit d33ffaf0dcc22018968ddf758f8ac424545ccf96[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 1 16:27:19 2017 +0800

    Delete UnmodifiableObservableList

    This class is unused.

[33mcommit 40bf2a16cbd5e078853b2dbf94092528712ae8c2[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 1 17:08:34 2017 +0800

    Update classes to not use UnmodifiableObservableList

    FXCollections#unmodifiableObservableList(ObservableList<E>) returns an
    unmodifiable wrapper list on top of provided observable list. This
    works similarly to UnmodifiableObservableList in our code base.

    There is no need for us to use our own version of
    UnmodifiableObservableList.

    As part of deleting UnmodifiableObservableList, let's update classes to
    call this method in FXCollections to create an unmodifiable
    ObservableList instead of using UnmodifiableObservableList.

[33mcommit c1df3f4d1da28933b75c1d7d59e1e00f3a38f45b[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 1 15:03:35 2017 +0800

    UniquePersonList: Update asObservableList() return type

    asObservableList() returns an UnmodifiableObservableList<Person>.
    Callers can access the Person objects inside the list and modify them,
    causing the internal list in UniquePersonList to be updated as well.

    This is a potential cause of bugs.

    Let?s update this method to return
    UnmodifiableObservableList<ReadOnlyPerson> instead.

[33mcommit 3b27d4102a9e69eecb2380ac1a5bb88e7aa723df[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Sep 1 15:01:01 2017 +0800

    DeleteCommand and SelectCommand: Don?t use UnmodifiableObservableList

    executeUndoableCommand() and execute() in DeleteCommand and
    SelectCommand respectively call Model#getFilteredPersonList() and
    assigns it to a variable of type UnmodifiableObservableList.

    There is no need for these commands to assign the variable to such a
    specific type; in the event when Model#getFilteredPersonList() is
    updated to return another type of List, these Commands will need to have
    their code updated as well.

    Let?s update the variable to be of type List instead.

[33mcommit 8915a7d7db28baba7629548ac6b5b92a583fe995[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 4 10:56:45 2017 +0800

    DeleteCommandSystemTest: Add missing test cases

[33mcommit ad591fb53879ac039f1b9ddb4effeb0d019800c3[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 4 10:47:45 2017 +0800

    DeleteCommandSystemTest: Add overload assertCommandSuccess(Index)

    There are repeated code in the test method.

    This violates the DRY principle.

    Let?s refactor the repeated code out into a new overload test
    verification method.

[33mcommit 030f8621cfc60f541bac4d324a2e9311cca64d57[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 4 16:43:44 2017 +0800

    DeleteCommandSystemTest: Update the use of expectedModel

    This variable is used throughout the test.

    This makes it hard to keep track of what the expectedModel is currently
    storing, since some of the test cases use the expectedModel object
    that is constructed few test cases before itself.

    Let?s replace the use of expectedModel with other more meaningful
    variables.

[33mcommit dbaeba1680f1cb0df7a2fa14bb0773a9d2ca9ae8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 4 19:55:21 2017 +0800

    DeleteCommandSystemTest: Update creation of ModelManager

    ModelManager objects are created by calling the constructor.

    This makes the code look unnecessarily long as we have to pass in the
    expected address book as the parameter when constructing the
    ModelManager object.

    Let?s update the creation of ModelManager objects by calling
    getTestApp()#getModel() instead. This method returns a defensive copy
    of the current model.

[33mcommit e3f161f0a40f6103002f26f0ba86fc4a5b92908c[m
Merge: b2a141a d8a4602
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Sep 4 09:40:48 2017 +0800

    [#603] Developer Guide: Document previewing of .adoc files (#654)

    Students may not know how to preview .adoc files locally. As such, they
    might push the changes to their repo every time they make a change to
    preview the changes that they have made.

    This is inefficient.

    Let's add a section in Developer Guide to teach the students on more
    efficient ways of previewing the changes that they have made to .adoc
    files.

[33mcommit d8a4602a47abd816b2125720a0ceb5fd0c926148[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Sep 2 22:57:40 2017 +0800

    Developer Guide: Document previewing of .adoc files

    Students may not know how to preview .adoc files locally. As such, they
    might push the changes to their repo every time they make a change to
    preview the changes that they have made.

    This is inefficient.

    Let's add a section in Developer Guide to teach the students on more
    efficient ways of previewing the changes that they have made to .adoc
    files.

[33mcommit b2a141a9516aa5c09472a3b00e0c696e209678a1[m
Merge: 7476e46 90778a6
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Sun Sep 3 17:50:34 2017 +0800

    [#551] Convert AddCommandTest to a system test (#640)

    Tests in the 'guitests' packages, such as AddCommandTest, merely
    concern themselves with the relevant GUI components and the model, and
    do not verify other parts of the application (e.g. storage, status bar,
    ...).

    They do not fully qualify as system tests, and we already have
    unit tests and integration tests for commands, thus making them
    redundant. Also, without any system tests in the codebase, we are unable
    to demonstrate to the students how one should be written.

    Let's convert AddCommandTest to a system test.

[33mcommit 90778a6682680a564876caa5b9ebde811a32de8e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 20:00:54 2017 +0800

    AddCommandSystemTest: Add additional tests

[33mcommit 75fd8630c663124d7edcf20d9e27ba2254d2cbcb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Sep 2 22:08:49 2017 +0800

    AddressBook#addPerson(ReadOnlyPerson): Document bug

[33mcommit c587a0506cee54a37e1d888f742b52a8d5e53132[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 19:31:15 2017 +0800

    Convert AddCommandTest to AddCommandSystemTest

[33mcommit 7476e465730a42788467220baaee089a8edb2bfa[m
Merge: 9ec39d0 559383f
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 31 23:04:51 2017 +0800

    [#551] Convert ClearCommandTest to a system test (#639)

    Tests in the 'guitests' packages, such as ClearCommandTest, merely
    concern themselves with the relevant GUI components and the model, and
    do not verify other parts of the application (e.g. storage, status bar,
    ...).

    They do not fully qualify as system tests, and we already have
    unit tests and integration tests for commands, thus making them
    redundant. Also, without any system tests in the codebase, we are unable
    to demonstrate to the students how one should be written.

    Let's convert ClearCommandTest to a system test.

[33mcommit 559383f29db4e470d5d4ba7da222341503c5b0d7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 19:04:13 2017 +0800

    ClearCommandSystemTest: Add additional tests

[33mcommit 1c8fbf24d0aa63e000fa43b4ddd9a6a91a5b56ae[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 18:21:15 2017 +0800

    Convert ClearCommandTest to ClearCommandSystemTest

[33mcommit 9ec39d08a709dd5bb61cd3c03ef99f6ff1ac05e4[m
Merge: 8ae4284 a3c1fbc
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Aug 30 07:40:22 2017 +0800

    [#551] Convert FindCommandTest to a system test (#638)

    Tests in the 'guitests' packages, such as FindCommandTest, merely
    concern themselves with the relevant GUI components and the model, and
    do not verify other parts of the application (e.g. storage, status bar,
    ...).

    They do not fully qualify as system tests, and we already have
    unit tests and integration tests for commands, thus making them
    redundant. Also, without any system tests in the codebase, we are unable
    to demonstrate to the students how one should be written.

    Let's convert FindCommandTest to a system test.

[33mcommit a3c1fbccf91043411e1cf2d75bc461f771f1a0fd[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 18:00:24 2017 +0800

    FindCommandSystemTest: Add tests involving card selection

[33mcommit 3a33cc50431b78d60fecb0933aaba9fa0f840ef8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 17:25:31 2017 +0800

    FindCommandSystemTest: Add additional tests

[33mcommit 530bf36261417b29e3e23617b023d93e72bdc9e9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 15:38:02 2017 +0800

    Convert FindCommandTest to FindCommandSystemTest

[33mcommit 8ae4284e301fad622341a30431aa690798ced97b[m
Merge: 62263f7 8f4bb16
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 29 11:57:48 2017 +0800

    [#551] Convert SelectCommandTest to a system test (#636)

    Tests in the 'guitests' packages, such as SelectCommandTest, merely
    concern themselves with the relevant GUI components and the model, and
    do not verify other parts of the application (e.g. storage, status bar,
    ...).

    They do not fully qualify as system tests, and we already have
    unit tests and integration tests for commands, thus making them
    redundant. Also, without any system tests in the codebase, we are unable
    to demonstrate to the students how one should be written.

    Let's convert SelectCommandTest to a system test.

[33mcommit 8f4bb16d4087e0e0882a3210d0e4535a43543ab1[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 29 10:51:17 2017 +0800

    DeleteCommandSystemTest: Update assertCommandFailure(...)

    assertCommandFailure(...) creates a defensive copy of the TestApp's
    Model.

    This is unnecessary as TestApp#getModel() returns a defensive copy
    of the TestApp's Model as well.

    Let's shorten the code in assertCommandFailure(...) by simply calling
    TestApp#getModel().

[33mcommit bd9035de414ea669a7871932d2940c310aaae3b9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 18:00:24 2017 +0800

    SelectCommandSystemTest: Add tests involving filtering

[33mcommit 003bac5e67d26a19472e643a6f1fc1512ac83956[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 8 14:37:10 2017 +0800

    SelectCommandSystemTest: Add additional tests

[33mcommit 3263209f1c6f3e03f620b67cbe21f7f90d371fa7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 8 09:44:01 2017 +0800

    Convert SelectCommandTest to SelectCommandSystemTest

[33mcommit 2415b605e3a8ebb92c636cc85ee66f83a52b67cd[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 29 10:10:02 2017 +0800

    AddressBookSystemTest: Rename command box verification methods

[33mcommit 62263f7025ca13858e549a078bdc923439c0b09a[m
Merge: eab2f64 1f60054
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 28 14:53:54 2017 +0800

    [#568] Tests: Update helper methods to throw unchecked Exceptions (#628)

    Helper methods in tests throw checked Exceptions.

    As tests are not expected to handle checked Exceptions, it is
    unnecessary for helper methods to throw checked Exceptions.

    Let's update these helper methods to throw unchecked Exceptions
    instead.

    If tests call methods in the main code base that throw checked
    exceptions, they do not have to wrap the code around a try-catch block
    to rethrow an unchecked exception. This is because it makes the code
    unnecessarily longer. The purpose of this PR is to stop the throwing
    of checked exceptions from propagating, causing the tests and helper
    methods to need to throw them as well.

[33mcommit 1f60054e8af483caeb5d8ae6dd2eb0caa63757ed[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 15 13:16:29 2017 +0800

    Tests: Update helper methods to throw unchecked Exceptions

    Helper methods in tests throw checked Exceptions.

    As tests are not expected to handle checked Exceptions, it is
    unnecessary for helper methods to throw checked Exceptions.

    Let's update these helper methods to throw unchecked Exceptions
    instead.

    If tests call methods in the main code base that throw checked
    exceptions, they do not have to wrap the code around a try-catch block
    to rethrow an unchecked exception. This is because it makes the code
    unnecessarily longer. The purpose of this PR is to stop the throwing
    of checked exceptions from propagating, causing the tests and helper
    methods to need to throw them as well.

[33mcommit eab2f64177d18c07f0aba0357e25408ccc60c8db[m
Merge: d003616 553a75b
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Sun Aug 27 21:39:42 2017 +0800

    [#644] Tidy up System Tests (#645)

    There are some areas of code in system tests that have minor bugs and
    code issues. For e.g. AddressBookSystemTest's header comments is
    outdated and TestApp#getModel() is returning the wrong model.

    Let's fix these minor issues.

[33mcommit 553a75bb5867cd66a12e1e8fd63ce4f767beac29[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 24 09:22:37 2017 +0800

    AddressBookSystemTest: Update application?s clock on command execution

    Test classes have to update the application?s clock after each command
    has been executed. In DeleteCommandSystemTest, the update is called in
    both assertCommandSuccess(...) and assertCommandFailure(...).

    This leads to a lot of code repetition when other system tests are
    implemented, as they will have to update the clock in their own
    implementations of assertCommandSuccess(...) and
    assertCommandFailure(...).

    Let?s update executeCommand(String) to update the application?s clock
    immediately before a command is executed so that test classes do not
    have to update it.

[33mcommit a88eb6f91b7847f0e2bbed3a39538a78f048ef58[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Aug 23 09:52:46 2017 +0800

    AddressBookSystemTest: Add missing wait for browser to load

    When TestApp is initialised, the default browser url page is loaded.

    There is no wait to ensure that this page is loaded before
    assertApplicationStartingStateIsCorrect() is called. This causes a race
    condition: if the page has not been successfully loaded before
    assertApplicationStartingStateIsCorrect(), this assertion method will
    fail.

    Let's teach AddressBookSystemTest to wait for the browser to load
    before calling assertApplicationStartingStateIsCorrect().

[33mcommit 5bdfdc9d9b6a333c5edd06e130264873a5879399[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Aug 23 09:49:52 2017 +0800

    AddressBookSystemTest: Wait for browser to load after command execution

    Test classes have to call
    WebViewUtil#waitUntilBrowserLoaded(BrowserPanelHandle) whenever a
    command that causes the browser to load a new page is executed.

    This causes code repetition when other test classes are implemented.

    Let?s shift this method call to executeCommand(String), so that this
    method only returns after the browser has loaded.

    Also, let?s enhance the concurrency check so that
    WebViewUtil#waitUntilBrowserLoaded(BrowserPanelHandle) does not have to
    manually reset the boolean concurrency variable.

[33mcommit 4002c7ae3f3eebdedc5651cc9bc541c904dff08a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 22 15:38:02 2017 +0800

    TestApp#getModel(): Return actual model

    This method returns a defensive copy of the model.

    This isn?t an exact copy of the model as the ModelManager?s constructor
    initialises the FilteredList to show all persons, even though the
    original model?s FilteredList may not be showing all persons.

    As there is no way to make a defensive copy of the model, let?s return
    the original model instead.

[33mcommit 2a1100736769dcb0b9edd95ba3d28a1df152fe44[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 21 19:52:57 2017 +0800

    AddressBookSystemTest: Update header comments

[33mcommit d0036169d41485a064b881577ee294038b122b62[m
Merge: e32a1e7 7a04eec
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 24 09:15:11 2017 +0800

    (#319) Checkstyle: enforce header comments on classes and methods [#379]

    Our coding standard for Java requires header comments for all classes,
    public methods, and all non-trivial private methods. This rule is not
    enforced by Checkstyle.

    Let's teach Checkstyle to enforce the coding standard above by adding
    the rules JavadocMethod and JavadocType, which cover the checks on
    methods and classes respectively.

[33mcommit 7a04eecc08679c3c5931d2b987f7d557bfc704b9[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Sun Aug 20 19:38:15 2017 +0800

    Checkstyle: enforce header comments on classes and methods

    Our coding standard for Java requires header comments for all classes,
    public methods, and all non-trivial private methods. This rule is not
    enforced by checkstyle.

    Let's teach Checkstyle to enforce the coding standard above by adding
    the rules JavadocMethod and JavadocType, which cover the checks on
    methods and classes respectively.

[33mcommit 2b03991c5eab208ca71aa247bd57b038bd5fac73[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Wed Aug 16 15:24:47 2017 +0800

    Main folder: add missing API header comments

[33mcommit e32a1e791badb4acfe80365177b0600826dcfee1[m
Merge: da1601d 92a3c9e
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 21 19:44:50 2017 +0800

    [#551] Improve system tests (#620)

    There are problems with system tests. For e.g. the CommandBox's style
    isn't verified during the tests and the design of AddressBookSystemTest
    and AppStateAsserts are hard to understand.

    This means that our tests are not thorough enough and future developers
    may find it hard to understand the system tests.

    Let's resolve these issues.

[33mcommit 92a3c9ebda1abeef0107d84aded48cfa81baf61a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Aug 16 09:52:08 2017 +0800

    AddressBookSystemTest#getTestApp(): Update access modifier to protected

[33mcommit e71aaf14d195d2c004b2c7b36325aad2c72d6848[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 15 21:03:54 2017 +0800

    AddressBookSystemTest: Remove typo

[33mcommit d40057bc8210a3b60c7b46e53ca25df3b70599eb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 15 11:41:00 2017 +0800

    AddressBookSystemTest: Update verifyApplicationStartingStateIsCorrect()

    This method verifies that the starting state of the application is
    correct through the use of assertions.

    The method name should be updated to
    assertApplicationStartingStateIsCorrect() to better reflect what it is
    doing.

    Let?s update the method name and the header comments accordingly.

[33mcommit 89fcc52287583aa8f8fdb6948cfc6c6a05bd4fb3[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sun Aug 20 16:23:42 2017 +0800

    AddressBookSystemTest: Improve test verification

    assertSelectedCardChange() only verifies that the selected card is
    different from the card that was remembered previously.

    This test verification passes even though the incorrect card may be
    selected.

    Let?s teach assertSelectedCardChange() to accept a new parameter Index
    expectedSelectedCardIndex, so that this method is able to verify
    that the correct card has been selected.

[33mcommit 18b5566e8269e4e6e136deebd19f066d03aef10f[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Aug 16 10:59:03 2017 +0800

    DeleteCommandSystemTest: Remove assertDeleteCommandSuccess(...)

    assertDeleteCommandSuccess(...) and assertCommandSuccess(...) achieve
    roughly the same functionality.

    This results in both methods having similar header comments, making it
    hard to distinguish the difference between the methods.

    Let's inline assertDeleteCommandSuccess(...) and extract parts of the
    code into a helper method.

[33mcommit 759b7b27bdb45d642c47afce8598a30b8480f4a2[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 18 09:26:30 2017 +0800

    AddressBookSystemTest: Add CommandBox?s style verification

    CommandBox's style is not verified in tests.

    This check should be included to ensure thoroughness of the test
    verification.

    Let?s add methods to verify that the CommandBox's style is as expected.

[33mcommit 752be46b083f08a7b147ad4a9e05059154fb1c4c[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 17 12:39:57 2017 +0800

    AddressBookSystemTest: Add test execution and verification method

    All tests will have to verify that the command box, result display box
    and model are correct. These verifications are repeated in
    DeleteCommandSystemTest. When we implement future tests, we foresee
    these verifications will be repeated again.

    This violates DRY principle.

    Let's extract these common checks as a helper method in
    AddressBookSystemTest, so that DeleteCommandSystemTest and future tests
    do not have to repeat the same code.

[33mcommit 1df9e961534b9239cd1d9688d51077af52fdd771[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 12 10:22:36 2017 +0800

    AddressBookSystemTest: Add test verification helper method

    The browser panel is only updated if and only if the selected card in
    the person list panel is changed.

    It is unnecessarily tedious for test classes to call both methods
    separately to check that both the browser panel and the person list
    panel has changed. For e.g., DeleteCommandSystemTest has to call both
    getBrowserPanel().isUrlChanged() and
    getPersonListPanel().isSelectedPersonCardChanged().

    Let's add helper methods in AddressBookSystemTest
    assertBrowserUrlAndSelectedCardChanged() and
    assertBrowserUrlAndSelectedCardUnchanged(). These methods will then
    call the relevant methods in BrowserPanelHandle and
    PersonListPanelHandle to perform the test verifications.

[33mcommit ab3df4f6a35870692acbabd282ff6dc0acf5d64b[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 15 19:46:58 2017 +0800

    Delete AppStateAsserts

    AppStateAsserts contains test verification methods.

    As the responsibility of AddressBookSystemTest is to provide helper
    methods for tests to use, the test verification methods should belong
    to AddressBookSystemTest.

    Let's move the test verification methods from AppStateAsserts to
    AddressBookSystemTest. This makes AppStateAsserts redundant, let's
    delete it.

[33mcommit d7b44b25934b2dba7a7bfdf7006d3dc2289856bb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 18 08:18:09 2017 +0800

    ClockRule: Improve verification

    ClockRule only injects a fixed clock at the start of each test method.
    Some test methods do multiple tests i.e. execute multiple commands,
    which implies that the status bar's timing is always being verified
    with the same timing.

    This causes the testing of the status bar's timing to be insufficient
    as we are only effectively testing that the first test updates the
    status bar's timing correctly.

    Let's add a method in ClockRule that updates the injected clock to the
    current time, and let's teach DeleteCommandSystemTest to call this
    method whenever a test is executed.

[33mcommit 49694c6745534c76106a6913484656ff372b0bfc[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 15 19:42:57 2017 +0800

    AddressBookSystemTest: Extract setup methods

    AddressBookSystemTest is getting bloated and its' responsibility begins
    to become unclear.

    This violates SRP.

    Let's extract setup methods into new classes, so that the
    responsibility of AddressBookSystemTest is solely to provide helper
    methods for tests to use.

[33mcommit 114b560c07314476a49b42f4e10721b9a1bf3ced[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 10 17:31:57 2017 +0800

    DeleteCommandSystemTest: Add test verification methods

    The test verification methods in AppStateAsserts is flexible and caters
    for all the tests.

    This causes these methods to be ambiguous concerning what exactly is
    being tested. For example, the header comments of
    assertCommandSuccess(...) only tells us that ?the GUI components display
    what we expected?, which is ambiguous.

    Let?s shift the test verification methods from AppStateAsserts to
    DeleteCommandSystemTest and custom tailor it to suit the DeleteCommand,
    so that we do not have to pass in as many boolean flags to these
    methods, and so that developers can easily see what is being tested.

[33mcommit da1601d8421af0408fa699ea96cdebb86c6520b3[m
Merge: ddcea63 39b0b30
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 19 08:50:39 2017 +0800

    [#598] EventsCenter: Remove registerHandler method return type (#630)

    The name registerHandler does not suggest that a return value is
    necessary. Also, the return value is unused and does not complement
    any other methods in EventsCenter.

    Let's change the return type for EventsCenter#registerHandler() to
    void.

[33mcommit 39b0b30c54d744dbd53536c449546b30cc2d48da[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Wed Aug 16 16:32:24 2017 +0800

    EventsCenter: change registerHandler method return type

    The name registerHandler does not suggest that a return value is
    necessary. Also, the return value is unused and does not complement
    any other methods in EventsCenter.

    Let's change the return type for EventsCenter#registerHandler() to
    void.

[33mcommit ddcea63541d5f73f6b3d7c6c7676d4db2bb1af9a[m
Merge: 7beb5c6 dbb2a6a
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 14 08:47:53 2017 +0800

    [#623] Fix bugs in GUI related classes (#624)

    There are some bugs in GUI related classes. For example,
    BrowserPanel#loadPage(String) and StatusBarFooter#setSyncStatus(String)
    does not necessarily run on the JavaFX thread, which causes Exception
    to be thrown.

    Let's fix them.

[33mcommit dbb2a6af08b951ac2878248a763e4ebc9d24c783[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 12 10:44:32 2017 +0800

    ResultDisplay: Fix GUI update not running on JavaFX thread

    Setting a new value to be displayed in ResultDisplay must run on the
    JavaFX thread.

    The current implementation doesn?t ensure that it runs on the JavaFX
    thread.

    Let?s update it to ensure that it runs on the JavaFX thread.

[33mcommit e771b11af6b33858c937e84123c86762d3810c3c[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 10 17:37:05 2017 +0800

    StatusBarFooter: Fix GUI update not running on JavaFX thread

    setSyncStatus(String) and setSaveLocation(String) must run on the
    JavaFX thread.

    The current implementation doesn?t ensure that these methods run on the
    JavaFX thread.

    Let?s update them to ensure that they run on the JavaFX thread.

[33mcommit a951b97f02d9b827c52d1047fb93c3e534051215[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 10 17:34:25 2017 +0800

    BrowserPanel: Fix GUI update not running on JavaFX thread

    loadPage(String) must run on the JavaFX thread.

    The current implementation doesn?t ensure that this method runs on the
    JavaFX thread.

    Let?s update the method to ensure that this method runs on the JavaFX
    thread.

[33mcommit f01c17dbb281044c6c3bebc26152cb25ad4869da[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 7 10:43:28 2017 +0800

    PersonListPanelHandle: Fix logic error

[33mcommit 7beb5c62006b37a821e44af289c579f508b7c16e[m
Merge: 7ac8f04 c4ea7e5
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 14 08:16:18 2017 +0800

    [#625] AppStateAsserts: Ensure WebView loaded before verifying test #626

    AppStateAsserts does not ensure that the BrowserPanel's WebView is
    loaded before performing state verification. As such, callers such as
    DeleteCommandSystemTest have to call GuiRobot.sleep() to wait for
    a short while until the WebView is successfully loaded.

    Calling GuiRobot.sleep() is not a good way to resolve the race
    condition as we cannot be sure that the WebView does not take longer to
    load than the timing we have allocated for the thread to sleep.

    Let's implement a proper waiting mechanism in AppStateAsserts.

[33mcommit c4ea7e5a2102220453eb3bd1c2a5577017062d8a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 12 11:06:10 2017 +0800

    Remove WebViewLoadedEvent

    We have 2 ways to notify other classes that the WebView has been
    successfully loaded.

    There is no need to have 2 ways to notify other classes that the WebView
    has been successfully loaded; having 1 way of doing so is sufficient.

    Let?s remove the posting of WebViewLoadedEvent in BrowserPanelHandle
    and let?s remove WebViewLoadedEvent too.

[33mcommit c10a72a792ba791eb6898c69f4cce4584ea60488[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 8 09:41:57 2017 +0800

    AppStateAsserts: Resolve browser loading race condition

    BrowserPanel?s WebView takes time to be loaded.

    This causes a race condition as the verification of the browser?s
    URL may happen before the browser was successfully loaded, therefore
    causing the test to fail.

    Let?s add a boolean variable isWebViewLoaded to BrowserPanelHandle.
    This variable will be updated to true when a new web page is loaded.
    If AppStateAsserts is expecting a new web page to be loaded, it will
    wait until isWebViewLoaded equals true before verifying that the
    browser?s URL is changed.

[33mcommit 7ac8f04b547d08a9687642124866a5b5b24f1e64[m
Merge: b755b2b 6075317
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Aug 10 19:03:29 2017 +0800

    [#519] Model: Remove updateFilteredListToShowAll() (#615)

    Model has 2 methods to update the filtered list.
    updateFilteredListToShowAll() displays all persons in the filtered list,
    while updateFilteredPersonList(Predicate<ReadOnlyPerson>) displays
    the persons that matches the predicate.

    updateFilteredListToShowAll() is redundant as we can pass in a
    Predicate that always return true to
    updateFilteredPersonList(Predicate<ReadOnlyPerson>) to cause it to
    display all persons.

    Let?s remove updateFilteredListToShowAll().

    Even though we can pass in a null pointer to display all persons as
    this is the way that FilteredList is implemented, however we chose to
    pass in a lambda expression "(unused) -> true" to display all persons.
    This is because null can be a result of programming errors and using a
    null pointer makes it harder to differentiate whether it was
    intentional for the list to display all persons, or whether it was a
    result of programming errors.

[33mcommit 60753179a8875fd4b2af4da7ed43185284e210b7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 16:24:29 2017 +0800

    Model: Remove updateFilteredListToShowAll()

    Model has 2 methods to update the filtered list.
    updateFilteredListToShowAll() displays all persons in the filtered list,
    while updateFilteredPersonList(Predicate<ReadOnlyPerson>) displays
    the persons that matches the predicate.

    updateFilteredListToShowAll() is redundant as we can pass in a
    Predicate that always return true to
    updateFilteredPersonList(Predicate<ReadOnlyPerson>) to cause it to
    display all persons.

    Let?s remove updateFilteredListToShowAll().

    Even though we can pass in a null pointer to display all persons as
    this is the way that FilteredList is implemented, however we chose to
    pass in a lambda expression "(unused) -> true" to display all persons.
    This is because null can be a result of programming errors and using a
    null pointer makes it harder to differentiate whether it was
    intentional for the list to display all persons, or whether it was a
    result of programming errors.

[33mcommit b755b2b91255617ba62ad424a98d6c759a1dd23e[m
Merge: dfe7c27 50d641d
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Aug 9 07:51:10 2017 +0800

    [#575] MainApp: Update version number (#622)

[33mcommit 50d641d033139583735f0c7fd2d00764c7ac9f3b[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 8 10:23:59 2017 +0800

    MainApp: Update version number

[33mcommit dfe7c278f787169ef24e55a9b5165d71c878f535[m
Merge: ecdd485 0126a8a
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 8 15:04:26 2017 +0800

    [#571] Clean up TypicalPersons (#618)

    TypicalPersons has some areas for improvements. For example, this class
    is missing header comments. Also, constants such as INDEX_FIRST_PERSON
    should not be in TypicalPersons as TypicalPersons should only concern
    itself with Person objects, not Index objects.

    Let's fix them.

[33mcommit 0126a8a1f78b6122ca7936fda6fde7ac79cc61ac[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 7 20:13:01 2017 +0800

    TypicalPersons: Update getTypicalPersons()?s return type

    getTypicalPersons() return an array of ReadOnlyPerson.

    Some callers require the values to be stored in a List instead of an
    array. As such, they have to manually convert it to a List.

    Let?s teach TypicalPersons to return a List<ReadOnlyPerson> instead.

[33mcommit d53434c2fe10adc73bb0ac2bd7ee0065eda9925f[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 16:55:45 2017 +0800

    TypicalPersons: Move Index constants to TypicalIndexes

    TypicalPersons contain Index constants.

    This violates Single Responsibility Principle as TypicalPersons should
    only contain constants and helper methods pertaining to Person objects.

    Let?s add TypicalIndex and move the Index constants to this new class.

[33mcommit 49cc710c3122ea00b61b0bcf9604a8ac9075c562[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 16:52:40 2017 +0800

    TypicalPersons: Remove defensive copy in getTypicalAddressBook()

    getTypicalAddressBook() calls ab.addPerson(new Person(person)).

    This is unnecessary as AddressBook performs a defensive copy when
    calling addPerson(ReadOnlyPerson).

    Let?s remove the defensive copy in getTypicalAddressBook().

[33mcommit b1eab19871123c8df33e5436dae0d0b9ad2a543a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 16:32:33 2017 +0800

    TypicalPersons: Write header comments

[33mcommit bd0b938e532251fc796b043a778ca30052e389a4[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 16:31:13 2017 +0800

    TypicalPersons: Remove loadAddressBookWithSampleData(AddressBook)

    getTypicalAddressBook() and loadAddressBookWithSampleData(AddressBook)
    are similar methods. The former returns an AddressBook with the content
    of the preset Persons in TypicalPersons, while the latter appends the
    content of the preset Persons into the original content of the
    AddressBook passed in.

    No callers require the appending functionality, and they can call
    getTypicalAddressBook() instead.

    Let?s remove loadAddressBookWithSampleData(AddressBook).

[33mcommit ecdd485a6efa74886e540f7b6e6acdbee30e32a1[m
Merge: a60d16b 895430f
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Aug 8 10:21:04 2017 +0800

    [#621] UniquePersonList: Simplify logic of updatePerson(...) (#616)

    This method retrieves the person in the list to be updated, and calls
    Person#resetData(ReadOnlyPerson) to update the values of that person.

    We do not need to retrieve the person in the list to be updated, to
    update the list accordingly.

    Let?s simplify the logic by setting the updated Person object in place
    of the person to be updated.

[33mcommit 895430f4c9434c980cf6ed148e0ad36e37c5c5c2[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 17:07:29 2017 +0800

    Person: Remove resetData(ReadOnlyPerson)

    This method is now unused after the previous commit.

    Let?s remove it.

[33mcommit db3eeaba34c043c5465a07f94962ecb6ecd181e4[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 7 19:56:24 2017 +0800

    UniquePersonList: Rename updatePerson(...) to setPerson(...)

    Following the previous commit, the target person is no longer updated.
    Rather, the editedPerson is being set in the target person's place.

    Let's rename updatePerson(ReadOnlyPerson, ReadOnlyPerson) to
    setPerson(ReadOnlyPerson, ReadOnlyPerson) to better reflect what it is
    doing.

[33mcommit a5cb7900ae929a81f59f15f81a9c22eebfe8543e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 17:06:32 2017 +0800

    UniquePersonList: Simplify logic of updatePerson(...)

    This method retrieves the person in the list to be updated, and calls
    Person#resetData(ReadOnlyPerson) to update the values of that person.

    We do not need to retrieve the person in the list to be updated, to
    update the list accordingly.

    Let?s simplify the logic by setting the updated Person object in place
    of the person to be updated.

[33mcommit f357f1a7af8deca20aad8e26ed77c63a2b106991[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 17:24:02 2017 +0800

    EditCommand: Update executeUndoableCommand() return value

    executeUndoableCommand() returns the String value of the person to be
    edited.

    This is wrong as it should return the String value of the edited
    person instead. The tests still pass as the person to be edited
    is not replaced; it's values are updated to reflect the edited values.

    As part of simplifying the logic of
    UniquePersonList#updatePerson(ReadOnlyPerson, ReadOnlyPerson), let's
    update executeUndoableCommand() to return the String value of the
    edited person.

[33mcommit a60d16b3cd2ed483c03c813028b6967f888d1c6b[m
Merge: e38f155 bfa08bd
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 7 16:11:46 2017 +0800

    [#559] Clean up GUI tests related classes (#617)

    GUI tests related classes are plagued with many issues. For example,
    GuiRobot's access modifiers are wrong, and AddressBookGuiTest is doing
    more than it ought to do (a violation of Single Responsibility
    Principle).

    Let's fix them.

[33mcommit bfa08bd0fcd4e4800899d62a8c72ec423cf3f29d[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 18:29:18 2017 +0800

    PersonListPanelHandle: Update return type of getHandleToSelectedCard()

    getHandleToSelectedCard() is a test method that returns an
    Optional<PersonCardHandle>. If no card is selected, it returns an
    Optional#empty().

    Since it is a test method, we expect callers to only call it when a card
    is selected. As such, we do not need to account for the case when no
    cards are selected.

    Let?s update the return type of getHandleToSelectedCard() to
    PersonCardHandle.

[33mcommit 928eeef74a8fea097d9c2822f08e34d666fdfb6b[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 18:24:03 2017 +0800

    PersonListPanelHandle: Add isAnyCardSelected()

    To check whether a card is selected, the caller has to call
    PersonListPanelHandle#getHandleToSelectedCard()#isPresent().

    This is not as intuitive as creating a method that returns true if a
    card is selected.

    Let?s add isAnyCardSelected() which returns true if a card is selected,
    and let?s update callers to call this method instead.

[33mcommit 910b15a57605b6ec69d208d1c9c592914489eb89[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 18:13:04 2017 +0800

    PersonListPanelHandle: Remove unused method

[33mcommit d9cf8b226403db374c60fb6956077e6f10d6be4a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 18:11:50 2017 +0800

    EventsUtil: Update method names

[33mcommit 3c6ac6deb5126cf5144eae2679faa7282c7dcef2[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 18:08:24 2017 +0800

    AddressBookGuiTest: Move raise(BaseEvent) to EventsUtil

    AddressBookGuiTest is a super class that sets up the test environment
    for subclasses.

    There is no need for it to concern itself with helper methods used by
    the test classes (a violation of Single Responsibility Principle).

    Let?s move raise(BaseEvent) to EventsUtil instead.

[33mcommit 81fc057bcc9b895956d3999a845dfa601944f0eb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 17:58:31 2017 +0800

    AddressBookGuiTest: Move assertResultMessage(String) to GuiTestAssert

    AddressBookGuiTest is a super class that sets up the test environment
    for subclasses.

    There is no need for it to concern itself with test verification methods
    (a violation of Single Responsibility Principle).

    Let?s move assertResultMessage(String) to GuiTestAssert instead.

[33mcommit 1619f955c2b13cb9f3399e301d9c809f881e90a7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 17:49:29 2017 +0800

    AddressBookGuiTest: Move assertListSize(int) to GuiTestAssert

    AddressBookGuiTest is a super class that sets up the test environment
    for subclasses.

    There is no need for it to concern itself with test verification methods
    (a violation of Single Responsibility Principle).

    Let?s move assertListSize(int) to GuiTestAssert instead.

[33mcommit c3ed55ac23aa095f0a4176daaf9949d3a7c302b6[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 17:44:35 2017 +0800

    GuiRobot: Update visibility modifiers of constants

    The visibility modifiers of these constants are public.

    There is no need for these constants to be public as no other classes
    are using them.

    Let?s update the visibility modifiers of these constants to be private.

[33mcommit e38f155068e730ce2690c33b8a7e45d9f8209870[m
Merge: e2b5e35 78aaac4
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 7 15:56:38 2017 +0800

    [#604] Upgrade Checkstyle to version 8.1 (#614)

[33mcommit 78aaac494729844d8bf23fc7f13f92d0dc6b377d[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 10:13:11 2017 +0800

    Upgrade Checkstyle to version 8.1

    We are using an older version of Checkstyle version (v. 7.2).

[33mcommit e2b5e35dd67a58c099630e4e35bb068ffb567c5b[m
Merge: 816f07f 4492ae1
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Aug 7 15:40:21 2017 +0800

    [#602] Fix tests failure (#613)

    Some tests fail in headful mode because of race conditions and state
    leaks. They did not fail in headless mode as the order in which the
    tests run are different in headful mode and headless mode.

    Let's fix them.

[33mcommit 4492ae125b86b3364b93e0b2330852cd647ea591[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 4 13:07:50 2017 +0800

    BrowserPanelHandle: Post WebViewLoadedEvent when WebView is done loading

    There is no way to determine whether the BrowserPanel?s WebView is done
    loading.

    This may lead to scenarios whereby BrowserPanelTest tries to verify
    the expectedUrl before the WebView is done loading, which causes the
    test to fail.

    Let?s teach BrowserPanelHandle to post WebViewLoadedEvent when the
    BrowserPanel?s WebView is done loading, so that BrowserPanelTest can
    catch the event and do the test verification afterwards.

[33mcommit 0a2533dc038d37a98eaac2b9eebbc948f37b604f[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 4 12:25:11 2017 +0800

    BrowserPanel: Update string constants

    The existing URL that we use will eventually be morphed into another URL
    by Google after a short while.

    This complicates testing as we do not know when will the morphing of URL
    be done, thus if we do the test verification after the URL is morphed,
    the test will fail.

    Let?s update the string constants to be equal to the morphed URL.

[33mcommit 587fe5296d66ea237c10ccf842ef7021144d5691[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 4 11:38:54 2017 +0800

    TypicalPersons: Update static constant to getter method

    TypicalPersons#TYPICAL_PERSONS is a static constant.

    This implies that there may be a possible state leak between tests if
    TypicalPersons#TYPICAL_PERSONS is updated.

    Let?s update this constant to become TypicalPersons#getTypicalPersons()
    instead which returns a new array every time this method is called.

[33mcommit f6c7ee9c68900dacbeccd5a8b393519ea22dd313[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 10:40:33 2017 +0800

    Nest EventsCollector in EventsCollectorRule

    EventsCollector exists as a separate class even though it is only used
    by EventsCollectorRule.

    EventsCollector is a test utility class which should only be used in
    context of EventsCollectorRule to ensure that EventsCollector objects
    are properly torn down after they are initialised.

    Let?s refactor EventsCollector by nesting it in EventsCollectorRule.

[33mcommit 9615a54d6bc5178bafa7d151d1268d14c8ab0181[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 4 11:28:32 2017 +0800

    Update tests to use EventsCollectorRule

    Tests that use EventsCollector are not calling
    EventsCenter#clearSubscribers().

    This causes a state leak between tests
    as EventsCenter is a static class, and the EventsCollector object
    registers itself to the EventsCenter to receive events.

    Let?s update tests to use EventsCollectorRule which properly tears down
    the EventsCollector object, thus preventing state leak between tests.

[33mcommit 62de04adea4d5dcd2d065923156ca02b5a24a9a4[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sat Aug 5 10:33:58 2017 +0800

    Add EventsCollectorRule

    Tests that use EventsCollector are not calling
    EventsCenter#clearSubscribers().

    This causes a state leak between tests
    as EventsCenter is a static class, and the EventsCollector object
    registers itself to the EventsCenter to receive events.

    Let?s add EventsCollectorRule which properly tears down the
    EventsCollector object, thus preventing state leak between tests.

[33mcommit c9eeff4cda88ff513d3e56763640bd15d0622db9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Aug 4 10:48:50 2017 +0800

    AddressBookGuiTest: Shift EventsCenter#clearSubscribers()

    EventsCenter#clearSubscribers() is called in the method annotated by
    @Before.

    This can cause bugs as the last test class that inherits from
    AddressBookGuiTest may subscribe to EventsCenter in the last test case,
    but it will not be cleared, thereby causing a state leak.

    Let?s shift this method call to the method annotated by @After instead.

[33mcommit 816f07f953e8855556176cc0b6f9ca8a13a7b0f7[m
Merge: 2084731 454a421
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Aug 3 16:35:41 2017 +0800

    [#605] Dev Guide: Improve instructions for setting up checkstyle-IDEA (#612)

[33mcommit 454a421dd004ae16453481b4039dc03ff20bfa8d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Aug 3 13:35:38 2017 +0800

    Developer Guide: Add troubleshooting section for Checkstyle-IDEA

[33mcommit eec2a5f5a0d428898cd47bab748a6f557ea27651[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Aug 3 13:30:39 2017 +0800

    Developer Guide: Clarify instructions for setting up Checkstyle-IDEA

[33mcommit 20847316c28404bc225534061f766b0ada38667f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Aug 3 13:37:56 2017 +0800

    [#588] Developer Guide: Remove author names from sections (#611)

    Future CS2103 does not require each section to be written by a specific
    student. We can remove the author names that are given at the start of
    each section.

    Let's update the Developer Guide to remove these names.

[33mcommit 9fd50dff59a535ec89c185d52839b90d3a6e0aad[m
Merge: 4a756c1 2ddcdbd
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Aug 2 18:35:15 2017 +0800

    [#551] Convert DeleteCommandTest to a system test (#555)

    Tests in the 'guitests' packages, such as DeleteCommandTest, merely
    concern themselves with the relevant GUI components and the model, and
    do not verify other parts of the application (e.g. storage, status bar,
    ...).

    They do not fully qualify as system tests, and we already have
    unit tests and integration tests for commands, thus making them
    redundant. Also, without any system tests in the codebase, we are unable
    to demonstrate to the students how one should be written.

    Let's convert DeleteCommandTest to a system test.

[33mcommit 4a756c13ee2f5d795362ca9dc8a6f22d08570d6d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Aug 2 18:25:19 2017 +0800

    [#579] [#581] Developer Guide: Add 'Getting Started in Writing Code' section (#586)

    New developers may feel overwhelmed by the codebase when opening the
    project for the first time.

    Let's add a 'Getting Started in Writing Code' section to provide new
    developers some exercises, which are crafted specifically such that they
    will have a chance to touch with all individual components of the
    application.

[33mcommit b5d8fe3dc9851e14163c87d4d9fa58f7d8b37547[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Aug 2 12:36:05 2017 +0800

    johndoe.adoc: tweak formatting

    * add section 'justification for the feature'
    * minor cosmetic tweaks

[33mcommit 2ddcdbd0365de13e9ba0741962bd7b32c853a913[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 14:11:37 2017 +0800

    Convert DeleteCommandTest to DeleteCommandSystemTest

    DeleteCommandTest is a GUI test.

    We already have unit tests for the DeleteCommand and GUI components.

    Let's convert DeleteCommandTest to a system test
    DeleteCommandSystemTest.

[33mcommit 422b4bcd699222e38f095dc509af892f03738415[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sun Jul 30 10:22:00 2017 +0800

    TestUtil: Add model utility methods

    Some test cases require obtaining the middle/last index of the model
    given. Some test cases also need to get the person inside the model at a
    specific index.

    Let's add such utility methods to TestUtil.

[33mcommit 8a2f9631e6d660dc3a639bf627b9838e64d80fbd[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 16:41:17 2017 +0800

    Add AppStateAsserts

    System tests require verification of the application state.

    Let's add AppStateAsserts that contains such verification methods.

[33mcommit ba49111ae9355307b6e915f583deedf61aad87eb[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 19 14:28:58 2017 +0800

    Add AddressBookSystemTest

    All system tests will require a TestApp together with test classes and
    objects such as TypicalPersons and injected Clocks.

    AddressBookGuiTest does not have methods required for us to verify the
    non-GUI portion of the program.

    Let's add AddressBookSystemTest.

[33mcommit e3b40a6a2116c1ae8a60eb319a59710ced9e2ad6[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sun Jul 30 18:47:23 2017 +0800

    PersonListPanelHandle: Add remember*() and is*Changed()

    When executing a certain command, the selected person in the person list
    should not change (such as when the command execution fails).

    Let's add remember*() and is*Changed() methods to allow us to
    verify that the selection was not changed.

[33mcommit 4fe218bc925ba14f3878adb8ac5b281156c5feab[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sun Jul 30 18:41:21 2017 +0800

    PersonListPanelHandle: Add select(int)

    Some tests require us to select a particular person in the person list
    panel.

    Let's add PersonListPanelHandle#select(int) to help us do so.

[33mcommit b1ffbc722a83b10301dd3df07897da2dd2d06f64[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 14:09:26 2017 +0800

    StatusBarFooterHandle: Add remember*() and is*Changed()

    When executing a certain command, the content of the status bar might
    not change. For example, if the command failed, the 'Last Time Updated'
    and 'File Save Location' should still remain the same.

    Let's add remember*() and is*Changed() methods to allow us to
    verify that their content were not modified.

[33mcommit 990ba7e61c65d3222a034c2b1c0549f417b6eff9[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 14:08:04 2017 +0800

    BrowserPanelHandle: Add rememberUrl() and isUrlChanged()

    When executing certain commands (such as adding a person), the browser
    panel is not supposed to change.

    Let's add rememberUrl() and isUrlChanged() to allow us to verify
    whether the content has been changed after doing a certain test.

[33mcommit 87e69f3b441d7c08ae97a53222481f121d4a237e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 14:57:45 2017 +0800

    TestApp: Add getModel()

    Our system tests need to verify that the model of the application is
    updated correctly.

    Let's add TestApp#getModel().

[33mcommit 6e7494310a384265efaa3b467cf26bac248f6be2[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 13 11:00:24 2017 +0800

    TestApp: Add getStorageSaveLocation()

    Our system test needs to verify that the save location of the file is
    still the same.

    Let's add getStorageSaveLocation() that returns the current save
    location.

[33mcommit 60c1d1231c2f2ef11eaff44bbc8ff1ebcf09e512[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 13 10:58:17 2017 +0800

    TestApp: Add readStorageAddressBook()

    Our system test needs to test that the storage file content is updated
    correctly.

    Let's add readStorageAddressBook() helper method, that returns the
    address book created from the content of the storage file, to allow us
    to verify that the file is correct.

[33mcommit ba03f395e2c084ba0c5c22c08cba2dbfa3756f19[m
Merge: cb030ab 38c90ab
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Aug 2 08:25:48 2017 +0800

    Move johnDoe.adoc into 'team' sub-folder (#607)

[33mcommit 38c90ab7ff96946b4fe8dfa2f235989a09478a31[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Aug 1 22:48:10 2017 +0800

    johndoe.adoc: Move inside 'team' sub-folder

    johndoe.adoc resides on the 'docs' folder.

    It should be moved inside a 'team' sub-folder to avoid cluttering it
    with the important documents.

    Let's move 'johndoe.adoc' from 'docs' to 'docs/team'.

[33mcommit 6c3fc91bf62a4893087d540267c5b7afe498f986[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Aug 1 22:45:14 2017 +0800

    docs: Manually specify stylesDir

    stylesDir is specified as a relative path in build.gradle.

    If the documents are in a sub-folder, the relative path would be wrong,
    as the styles directory is now one level above.

    As a step towards moving johndoe.adoc into a subfolder, let's manually
    specify stylesDir inside all documents.

[33mcommit cb030aba0d1ed9ab7b2cc5c94def0caf4c5123df[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Tue Aug 1 22:12:54 2017 +0800

    Move johndoe.adoc to the docs folder (#606)

[33mcommit 06d9ac3c662a40ccfcf5366a95e1d96cbbd0cb00[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Mon Jul 31 20:52:01 2017 +0800

    [#584] Add a sample portfolio page (#589)

    In the future semester, students will be asked to create a portfolio
    page describing their contribution to the project.

    To serve as an example, let's add a sample portfolio page.

[33mcommit c27ad03b38f5c1680a70ab9f46c99e861818e446[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sun Jul 30 19:41:17 2017 +0800

    [#582] Developer Guide: Explain undo and redo mechanism (#587)

    CS2103 students will need to explain their design decisions made in
    their project. The write up needs to be done inside the Developer Guide.

    There are no such examples in the Developer Guide for the students to
    follow.

    Let's add a section to explain undo and redo, to show the students how
    it should be done.

[33mcommit f5ca8d64b5053641d7183c65a893df43e713b45f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 26 07:58:01 2017 +0800

    [#580] AboutUs page: rename profile photo files (#585)

    CS2103 requirements state that profile photos filenames need to be of
    the format 'github_id_in_lower_case.png' (e.g. damithc.png).

    Let's rename the photos to follow the format, and modify AboutUs.adoc
    to point to the new filenames.

[33mcommit 08224fb1885e38f8255ef742e0cf91071ada3f8e[m
Merge: 8ff1410 a671bf2
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 26 07:56:20 2017 +0800

    [#459] Clean up Handle classes (#573)

[33mcommit 8ff14105f989eed05dc63f113d1ad23b355516d0[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Wed Jul 26 07:53:43 2017 +0800

    [#379] Test folder: add missing API header comments (#518)

[33mcommit a671bf2f1ffd9b1be575235e4bc0c5789c49674a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 13:37:09 2017 +0800

    Tidy up header comments for *Handle classes

[33mcommit f273c67603e807ea8fb17e0119952775242f0acc[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 11:43:59 2017 +0800

    StageHandle#close(): Check that window is closed

    There is no post-condition in StageHandle#close() to check that the
    window is closed.

    Let's add a post-condition in StageHandle#close() to verify that.

[33mcommit c0a35764bb67336b487798774460c6831a9b4dac[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 16:20:54 2017 +0800

    Clean up PersonCardHandle

    PersonCardHandle contains unused methods. It should also store the tags
    as a list of labels, so that all accessor of tags can return these
    labels, rather than manually obtaining each of them through the tag
    container.

    Let's clean up PersonCardHandle.

[33mcommit badd33a52ff0ddc4da3bbeb4ac9ecb032a380cb5[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 15:09:41 2017 +0800

    AddressBookGuiTest: Remove assertCardMatchesPerson(...)

    AddressBookGuiTest#assertCardMatchesPerson(...) calls
    GuiTestAssert#assertCardDisplaysPerson(...).

    This method is redundant as it does not abstract out any lower level
    concepts.

    Let's remove assertCardMatchesPerson(...), and replace all calls to
    GuiTestAssert#assertCardDisplaysPerson(...) instead.

[33mcommit 9fcf590e5e56bacf70e5881358bced026cc30901[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 15:05:08 2017 +0800

    PersonCardHandle: Remove isSamePerson(...)

    PersonCardHandle#isSamePerson(ReadOnlyPerson) compares the card with a
    person.

    GuiTestAssert#assertCardDisplaysPerson(...) have the exact same
    functionality.

    Let's remove PersonCardHandle#isSamePerson(...), and replace all usages
    with GuiTestAssert#assertCardDisplaysPerson(...).

[33mcommit 56137502e40fc58a495195254e82261df3f507e8[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 15:50:33 2017 +0800

    PersonListPanelHandle: Change isListMatching() to assertListMatching()

    PersonListPanelHandle#isListMatching() returns false when it founds an
    unmatched card, and returns true otherwise.

    We are deprecating PersonCardHandle#isSamePerson() in favor of
    GuiTestAssert#assertCardDisplaysPerson(...), which does not return a
    boolean.

    Let's change isListMatching() to assertListMatching(), that does not
    return a boolean, but rather asserts that each card indeed matches.

    As it is now an assertion method, we could no longer put this method
    into PersonListPanelHandle, which should only be concerned with querying
    and commanding the GUI. Let's move assertListMatching() to
    GuiTestAssert.

    We would need a way to expose the scrolling functionality for our
    GuiTestAssert#assertListMatching(). Let's also add
    PersonListPanelHandle#scrollTo(int).

[33mcommit 688378ca77646a51af48893c023958e38724d8e4[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 15:00:09 2017 +0800

    PersonListPanelTest: Extract assertCardDisplaysPerson()

    Tests need to compare the card and person.

    Let's extract out assertCardDisplaysPerson(), and put it in
    GuiTestAssert instead.

[33mcommit 7f0105934fb6e9c9e22a2d3ec933dca1950cea72[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 14:14:50 2017 +0800

    PersonCardHandle: Remove equals() method

    PersonCardHandle#equals() compares whether both of the cards have the
    same details.

    Tests should never utilize the equals() method of person card handles to
    compare cards. Instead, they should use get*() methods to compare the
    contents of the card.

    Let's remove PersonCardHandle#equals().

[33mcommit 92e04a995f1a5d8a0c43cf64ecd0aa20211e9932[m
Merge: 5d60018 69e404a
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 15:39:30 2017 +0800

    [#421] Migrate from Eclipse to IntelliJ (#427)

    We are migrating our IDE from Eclipse to IntelliJ.

    Let's remove files used by Eclipse, and update our instructions in our
    documentation to be IntelliJ-oriented.

[33mcommit 5d60018c460e856c4b56cbff5822d4b1ca809f17[m
Merge: 57bf396 1f44338
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 15:38:32 2017 +0800

    [#390] Implement UndoCommand and RedoCommand (#547)

    User is unable to undo and redo the actions he / she has made.

    User is unable to recover from mistakes. For example, if the user
    accidentally enters the clear command, he / she will lose all the data
    in AddressBook, and there are no ways to retrieve the data back.

    Let's implement UndoCommand and RedoCommand so that the user can
    recover from his / her mistakes.

[33mcommit 1f4433849895051c126204ddad4c3f43504c977f[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 19 20:59:34 2017 +0800

    Update User Guide and Developer Guide

[33mcommit d59c5dbbec0bf909a46b7539fa32e6efa6f0c90e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 16:40:43 2017 +0800

    Teach AddressBookParser to parse UndoCommand and RedoCommand

    LogicManager passes the user input to AddressBookParser for parsing.

    AddressBookParser does not know how to parse ?undo? and ?redo?.

    To finish implementing the undo and redo features, let?s teach
    AddressBookParser to parse UndoCommand and RedoCommand.

[33mcommit 19715700d917f66c9b037ed23888138247cbe22f[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 13 15:53:15 2017 +0800

    Add UndoCommand & RedoCommand

[33mcommit 60b533686699eaf59496d060a252b240dcbb8bbb[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jul 7 16:38:41 2017 +0800

    Command#setData(...): Add UndoRedoStack parameter

    setData takes in Model and CommandHistory, which stores the list of user input.

    Let's teach setData(Model, CommandHistory) to take in UndoRedoStack
    as a parameter as well. This removes the need to parse the user input
    again, making it easier to implement the undo and redo commands.

    Let?s change setData(Model, CommandHistory) to
    setData(Model, CommandHistory, UndoRedoStack).

[33mcommit 81ea6b54680a81a96f1472608d71f989add0ffd4[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jul 7 16:32:15 2017 +0800

    LogicManager: Add field UndoRedoStack

    LogicManager is in charge of managing the execution of the user input.

    Let?s add UndoRedoStack as a field in LogicManager, so that it can
    manage the adding of user input into the stack.

[33mcommit b77644134e519c27db2aeb393b3cd73460b340f0[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 13 15:46:48 2017 +0800

    Add UndoRedoStack

    There are no data structure to store UndoableCommands to be undone
    and redone.

    This implies that we are unable to undo and redo previously executed
    commands.

    As part of implementing the undo and redo features, let?s add
    UndoRedoStack to store previously executed commands.

[33mcommit 6ab4a04a0beabd3e1e5aea114ffbdce4759e1c16[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu May 4 11:53:53 2017 +0800

    Add UndoableCommand and update some commands to extend it

    All commands extend Command.

    This disallows us from identifying which commands can be reversed.

    Let?s create UndoableCommand and update the relevant commands to
    extend it.

    Also, we implemented the Template Pattern for UndoableCommand#execute()
    which ensures that every command that extends UndoableCommand will
    automatically call saveAddressBookSnapshot() when execute() is called
    to facilitate the undo redo mechanism. Classes that inherits from
    UndoableCommand will have to override executeUndoableCommand() instead
    of execute() as a result.

[33mcommit 57bf39652d1cc16e8f37f1dc39f15de18208f277[m
Merge: 08c681a 09f9afe
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 13:56:21 2017 +0800

    [#563] PersonListPanelHandle: No longer returns PersonCard (#567)

    PersonListPanelHandle is a test helper class that encapsulates
    PersonListPanel. It has methods that return PersonCard.

    Tests should not directly interact with Node objects such as PersonCard
    as it breaks the encapsulation of the PersonCard object.

    Let's teach existing methods in PersonListPanelHandle to return
    PersonCardHandle instead of PersonCard.

[33mcommit 09f9afe69c0739776512b9d0b274e33159fdc176[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 20 13:36:25 2017 +0800

    PersonListPanelHandle: Remove getCard(int)

    getCard(int) returns a PersonCard.

    Tests should not directly interact with Node objects such as PersonCard
    as it breaks the encapsulation of the PersonCard object.

    Let's remove getCard(int).

[33mcommit 04a675ffa421de7792897d8152e43aad819ec45e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 20 13:35:38 2017 +0800

    PersonListPanelHandle: Update getSelectedCard()

    getSelectedCard() returns an Optional<PersonCard>.

    Tests should not directly interact with Node objects such as PersonCard
    as it breaks the encapsulation of the PersonCard object.

    Let's rename getSelectedCard() to getHandleToSelectedCard(), and update
    it to return PersonCardHandle instead of PersonCard.

[33mcommit f1141e4254c4d18bb8b4468496a4c565c4c4a4b7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 20 11:10:05 2017 +0800

    PersonListPanelHandle: Update getPersonCardHandle(int) access modifier

    getPersonCardHandle(int) is private.

    Other classes are unable to call this method.

    As part of preparing to remove getCard(int) in future commits, let?s
    update getPersonCardHandle(int) access modifier to public.

[33mcommit 08c681acf239d3fe4b47b2f4f9c6ef62695ca891[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 21 11:17:27 2017 +0800

    gitignore: Ignore 'out/' build directory (#576)

    When running the application/tests in IntelliJ, a new 'out/' directory
    will be created.

    The 'out/' directory contains build files. They should not be included
    in the repository.

    Let's update .gitignore to ignore the 'out/' build directory.

[33mcommit 69e404a9185dc51fe9f10ba0eb978a00a80e6e60[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri May 19 09:42:38 2017 +0800

    Remove Eclipse files

    We are migrating our IDEs from Eclipse to IntelliJ. Eclipse files are
    not used in IntelliJ.

    Let's remove them.

[33mcommit 5c33a5c989e08b41c21402b9073f399db4222a86[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu May 18 10:02:40 2017 +0800

    Update DeveloperGuide.adoc to use IntelliJ

[33mcommit e3bdbaec9a1b531d1cc01a9ff6c16592b7833df5[m
Merge: 48d5acc d975164
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 20 14:49:16 2017 +0800

    [#569] TypicalPersons: Make all methods and fields static (#574)

    TypicalPersons is a utility class that creates preset Persons for tests
    to use. Some methods and fields are non-static.

    This makes it troublesome for test classes to access these preset
    Persons as they have to create a TypicalPersons object prior to
    accessing the Person objects.

    Let's make all methods and fields in TypicalPersons to be static.

[33mcommit d975164a0286ecf736e205edf4dd59369ffa14e6[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 20 13:10:55 2017 +0800

    TypicalPersons: Add private constructor

    TypicalPersons is a utility class that is not meant to be constructed.

    Without a private constructor, other classes may accidentally create
    instances of TypicalPersons.

    Let?s add a private constructor to prevent other classes from creating
    instances of TypicalPersons.

[33mcommit 1b97737703af291734edfb0af2f1b307aad6eb39[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 19 11:23:56 2017 +0800

    TypicalPersons: Remove getTypicalPersons()

    getTypicalPersons() return an array of ReadOnlyPersons.

    This method is simple enough and can be converted to a static field.

    Let?s remove getTypicalPersons() and convert it to be a static field.

[33mcommit f9c27cf45b32ebb5bb2dcfb2cc04516dcc0e5360[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 19 11:14:27 2017 +0800

    TypicalPersons: Make all methods and fields static

    TypicalPersons is a utility class that creates preset Persons for tests
    to use. Some methods and fields are non-static.

    This makes it troublesome for test classes to access these preset
    Persons as they have to create a TypicalPersons object prior to
    accessing the Person objects.

    Let's make all methods and fields in TypicalPersons to be static. Also,
    to prevent state leaks between tests, let?s change these methods and
    fields to return ReadOnlyPerson instead of Person, as ReadOnlyPerson
    cannot be modified.

[33mcommit 48d5acc77c3a4611e63b8bcc934d2d206ba0028e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 20 10:51:08 2017 +0800

    [#459] Remove unnecessary pauses after pressing keys with GuiRobot (#572)

    guiRobot#type(...) and guiRobot#push(...) internally pauses after
    pressing the given keys.

    We do not need to call guiRobot#pauseForHuman() ourselves after calling
    these two key pressing methods.

    Let's remove the redundant guiRobot#pauseForHuman() calls.

[33mcommit 801bae82eea7e2e6c514a5b80dae0d91538ea82c[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 20 08:16:41 2017 +0800

    [#561] XCommandTest: Move showFirstPersonOnly(Model) (#566)

    This method is implemented multiple times in XCommandTest.

    This violates the DRY principle.

    Let?s move it into CommandTestUtil.

[33mcommit 43ebcaf21d56b7fbcaacd9b1c83115c3bf8f8146[m
Merge: a0b042f e068ad1
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 19 09:34:01 2017 +0800

    [#295] Clean up TestUtil (#560)

    TestUtil is a class with low cohesion as it contains methods that
    are unrelated to each other.

    This breaks the Single Responsibility Principle, whereby each class
    is supposed to have only one responsibility.

    Let's split up the methods into different classes to improve the
    cohesion of TestUtil. Also, let's do a general cleanup of TestUtil
    by removing unused methods etc.

[33mcommit e068ad1a2f2849a053fc9dfd98f53e534a4519a3[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 11:15:01 2017 +0800

    TestUtil: Move assertThrows(...) to Assert

    TestUtil contains assertThrows(...) and
    getFilePathInSandboxFolder(String). Both methods are doing things that
    are unrelated to each other.

    This makes TestUtil a class with low cohesion.

    Let?s create a new class Assert and move assertThrows(...) into it.

[33mcommit 8e89baa73572ebe03ef336ba52eda33cdbb962e3[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 10:06:09 2017 +0800

    TestUtil: update header comments for getFilePathInSandboxFolder(String)

    The header comments are missing descriptions for both the parameter and
    return value.

    This makes the @param and @return tags useless.

    Let?s remove these tags and update the header comments to make it more
    descriptive.

[33mcommit 286991add3fe9026070a692c6e98ca50814263d3[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 09:06:30 2017 +0800

    TestUtil: Update access modifier of SANDBOX_FOLDER

    Constant SANDBOX_FOLDER has public access modifier even though it is
    only called within the class.

    This unnecessarily exposes it to other classes.

    Let?s change its access modifier to private.

[33mcommit 4fd44ae9c6b9535dade808b8ff80478ad09bd088[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 08:58:27 2017 +0800

    TestUtil: Extract createDataFileWithData(T, String) to TestApp

    createDataFileWithData(T, String) is only used by TestApp.

    It?s unnecessary to place this method in TestUtil.

    Let?s extract it to be a private method in TestApp.

[33mcommit b4a85a2092c808a392041332ab4da3dd2d0d5140[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 08:26:08 2017 +0800

    TestUtil: Inline compareCardAndPerson(...)

    TestUtil#compareCardAndPerson(PersonCardHandle, ReadOnlyPerson) only
    calls a method inside PersonCardHandle.

    Callers of this method can simply call PersonCardHandle's method
    directly on its own.

    Let's inline TestUtil#compareCardAndPerson.

[33mcommit febbaece598492c54445a579d72a9629c0245d2d[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 08:23:28 2017 +0800

    TestUtil: Remove addPersonsToList(...)

    addPersonsToList(Person[], Person...) adds Person objects in the array
    by converting it into an ArrayList for the addition to happen, followed
    by converting it back into an array. This method is only called by
    AddCommandTest.

    These conversions make the code unnecessarily verbose.

    Let?s teach AddCommandTest to use an ArrayList<Person> instead of
    Person[]. This results in addPersonsToList(Person[], Person...) to be
    unused, let?s remove it.

[33mcommit 38d9783502e452754791edd8d06a03388663df11[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 08:16:46 2017 +0800

    TestUtil: Remove removePersonFromList(...)

    removePersonFromList(Person[], Index) removes a Person in the array
    by converting it into an ArrayList for the removal to happen, followed
    by converting it back into an array. This method is only called by
    DeleteCommandTest.

    These conversions make the code unnecessarily verbose.

    Let?s teach DeleteCommandTest to use an ArrayList<Person> instead of
    Person[]. This results in removePersonsFromList(Person[], Index) to be
    unused, let?s remove it.

[33mcommit f60bfca366e5edefbd3338d1d08c6ccda60c21fc[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 07:46:42 2017 +0800

    TestUtil: Remove generateSamplePersonData()

    generateSamplePersonData() returns a List of 8 Person objects. This
    method is only called once by XmlUtilTest, and only the first person
    is used.

    There is no need to create 8 Person objects when only the first person
    is used. Furthermore, TypicalPersons also provides a List of Person
    objects for purposes of testing, thus this portion of code in TestUtil
    is duplicate code as well.

    Let?s simplify XmlUtilTest to use a PersonBuilder to create a Person
    object. This causes generateSamplePersonData to be unused, let?s remove
    it.

[33mcommit da8d7d41ff02ba6b2d3e5405460291db1b70d458[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 07:18:56 2017 +0800

    TestUtil: Remove asList(T[])

    asList(T[]) converts an array into a List.

    This method is unnecessary as there?s a method in Java library
    Arrays.asList(T[]) which achieves the same effect.

    Let?s update callers to call Arrays.asList(T[]) instead and remove
    asList(T[]).

[33mcommit d532bbcbd55c287d472853cd60ff2091c123cd85[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 17 07:16:14 2017 +0800

    TestUtil: Remove unused methods

    These methods are unused.

    Let?s remove them.

[33mcommit a0b042faf7dcde247eccf9bd547e98002bf7e720[m
Merge: 466a0a1 0f8c7e3
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jul 18 16:43:25 2017 +0800

    [#172] Add unit tests for GUI (#536)

    Our GUI tests in the codebase are system tests.

    There are no unit tests for each GUI component in the application.

    Let's add unit test for GUI components.

[33mcommit 0f8c7e337426cdd4017d5b634b2c454eceb8dc0a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jul 18 12:57:46 2017 +0800

    PersonCardTest: Add test case for subsequent changes to Person

    It is possible that the card might not have been binded properly, but
    only initialized with the starting values of Person.

    The test case for any subsequent changes to Person is not tested.

    Let's add the test case for subsequent changes to Person.

[33mcommit e19ba374d0d40d824f813c618388b875b3b32fde[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 10 15:35:04 2017 +0800

    WebViewUtil: Extract out getLoadedUrl()

    Both HelpWindowHandle and BrowserPanelHandle queries the URL of the web
    view.

    The logic can be refactored out into a helper method.

    Let's extract WebViewUtil#getLoadedUrl().

[33mcommit 2f17bcc283b0f8e2ace077e5af776df281ee1c1f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 3 10:08:58 2017 +0800

    Add HelpWindowTest

    We need to ensure that the HelpWindow is loading the correct file.

    Such test does not exist.

    Let's add HelpWindowTest.

    HelpWindow#USERGUIDE_FILE_PATH needs to be public so that the test is
    able to verify that the URL accessed is correct. Let's change the access
    modifier for HelpWindow#USERGUIDE_FILE_PATH.

[33mcommit 63a124e8c69b8ae29fa27e0fc875397c48d92ba4[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 3 10:08:33 2017 +0800

    HelpWindowHandle: Add getLoadedUrl()

    HelpWindow GUI tests need to verify that the WebView has been given
    the correct URL to load the help webpage from.

    There is no way to do such verification through HelpWindowHandle.

    Let's add HelpWindowHandle#getLoadedUrl() to allow such verification.

[33mcommit dd74ff2123e1be9eb13d37ff14eaff3b0cbf64f5[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 3 09:24:37 2017 +0800

    Add PersonListPanelTest

    PersonListPanel is tested in system tests.

    A separate unit test for PersonListPanel does not exist.

    Let's add PersonListPanelTest.

    We need a way to verify that the selected index of PersonListPanel is
    correct. Let's also add PersonListPanelHandle#getSelectedIndex().

[33mcommit 27c9d2231d683c417bb5a7f6b204165e09ed15cf[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Jul 1 10:34:05 2017 +0800

    Add StatusBarFooterTest

    StatusBarFooter is tested in system tests.

    A separate unit test for StatusBarFooter does not exist.

    Let's add StatusBarFooterTest.

    The "system" test in guitests/StatusBarFooterTest will no longer be
    necessary when we have system tests for each individual commands, which
    will test the code paths for the status bar accordingly. Let's also add
    a TODO comment as a reminder for us to remove
    guitests/StatusBarFooterTest when the system tests are complete.

[33mcommit 803e7d3afdec7ba37be13ada43f117f3146397db[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Jul 1 10:33:58 2017 +0800

    Add ResultDisplayTest

    ResultDisplay is tested in system tests.

    A separate unit test for ResultDisplay does not exist.

    Let's add ResultDisplayTest.

[33mcommit 756161179487e04aa85d6114f20333fe47c503d8[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Jul 1 10:33:52 2017 +0800

    Add CommandBoxTest

    CommandBox is tested in system tests.

    A separate unit test for CommandBox does not exist.

    Let's add CommandBoxTest.

[33mcommit c76c12b66b83dbe4ef4a0d26e874777fd3c33d44[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 11:08:17 2017 +0800

    GuiUnitTest: Add getChildNode()

    Some test require finding the nodes owned by a component. For example,
    the TextField of the CommandBox is stored inside a StackPane, so we have
    to look for it.

    Let's add GuiUnitTest#getChildNode() to help us facilitate querying.

[33mcommit f02f14cd4c9cded4a08f16de2bfda7bcace8740e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 6 09:24:23 2017 +0800

    Add BrowserPanelTest

    BrowserPanel is tested in system tests.

    A separate unit test for BrowserPanel does not exist.

    Let's add BrowserPanelTest.

[33mcommit d0ea397d1197e0d22426f32c015ca94eda58ffd8[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 6 09:23:37 2017 +0800

    BrowserPanel: Extract out magic string

    BrowserPanel navigates to a fixed URL when a person is being displayed.

    We should extract the URL to a constant.

    Let's extract the URL out as a constant named
    BrowserPanel#GOOGLE_SEARCH_URL_PREFIX.

[33mcommit 1a9bd3349e734d010392b21839fca9ea1a0fb828[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Jul 1 10:33:40 2017 +0800

    BrowserPanelHandle: Add getLoadedUrl()

    BrowserPanel GUI tests need to verify that the WebView has been given
    the correct URL to load the webpage from.

    There is no way to do such verification through BrowserPanelHandle.

    Let's add BrowserPanelHandle#getLoadedUrl() to allow such verification.

[33mcommit a5bca556a769b0bcacf3f30bfc62705a49ed5ac5[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 10:56:08 2017 +0800

    PersonCardTest#assertCardDisplay(...): Change parameter order

    The parameter type order for PersonCardTest#assertCardDisplay(int,
    ReadOnlyPerson) is different from PersonCard#PersonCard(ReadOnlyPerson,
    int).

    It would be nice if they are symmetric to each other.

    Let's change the parameter order of
    PersonCardTest#assertCardDisplay(...) to match
    PersonCard#PersonCard(...).

[33mcommit db2e46824bf5e4725c8b144a3a5af9043a563ab6[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 10:47:25 2017 +0800

    PersonCardTest: Call pauseForHuman() in assertCardDisplay(...)

    All callers of assertCardDisplay(...) will subsequently call
    pauseForHuman() to allow testers to verify the values of the card.

    We can call pauseForHuman() inside assertCardDisplay() instead.

    Let's move the calls for pauseForHuman() inside assertCardDisplay(...)
    so that it pauses immediately after the card is created.

[33mcommit 2a2e89042fa17d54c57cca63b0486d4d222f5edc[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 17 13:44:43 2017 +0800

    Add EventsUtil

    Some GUI components react to events.

    We can create a helper method in GuiUnitTest to allow GUI unit tests to
    raise appropriate events.

    Let's add GuiUnitTest#post(BaseEvent).

[33mcommit 31de8caba1a080038645d3c5daf818c238a1764d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 11:02:13 2017 +0800

    PersonCardTest: Extract guiRobot and uiPartRule to new GuiUnitTest class

    PersonCardTest uses a GuiRobot and UiPartRule.

    GuiRobot and UiPartRule will be used frequently by future GUI unit
    tests.

    As a step towards implementing GUI unit tests for other components,
    let's extract guiRobot and uiPartRule to a new superclass GuiUnitTest,
    and let's make PersonCardTest inherit from it.

[33mcommit 466a0a1cb2af8d2c14e9d8a40bf9b8d1a2deb836[m
Merge: 84d6516 baa5988
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jul 18 11:25:06 2017 +0800

    [#292] Make ReadOnlyPerson observable (#552)

    ReadOnlyPerson is not observable. Whenever a ReadOnlyPerson is added
    or updated, PersonListPanel creates a new PersonCard and initialises
    it with the ReadOnlyPerson's details.

    This is inefficient as multiple cards have to be deleted and
    re-created whenever a ReadOnlyPerson is updated. Also, there is an
    additional call to set the ReadOnlyPerson in the list of PersonCards
    to update the view i.e updating the ReadOnlyPerson does not
    automatically update the view.

    Let's update ReadOnlyPerson to be observable and teach PersonCard
    to bind its view to the ReadOnlyPerson objects so that whenever they
    are updated, the view is automatically updated. As such, the cards
    do not need to be deleted and re-created.

[33mcommit baa5988d5bcf9c0d95d3aca56e90ef19e42206e8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jul 14 09:42:40 2017 +0800

    PersonListPanelHandle: Update methods

    PersonListPanel now has a ListView that stores PersonCard instead of
    ReadOnlyPerson.

    PersonListPanelHandle however, still has methods that return
    ReadOnlyPerson instead of PersonCards.

    Let?s update these methods accordingly.

    Also, as a result of changing these methods, SelectCommandTest will
    be verifying the equality of the PersonCards instead of the
    ReadOnlyPersons. Let?s implement equals(Object) for PersonCard.

[33mcommit 6f8c65369437191e86cb3484308dc39a48e47dd8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 12 12:35:44 2017 +0800

    UniquePersonList: Remove unnecessary method call

    UniquePersonList calls internalList#set(int, ReadOnlyPerson) when it
    updates a person in the list. Previously, this call was necessary to
    update the UI, as PersonCard was not observing the Person object that
    it is displaying.

    This method call is no longer needed as PersonCard is now observing
    the Person object that it is displaying.

    Let?s remove the method call along with its comments.

[33mcommit 75cbfa3804ff365646e903514282d9313da4300e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 12 12:35:16 2017 +0800

    PersonListPanel: Update ListView<ReadOnlyPerson> to ListView<PersonCard>

    PersonListPanel displays a list of ReadOnlyPersons stored in its ListView.

    This can result in cases whereby the PersonListPanel contains a
    particular person, however there is no corresponding PersonCard
    containing the person.

    Since Person is now observable, let?s update ListView<ReadOnlyPerson>
    to ListView<PersonCard>, with each PersonCard observing the Person
    that the card is displaying.

[33mcommit 23fd697b2f4ea2de1054cdee6bda7050d26891c9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 13 10:43:08 2017 +0800

    Import EasyBind

    JavaFX does not provide API for binding the model and view easily.

    We need to create an additional ObservableList to map the FilteredList
    in the ModelManager. Also, we have to ensure that the ObservableList
    is updated whenever the FilteredList is updated.

    Let?s import EasyBind which abstracts the implementation, allowing
    us to bind view and model with less work.

[33mcommit b1c5e49fad734f8b07c87178c3b3108fc6c8ee50[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 12 12:35:32 2017 +0800

    Teach Person and ReadOnlyPerson to be observable

    Person is not using *Property for its fields.

    This makes Person unobservable.

    Let?s replace Person?s fields to use ObjectProperty, and let?s teach
    ReadOnlyPerson to return the ObjectProperty fields.

[33mcommit 84d6516fb88cceba44c55050d8cbd2a905f53374[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Tue Jul 18 09:29:27 2017 +0800

    [#557] ParserUtil: Update header comments on Optional usage (#558)

    ParserUtil#parseX(Optional) methods currently take in an Optional.

    This violates the usage of Java Optional. However, the methods in
    concern receive {@code Optional} return values from other methods as
    parameters and return {@code Optional} values based on whether the
    parameters were present. Therefore, it is redundant to unwrap the
    initial {@code Optional} before passing to {@code ParserUtil} as a
    parameter and then re-wrap it into an {@code Optional} return value
    inside {@code ParserUtil} methods.

    Let's add header comments in ParserUtil to make it clear to future
    developers why ParserUtil takes in Optional even though it violates
    Java's convention.

[33mcommit 52ec52609b8a17da202dd3fa8f9813b7820b5d3f[m
Merge: 24c4da0 cbc6571
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 17 09:30:10 2017 +0800

    [#545] Clean XCommandParserTests (#546)

    XCommandParserTests use their own assertParseSuccess(...) and
    assertParseFailure(...) to verify the test results.

    This violates the DRY principle as there are repeated code in these
    methods across the test classes.

    Let's extract these methods into a CommandParserTestUtil class and
    teach these test classes to use the methods in
    CommandParserTestUtil.

[33mcommit cbc6571757d250295849622286c1d8bf7cf8d621[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jul 7 09:00:57 2017 +0800

    Update DeveloperGuide

[33mcommit 5266cc7c22509a53b75f9020876d9fd3b9638e79[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 09:16:48 2017 +0800

    SelectCommandParserTest: Use helper methods in CommandParserTestUtil

    Following the addition of CommandParserTestUtil, there is no need for
    SelectCommandParserTest to have its own code for verifying the
    correctness of the test cases.

    Let's teach SelectCommandParserTest to use the helper methods from
    CommandParserTestUtil instead.

[33mcommit b29fd96927d9d5bcaa2e130c495ddcace6d4a2a6[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 09:16:33 2017 +0800

    FindCommandParserTest: Use helper methods in CommandParserTestUtil

    Following the addition of CommandParserTestUtil, there is no need for
    FindCommandParserTest to have its own code for verifying the correctness
    of the test cases.

    Let's teach FindCommandParserTest to use the helper methods from
    CommandParserTestUtil instead.

[33mcommit 6eb4e3f700b49d44b13a6dfc1c295863a4149db9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 09:16:19 2017 +0800

    EditCommandParserTest: Use helper methods in CommandParserTestUtil

    EditCommandParserTest uses its own version of assertParseSuccess(...)
    and assertParseFailure(...)

    Following the addition of CommandParserTestUtil, there is no need for
    EditCommandParserTest to have its own code for verifying the correctness
    of the test cases.

    Let's teach EditCommandParserTest to use the helper methods from
    CommandParserTestUtil instead.

[33mcommit a7c50d6d951f8b7279cebe9b5f5c2907c7d4ae20[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 09:16:09 2017 +0800

    DeleteCommandParserTest: Use helper methods in CommandParserTestUtil

    Following the addition of CommandParserTestUtil, there is no need for
    DeleteCommandParserTest to have its own code for verifying the
    correctness of the test cases.

    Let's teach DeleteCommandParserTest to use the helper methods from
    CommandParserTestUtil instead.

[33mcommit 4fe4e2b7cc88803bb59343ff972c05a4332e6941[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 09:15:53 2017 +0800

    AddCommandParserTest: Use helper methods in CommandParserTestUtil

    AddCommandParserTest uses its own version of assertParseSuccess(...)
    and assertParseFailure(...)

    Following the addition of CommandParserTestUtil, there is no need for
    AddCommandParserTest to have its own code for verifying the correctness
    of the test cases.

    Let's teach AddCommandParserTest to use the helper methods from
    CommandParserTestUtil instead.

[33mcommit 7e4d4ec1391519d95e116d30ada2f37f836c8a04[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 09:12:19 2017 +0800

    Add CommandParserTestUtil

    XCommandParserTests have similar helper methods to verify the success of
    each test case.

    Following the DRY principle, we should extract these helper methods into
    a common class.

    Let?s create a CommandParserTestUtil, which is a utility class that
    has these helper methods for verifying the success of
    XCommandParserTests.

[33mcommit 402bcb01ec40c9c18435012b45997f89dd826842[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jul 6 08:43:06 2017 +0800

    Add Parser interface

    XCommandParsers have common behaviour. However, they are not linked
    by inheritance or interface.

    This makes the code look unstructured.

    Let?s add Parser as an interface, with the XCommandParsers
    implementing it.

[33mcommit 054aa63ad898cd5e37267f6dff49c3cf6751b36a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jul 7 08:48:13 2017 +0800

    Rename Parser to AddressBookParser

    Parser parses the commands specific to AddressBook application.

    It should have a more specific name: AddressBookParser as it is doing
    a specific task.

    Let?s rename Parser to a more specific name.

[33mcommit 24c4da0578cbde77f409b5bb36b8903e90615dc9[m
Merge: 56e874d 5b3b6c0
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 17 08:24:12 2017 +0800

    [#334] Model filtering not easily extensible (#431)

    ModelManager#updateFilteredPersonList(Set<String>) searches for name
    using a set of keywords. To add more filtering methods, the model source
    code must be edited directly.

    Using Java Predicates allow us to be more flexible by allowing the
    caller to search for fields other than name and different combinations
    of fields.

    Let's replace ModelManager#updateFilteredPersonList(Set<String>) with
    ModelManager#updateFilteredPersonList(Predicate<ReadOnlyPerson>) to
    allow more flexible searches.

[33mcommit 5b3b6c0c9ac501138399f6279603efc9d6fb0112[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Mon Jun 12 16:09:04 2017 +0800

    Add NameContainsKeywordsPredicateTest

[33mcommit dbf6c85d2c7800ba566d2e512df825d7a39c3831[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Mon Jun 12 16:07:58 2017 +0800

    Use predicates in ModelManager

    ModelManager#updateFilteredPersonList(Set<String>) searches for name
    using a set of keywords. To add more filtering methods, the model source
    code must be edited directly.

    Using Java Predicates allow us to be more flexible by allowing the
    caller to search for fields other than name and different combinations
    of fields.

    Let's replace ModelManager#updateFilteredPersonList(Set<String>) with
    ModelManager#updateFilteredPersonList(Predicate<ReadOnlyPerson>) to
    allow more flexible searches.

[33mcommit 56e874d0e7b4cab2b87d573782df3b34f9bafc3c[m
Merge: 6422e8f c140840
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 14 08:07:46 2017 +0800

    [#459] Add NodeHandle and WindowHandle (#522)

    GuiHandle is a messy class. It has no proper encapsulation as it can
    access all nodes in the scene graph. It is also not very cohesive, as
    it handles interactions with text fields, labels and windows.

    Let's create NodeHandle, which points to a Node in the scene graph
    (usually used to point to a compoent), and StageHandle, which points
    to a Stage in the scene graph. NodeHandle and StageHandle will be the
    substitute to GuiHandle. Let's also port all our component handles to
    use the new NodeHandle and StageHandle.

[33mcommit 6422e8f3048fc63e9e46a8d7937eb3bc433e74ad[m
Merge: ddc6b98 7506130
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 13 08:16:53 2017 +0800

    [#545] Clean XCommandTests (#544)

    XCommandTests use their own assertCommandSuccess(...) and
    assertCommandFailure(...) to verify the test results.

    As CommandTestUtil have similar methods, XCommandTests should use
    them instead.

    Let's teach them to use the common methods located in
    CommandTestUtil.

[33mcommit ddc6b98a69d841de003549cb4029dcf8bd199797[m
Merge: 3e71299 0ea2287
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 13 08:12:48 2017 +0800

    [#539] Clean up UniqueTagList (#540)

    UniqueTagList has 2 overloaded methods to set tags:
    setTags(UniqueTagList) and setTags(Collection).

    Person#setTags(Set) constructs a UniqueTagList from the set of tags
    passed in. It then calls UniqueTagList#setTags(UniqueTagList),
    which then calls setAll(UniqueTagList#internalList).

    This makes the construction of UniqueTagList unnecessary as no
    other properties of UniqueTagList are required here.

    Also, AddressBook#resetData(ReadOnlyAddressBook) calls
    setTags(Collection), followed by a catch clause asserting that
    AddressBooks should not have duplicate tags.

    This makes the code unnecessarily long as there is a try-catch
    block, where the catch block does not do anything significant.

    Let?s replace these methods with UniqueTagList#setTags(Set<Tag>).
    Person#setTags(Set<Tag>) will not need to construct a UniqueTagList,
    and AddressBook#resetData(ReadOnlyAddressBook) will not need to
    catch the DuplicateTagException as there are no duplicate tags in a
    Set.

[33mcommit c140840f60ee8372271713d386c45d989e1721ec[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 16:18:10 2017 +0800

    Delete GuiHandle

    GuiHandle has been superseded by NodeHandle and StageHandle. It is no
    longer in use.

    Let's remove it.

[33mcommit 0c0a8549c695bf38b540cf7fd47332adb3055372[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 16:02:49 2017 +0800

    Port StatusBarFooterHandle to NodeHandle

    StatusBarFooterHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port StatusBarFooterHandle to use NodeHandle.

[33mcommit fce31fb84c1374e164cc5a56744cb1d5dc2b2c99[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 16:01:50 2017 +0800

    Port ResultDisplayHandle to NodeHandle

    ResultDisplayHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port ResultDisplayHandle to use NodeHandle.

[33mcommit 8f9c34211321faae3426ccbc6868273f32478100[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jul 11 16:06:17 2017 +0800

    PersonListPanelHandle: Remove unnecessary pre-condition check

    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) checks that
    the ReadOnlyPerson is in the list, and throws PersonNotFoundException if
    it isn't.

    We can safely assume that if the card is not found, then the person
    cannot exist in the list. The converse is also true (i.e. if the person
    is not in the list, then the corresponding card cannot exist).

    Let's simplify the logic of
    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) by removing
    the check of ReadOnlyPerson in the list, as it is unnecessary.

[33mcommit cb798b83108a028d1c33067cbcb2a1ff1d369199[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 16:00:31 2017 +0800

    Port PersonListPanelHandle to NodeHandle

    PersonListPanelHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port PersonListPanelHandle to use NodeHandle.

[33mcommit 5381e1c39d439db564e11fbbe0b8ac649f2ad9a7[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:58:54 2017 +0800

    Port PersonCardHandle to NodeHandle

    PersonCardHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port PersonCardHandle to use NodeHandle.

[33mcommit ff8c52591882336a12e025bde09798130c101909[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:58:06 2017 +0800

    Port MainMenuHandle to NodeHandle

    MainMenuHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port MainMenuHandle to use NodeHandle.

    The main menu does not have an ID for us to obtain its node. Let's
    modify the .fxml file to add one.

[33mcommit cbcfc41b07396c5826d3ec8f2059b539df8283bc[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:56:46 2017 +0800

    Port HelpWindowHandle to StageHandle

    HelpWindowHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port HelpWindowHandle to use StageHandle.

[33mcommit 52290b8f96c161cb41c91597d9f497a63979114f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:54:25 2017 +0800

    Port CommandBoxHandle to NodeHandle

    CommandBoxHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port CommandBoxHandle to use NodeHandle.

[33mcommit b630578991d919fda0bb2aa6ab76364eb3c72bfc[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:52:40 2017 +0800

    Port BrowserPanelHandle to NodeHandle

    BrowserPanelHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port BrowserPanelHandle to use NodeHandle.

[33mcommit 644ab7039db7bedc138bee3464ef3b4f31f823f2[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:50:28 2017 +0800

    Port AlertDialogHandle to StageHandle

    AlertDialogHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port AlertDialogHandle to use StageHandle.

[33mcommit 36b55346269f1ce09ccce1d698295ab4c0b739e9[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:36:27 2017 +0800

    Port MainWindowHandle to StageHandle

    MainWindowHandle inherits from GuiHandle.

    GuiHandle is deprecated.

    Let's port MainWindowHandle to use StageHandle instead.

[33mcommit 3295e1f3117431afa759dbcf1748f1f88b61754e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 30 09:58:23 2017 +0800

    Add GuiRobot#getStage(String)

    FxRobot#window(String) allows us to get the Window with the
    corresponding window title.

    Some tests require access to the Stage rather than the Window, in order
    to get its focus or close the window.

    Let's add GuiRobot#getStage(String).

    As it is possible that none of the stages matches the name given, let's
    also add StageNotFoundException, so that the tests stop with an
    appropriate error message.

[33mcommit 750613018859af887a9ff8e2c069196b2a1a87f8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 14:18:11 2017 +0800

    EditCommandTest: Static import CommandTestUtil methods

    EditCommandTest uses CommandTestUtil#assertCommandSuccess(...) and
    CommandTestUtil#assertCommandFailure(...)

    As both methods are called multiple times in the class, we should
    static import them to make the code look shorter.

    Let?s static import these 2 methods.

[33mcommit 09cc03796fd832cab610ca3678bb499c740fe483[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 14:18:03 2017 +0800

    DeleteCommandTest: Static import CommandTestUtil methods

    DeleteCommandTest uses CommandTestUtil#assertCommandSuccess(...) and
    CommandTestUtil#assertCommandFailure(...)

    As both methods are called multiple times in the class, we should
    static import them to make the code look shorter.

    Let?s static import these 2 methods.

[33mcommit 59fa74867986e3a2889d7ec761b1e92475f5d46e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 14:24:39 2017 +0800

    ListCommandTest: Use CommandTestUtil#assertCommandSuccess(...)

    ListCommandTest uses its assertCommandSuccess(...) to verify the
    test results.

    As CommandTestUtil has a similar method, ListCommandTest should use
    it instead.

    Let?s remove ListCommandTest#assertCommandSuccess(...) and teach
    ListCommand to use CommandTestUtil#assertCommandSuccess(...) instead.

[33mcommit aa8aeaf02f795944936f63ddcf0b1b18f07e6082[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 14:15:33 2017 +0800

    ClearCommandTest: Use CommandTestUtil#assertCommandSuccess(...)

    ClearCommandTest uses its assertCommandSuccess(...) to verify the
    test results.

    As CommandTestUtil has a similar method, ClearCommandTest should use
    it instead.

    Let?s remove ClearCommandTest#assertCommandSuccess(...) and teach
    ClearCommand to use CommandTestUtil#assertCommandSuccess(...) instead.

[33mcommit 9c6d89080e6671aee5e151659b473730eacc1616[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 14:11:57 2017 +0800

    AddCommandIntegrationTest: Use CommandTestUtil methods

    CommandTestUtil#assertCommandSuccess(...) and
    CommandTestUtil#assertCommandFailure(...) verify the content of the
    model. Therefore, these methods are suitable for doing verification
    in integration tests.

    AddCommandIntegrationTest does not use these methods for verification in
    its tests. The logic is inlined instead. This violates the DRY principle.

    Let's teach AddCommandIntegrationTest to use
    CommandTestUtil#assertCommandSuccess(...) and
    CommandTestUtil#assertCommandFailure(...).

[33mcommit 2b7b8567ca4f0c285e0c93a87128839e2aef3a05[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 30 16:31:24 2017 +0800

    AddressBookGuiTest: Add runCommand()

    It is common for tests to execute commands through the CommandBox.

    We can provide a helper method in AddressBookGuiTest.

    Let's add AddressBookGuiTest#runCommand().

[33mcommit 77395ccbb8b64256fdcf905e39fc0958f95f511a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jul 4 09:22:37 2017 +0800

    AddressBookGuiTest#setup(): Deter initialization of MainWindowHandle

    MainWindowHandle is initialized while the stage is being set up.

    Future implementation of MainWindowHandle might require accessing the
    nodes. The nodes will not be available while the stage is being set up.

    Let's deter the initialization of MainWindowHandle to after the stage is
    set up.

[33mcommit 2ea6f055e2aa0cb767e68b75accbc9c93b7b033d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 10:31:32 2017 +0800

    AddressBookGuiTest: Remove component handles

    AddressBookGuiTest manually obtains the handles of each component from
    MainGuiHandle and stores them in its own variables.

    This breaks the encapsulation as MainGuiHandle should be the owner of
    the handles.

    Let's add getter methods to AddressBookGuiTest which will obtain the
    handles from MainGuiHandle, rather than assigning the handles into
    our own variables.

[33mcommit 2d8edc5668ef0b6a965479add06d379989c5efe9[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 15:27:31 2017 +0800

    Add NodeHandle and StageHandle

    GuiHandle is a messy class. It has no proper encapsulation as it can
    access all nodes in the scene graph. It is also not very cohesive, as
    it handles interactions with text fields, labels and stages.

    There should be a handle class that deals with nodes only, and another
    handle class that deals with stages only.

    Let's create NodeHandle, which will concern itself with remembering the
    root node of the component, and is able to obtain sub-nodes within the
    component. It will also contain interaction methods that are applicable
    to all components.

    Let's also create StageHandle, which points to a Stage in the scene
    graph. It will also be capable of stage interactions, and obtaining
    the nodes within the Stage to allow us to create NodeHandles.

    As a result of creating NodeHandle and StageHandle, GuiHandle should no
    longer be used by any new classes. Let's deprecate GuiHandle, and update
    the header comments to mention about the new classes.

    NodeHandle#getChildNode(String) and StageHandle#getChildNode(String) may
    fail to find the nodes if the name given is invalid. Let's also create a
    NodeNotFoundException to allow us to warn the callers of such cases.

[33mcommit fa654d9636adc51cdc3e62afb166e91220de4862[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 14:05:42 2017 +0800

    Combine both CommandTestUtil classes

    There are two classes named CommandTestUtil, located in different
    packages.

    There is no need for these classes to be separate as they both have the
    same responsibilities.

    Let?s merge these classes.

[33mcommit 0ea22876167526b4058942a368fa0c8d080c5033[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 09:12:41 2017 +0800

    UniqueTagList: Remove setTags(Collection<Tag>)

    This method is now unused.

    Let?s remove it.

[33mcommit ffe36a8c0e6abda38149f8b013bddd7c8b18b324[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 09:12:14 2017 +0800

    AddressBook: Modify setTags(Collection<Tag>) to setTags(Set<Tag>)

    AddressBook#resetData(ReadOnlyAddressBook) calls setTags(Collection),
    followed by a catch clause asserting that AddressBooks should not
    have duplicate tags.

    This makes the code unnecessarily long as there is a try-catch
    block, where the catch block does not do anything significant.

    Let's modify setTags(Collection) to take in a Set instead. This
    method will call UniqueTagList#setTags(Set), which does not throw
    DuplicateTagException. Thus, this eliminates the need to catch it
    in AddressBook#setTags(Set), thus removing the unnecessary assertion.

[33mcommit aa05ef5e084e0e99e4df40bec8dd06f25ef3d036[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 08:56:29 2017 +0800

    UniqueTagList: Modify setTags(UniqueTagList) to setTags(Set<Tag>)

    Person#setTags(Set) constructs a UniqueTagList from the set of tags
    passed in. It then calls UniqueTagList#setTags(UniqueTagList),
    which then calls setAll(UniqueTagList#internalList).

    This makes the construction of UniqueTagList unnecessary as no
    other properties of UniqueTagList are required here.

    Let?s teach UniqueTagList#setTags(UniqueTagList) to take in Set
    instead, to avoid the unnecessary construction of UniqueTagList.

[33mcommit 3e71299fdd455bdd42ba4768bcc26fbddbd82cfc[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Jul 7 08:23:05 2017 +0800

    UniqueTagList: Remove unused constructors (#542)

    UniqueTagList(String...), UniqueTagList(Tag...),
    UniqueTagList(Collection<Tag>), UniqueTagList(UniqueTagList) are unused.

    Let?s remove them.

[33mcommit 89539897229b581a5a575a0f53a4b47c96976e2f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jul 7 08:21:15 2017 +0800

    DeveloperGuide.adoc: Add step for updating version number in MainApp (#543)

    When doing a new release, MainApp#VERSION needs to be updated to match
    the release version number.

    This step is not reflected in DeveloperGuide.adoc's release devops
    procedure.

    Let's add the step for updating the version number in MainApp.

[33mcommit b30adb414090e31783a294f8790bbc3bfebc6a83[m
Merge: a817b56 b404fa4
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jul 6 09:52:24 2017 +0800

    Allow up and down buttons to get previous and next input respectively (#491)

    The user is only able to see their previously typed commands through
    the history command.

    The user may need to access their previously typed commands quickly in
    order to fix a previous typo, or to reuse the input for another
    variation.

    Let's add a function that allows users to retrieve the previous and
    next input in the history by pressing the up and down arrow keys
    respectively.

[33mcommit a817b56dff2a2061049ba053b67093c1c8bcafe3[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 09:09:06 2017 +0800

    [#534] HistoryCommand: Returns previous commands in reverse chronological order (#537)

    The HistoryCommand returns the previous commands in chronological
    order.

    This goes against the intuition that history ought to be viewed in
    reverse chronological order. We are expecting that the user will want
    to see what he has typed most recently, just like how Google Chrome
    History works.

    Let?s update HistoryCommand to return previous commands in reverse
    chronological order.

[33mcommit 152302ea562807f782fb865528776093592e326a[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Jul 5 09:02:14 2017 +0800

    [#249] MainApp: Update version to 1.4 (#541)

    The version is 1.0.

    This number is outdated, as we have recently released version 1.4 of the
    app.

    Let?s update the version to reflect the new version of the recent
    release.

[33mcommit 05b883ebfd21e2c3cd8d209ead3dc19852f9c5d2[m
Merge: 5421bbf e03ce4f
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 08:18:14 2017 +0800

    Add ParserTest #538

[33mcommit 5421bbf7dc83c29c2ad1c7e949291e9c8e41557f[m
Merge: 4e727c4 540862f
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 08:16:42 2017 +0800

    [#327] Clean LogicManagerTest (#495)

    LogicManagerTest contains unit tests for XCommand and XCommandParser.

    LogicManagerTest should only be testing the code flow in LogicManager.
    Unit tests for XCommand and XCommandParser should instead be written
    in XCommandTest and XCommandParserTest respectively.

    As these unit tests for XCommand and XCommandParser have been written
    already, let's delete the tests that are not relevant to
    LogicManagerTest.

[33mcommit 4e727c4adf3c6802e4dd92319d4877ce097a9927[m
Merge: 877982f be4b7fb
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 08:15:53 2017 +0800

    [#498] Shift event handling methods out of UiManager (#499)

    UiManager is catching events such as JumpToListRequestEvent which then
    calls methods to cause the PersonListPanel to scroll to the
    corresponding location.

    There is no need for a high-level component such as UiManager to catch
    these events. As such, the individual components that are handling
    these events ought to catch them instead.

    Let's shift the catching of events into the classes that are handling
    them.

[33mcommit 877982f2642e021b0e121c1eef7106f9d67ed27f[m
Merge: 47a1661 c2c9a65
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 08:13:52 2017 +0800

    [#459] Clean up ErrorDialogGuiTest (#531)

    Let's

    - Extract out commonly used strings and objects as constants to avoid
      violating DRY principle.
    - Remove unnecessary declaration of runtime exception
      InterruptedException.
    - Create methods in AlertDialogHandle, allowing us to verify the contents
      of the error dialog box.
    - Inline AlertDialogHandle#isMatching(String, String), as it should be
      the responsibility of ErrorDialogGuiTest to verify the content.

[33mcommit 47a1661c2e2dfbe0e0c43b79b5ec0497dd30bde3[m
Merge: 89889b9 df5c210
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jul 5 08:04:08 2017 +0800

    Add unit tests for PersonCard class (#260)

    The GUI tests are system tests, which would make use of the main
    application and create all of the GUI parts.

    There is no easy way to unit test the GUI parts without launching the
    entire application. Therefore, there are no unit tests for GUI parts.

    Let's create a testing architecture for testing individual GUI parts,
    and let's create PersonCard unit test as a demonstration of the testing
    architecture.

[33mcommit e03ce4f16937da11ff9269d447f66c955ecbc7b9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jun 27 10:36:47 2017 +0800

    Add ParserTest

[33mcommit 8dc5b6e49b781994f7309a83740a08af55cd18f5[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jul 4 11:37:15 2017 +0800

    PersonUtil: Update getPersonDetails(...) visibility modifier to public

    getPersonDetails(Person) visibility modifier is private.

    A future test will need this method (see next commit).

    Let?s change the visibility modifier to public.

[33mcommit b404fa406bb23173f7ce9abb1cc016d35aeab33c[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 29 14:17:54 2017 +0800

    Update User Guide

[33mcommit 8af0d06c72c25b1868d2491bb7c8e239ec836266[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jul 4 09:44:35 2017 +0800

    CommandBoxTest: Update existing test case

    commandBox_handleKeyPress() no longer needs to create a local GuiRobot
    as the class already has a GuiRobot.

    Let?s remove the creation of the local GuiRobot in
    commandBox_handleKeyPress().

[33mcommit 5856b94e0c851d40fd0de5cb28593d400a96fd80[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 29 14:17:49 2017 +0800

    Allow up and down buttons to get previous and next input respectively

    The user is only able to see their previously typed commands through
    the history command.

    The user may need to access their previously typed commands quickly in
    order to fix a previous typo, or to reuse the input for another
    variation.

    Let's add a function that allows users to retrieve the previous and
    next input in the history by pressing the up and down arrow keys
    respectively.

[33mcommit 389b2a177a1a671e69daa8fbd2153b6ae07f130d[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 29 14:17:10 2017 +0800

    Teach Logic component to return the user input history

    CommandBox has no way to access the user input history in Logic as
    CommandHistory?s visibility modifier is private.

    This makes it impossible for CommandBox to retrieve what the user
    has input previously.

    As a step towards allowing up and down buttons to get the previous and
    next input respectively, let?s teach the Logic component to return
    the user input history in CommandHistory.

[33mcommit 175017ddff5c23826d3d5cac9fe2fb1a92b1e8d1[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 21 14:12:11 2017 +0800

    Add ListElementPointer

    The native ListIterator?s cursor does not point to an element.
    Rather, it points in between elements. As a result, alternating
    calls of ListIterator#next() and ListIterator#previous() return
    the same element.

    This behaviour is not suitable for implementing the functionality
    of allowing up and down buttons to return the previous and next
    input respectively.

    As a step towards allowing up and down buttons to get previous and
    next input respectively, let?s create ListElementPointer.
    ListElementPointer has an index that works as a pointer to an element
    in the list. This allows us to iterate through the list while
    providing better code clarity.

    We have tried to create a class that wraps around ListIterator, but
    it does not work well because the cursor still does not point to an
    element.

    Also, we have tried to create a PeekingListIterator(an extension
    of PeekingIterator [1]), in which we use peekNext() and peekPrevious()
    to get the next and previous elements accordingly. One of the ways
    is to override the next() and previous() methods such that they do
    not return anything. However, this would violate the Iterator?s
    semantics. Another way is to not override both methods, and simply
    ignore the return values i.e we only access the next and previous
    elements by using peekNext() and peekPrevious() respectively.
    However, this isn?t intuitive to future developers who may wonder
    why we are ignoring the return values.

    [1]: http://google.github.io/guava/releases/21.0/api/docs/com/google/common/collect/PeekingIterator.html

[33mcommit be4b7fbe305992b86a4d3ab63bee6f65cbb7f770[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jun 19 16:01:41 2017 +0800

    Update BrowserPanel#loadPersonPage(?) visibility modifier to private

    This method is no longer called by classes other than itself.

    Let?s update its visibility modifier to private.

[33mcommit d725516f91920b256dcb7966b8b78ff37bb770f0[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 16 14:15:17 2017 +0800

    Move UiManager#handlePersonPanelSelectionChangedEvent(?) to BrowserPanel

    UiManager catches PersonPanelSelectionChangedEvent.

    PersonPanelSelectionChangedEvent is handled by BrowserPanel, so it
    should be caught by BrowserPanel instead.

    Let?s move this method to BrowserPanel.

[33mcommit 15cf4b14b80b91fc6d2259105cd88411849dbc33[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jun 19 16:01:31 2017 +0800

    Update PersonListPanel#scrollTo(int) visibility modifier to private

    This method is no longer called by classes other than itself.

    Let?s update its visibility modifier to private.

[33mcommit 481e58e9256c2ca5411d85e17d75c023d6316781[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 16 14:11:29 2017 +0800

    Move UiManager#handleJumpToListRequestEvent(?) to PersonListPanel

    UiManager catches JumpToListRequestEvent.

    JumpToListRequestEvent is handled by PersonListPanel, so it should be
    caught by PersonListPanel instead.

    Let?s move this method to PersonListPanel.

[33mcommit 2a4b7aa165fc368eb95ddc87e3e374530cf26902[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 16 14:09:44 2017 +0800

    Move UiManager#handleShowHelpEvent(?) to MainWindow

    UiManager catches ShowHelpRequestEvent.

    ShowHelpRequestEvent is handled by MainWindow, so it should be caught
    by MainWindow instead.

    Let?s move this method to MainWindow.

[33mcommit 89889b9a0bb1c75b945d41466adc4bec50f9a72e[m
Merge: 5a70b77 1b6aa20
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jul 4 08:09:10 2017 +0800

    [#529] CommandBox: Reset style class upon keypress (#530)

    CommandBox is highlighted red when the user presses enter with an
    invalid command input in the CommandBox. The highlight is only reset
    when the user presses enter with a valid command input in the CommandBox.

    As the highlight is meant to inform the user that he / she has entered
    an invalid input, there is no need for the highlight to persist after
    the user has edited the text in CommandBox.

    Let's reset the highlight of the CommandBox the text in it is updated.

[33mcommit 1b6aa2091c5a48eaa1757ebc164d1099942b0c61[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 28 13:17:11 2017 +0800

    Rename setStyleToIndicateCommandSuccess() to setStyleToDefault()

    This method is no longer called when a command is successfully
    executed. Instead, it is called whenever the text field is edited.

    Let?s update the name of this method to reflect this behaviour.

[33mcommit c2c9a65d4e18575e68146563654cd6a10815efae[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 10:33:03 2017 +0800

    AlertDialogHandle: Refactor out isMatching(String, String)

    AlertDialogHandle#isMatching(String, String) checks whether the content
    of the dialog box matches the expected header and content messages.

    AlertDialogHandle should not be checking whether the content matches
    what was expected. That should be the job of the caller of the method,
    ErrorDialogGuiTest.

    Let's refactor out the logic of isMatching(String, String) to
    ErrorDialogGuiTest.

[33mcommit def162d6cd921df6386b0c2bbfa01631edb50b0c[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 10:25:57 2017 +0800

    AlertDialogHandle: Add getHeaderText() and getContentText()

    AlertDialogHandle#isMatching(String, String) checks whether the content
    of the dialog box matches the expected header and content messages.

    AlertDialogHandle should not be checking whether the content matches
    what was expected. That should be the job of the caller of the method,
    ErrorDialogGuiTest.

    As a step towards refactoring isMatching(String, String) out to
    ErrorDialogGuiTest, let's add getHeaderText() and getContentText() to
    allow users of the AlertDialogHandle to get the content of the dialog
    box.

[33mcommit dff17e041ce00696ee0423914808bde4393bc5e3[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 15:15:55 2017 +0800

    ErrorDialogGuiTest: Extract exception constant

    ErrorDialogGuiTest#showErrorDialogs() tests the handling of the dialog
    box launch event by using a custom made exception.

    The message of the exception can be taken from the Exception#toString()
    method. However, it is not used in the verification stage, which uses a
    hard-coded magic string instead.

    Let's extract the exception so that it can be reused to test that the
    proper error message is shown during the verification stage.

[33mcommit 8c6cdf03784e9c2cbee26ec8f0d512c8d85c05fd[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 16:20:09 2017 +0800

    ErrorDialogGuiTest: Remove InterruptedException declaration

    ErrorDialogGuiTest#showErrorDialogs() declares that it throws an
    InterruptedException.

    Runtime exceptions do not need to be declared.

    Let's remove the InterruptedException declaration in
    ErrorDialogGuiTest#showErrorDialogs().

[33mcommit 6c20a77fcda62a30f1431d9fc090cd10293eede6[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 28 09:48:32 2017 +0800

    CommandBox: Reset style class upon editing text

    CommandBox is highlighted red when the user presses enter with an
    invalid command input in the CommandBox. The highlight is only reset
    when the user presses enter with a valid command input in the CommandBox.

    As the highlight is meant to inform the user that he / she has entered
    an invalid input, there is no need for the highlight to persist after
    the user has edited the text in CommandBox.

    Let's reset the highlight of the CommandBox the text in it is updated.

[33mcommit 93b6d48be4a11a053482140e55ca6cd40013ca56[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 09:49:51 2017 +0800

    ErrorDialogGuiTest: Use string constants in UiManager

    ErrorDialogGuiTest#showErrorDialogs() verifies that the content of the
    error dialog box is correct. It uses magic strings to do the
    verification.

    We already have the appropriate string constants in UiManager.

    Let's teach ErrorDialogGuiTest to use the constants in UiManager.

[33mcommit 928591ce1dc41288bef8923258c7ac0d86c32322[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 09:47:33 2017 +0800

    UiManager: Extract out magic strings for file ops error dialog box

    When handling an exception for a file operation, UiManager uses magic
    strings to create the appropriate dialog box.

    Magic strings should not be used as it does not tell us which part of
    the dialog box is the text used for.

    Let's extract out the magic strings for file ops error dialog box into
    constants, and let's use these constants when creating our appropriate
    dialog box.

[33mcommit 5a70b77b2a4679666e12e36fe92dccc4f53f5310[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Mon Jul 3 07:46:27 2017 +0800

    [#532] CommandHistory: Change userInputHistory implementation to LinkedList (#533)

    CommandHistory only allows elements to be appended to it (which is
    backed by an ArrayList).

    Appending to an ArrayList takes amortised O(1) time. This will be
    worsened after #491 is merged, whereby CommandHistory only allows
    elements to be prepended to it, which takes O(n) time per insertion
    using an ArrayList. On the other hand, using a LinkedList takes a
    constant ?(1) time to append or prepend an element.

    Let's change the implementation of userInputHistory to use LinkedList
    instead.

[33mcommit a16043703f28e5b3dab95915f5c5e5bf4fdc5fc1[m
Merge: 0b45e7e 9c5882a
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 3 07:45:31 2017 +0800

    [#459] Clean up AddressbookGuiTest (#520)

    Let's clean up AddressBookGuiTest by:

    - Removing the while loop that waits for the stage to show in the
      setup() phase. FxToolkit#showStage() automatically blocks until
      the stage shows, so the wait is unnecessary.
    - Creating the guiRobot only in AddressBookGuiTest. It need not be
      recreated and can be shared by everyone.
    - Reducing the visibility of assertMatching(...) and raise(...) from
      public to private.
    - Renaming method parameters that does not conform to coding standards.
    - Renaming setupSpec() to setupOnce().
    - Changing cleanup()'s throws declaration from TimeoutException to
      Exception.
    - Renaming assertMatching(...) to assertCardMatchesPerson(...).

[33mcommit 0b45e7e5883f9da332e505f18940cbf607e16010[m
Merge: daddc42 9475a8e
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jul 3 07:44:34 2017 +0800

    [#327] Add FindCommandTest and FindCommandParserTest (#513)

[33mcommit df5c210b274c29371218da83a997fd6ad7f572f1[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 16:29:04 2017 +0800

    build.gradle: Add 'seedu/address/ui/' as part of guiTests

    Our GUI unit tests are located in 'seedu/address/ui/'.

    This is not configured in our build.gradle, thus our GUI unit tests will
    not run when running the task 'guiTests'.

    Let's add 'seedu/address/ui/' as one of the test paths for 'guiTests'
    task, so that our GUI unit tests will run as well.

[33mcommit 3f9a4d2e21bd213e162dbb8faf8b176047d6f51b[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jan 20 11:17:09 2017 +0800

    Add PersonCardTest

    The GUI tests are system tests.

    The individual GUIs do not have unit tests.

    Let's add a PersonCardTest to unit test the PersonCard GUI component.

    An alternative method of checking the labels would be to use
    reflections. However, reflections are not suitable for level 4
    learning objectives.

[33mcommit eb96cfb139f2ecbfd8e768dbd41936c7135463a0[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 15:49:14 2017 +0800

    Add UiPartRule

    To implement GUI unit tests, we need to isolate the GUI component.

    Let's create UiPartRule, which sets up an empty stage and provides us
    with a method to insert a single GUI component for testing.

[33mcommit 45bd11168de845fc639a20fc3d654db8a60ceaf7[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 15:48:38 2017 +0800

    Add StageRule

    To test GUI features related to JavaFx, we need to set up the stage
    during startup and do necessary cleanup.

    We can implement a StageRule to automate the process.

    Let's create StageRule that properly sets up and tears down a JavaFx
    stage when doing Gui test rules.

[33mcommit 9956957a750b1addad8e5c0e52717d6f95964cac[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu May 11 11:25:44 2017 +0800

    Add TestUtil#getTagsAsStringsList()

    Person returns tags as a UniqueTagList.

    We need to check that the tags shown in the PersonCard are correct.
    However, PersonCardHandle returns a list of Strings rather than
    UniqueTagList.

    Let's add TestUtil#getTagsAsStringsList() as a test utility method to
    convert UniqueTagList back into a set of Strings, to simplify
    comparison.

[33mcommit 9475a8eeaea9ebb7e5ce328df23fd1e47c327669[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue Jun 27 15:54:22 2017 +0800

    Add FindCommandParserTest

[33mcommit 75aa3d928e96924ee95ba8b2ef7471e1aee46375[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue Jun 27 15:54:13 2017 +0800

    FindCommand: Add equals(Object)

[33mcommit 665c58746415be8eea0debf1c9a2503bc7147308[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Mon Jun 12 16:09:17 2017 +0800

    Add FindCommandTest

[33mcommit 50f20b286e8b31215159e937c2da1cd927e1c6a6[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jan 24 13:14:58 2017 +0800

    Update PersonCardHandle to include ID label

    The handle for PersonCard does not provide a way to access the ID
    label.

    We need to access the ID in our PersonCard unit test.

    Let's add getId().

[33mcommit 9c5882a29c73e0e6f332dec386c265bb4b59153f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 10:50:43 2017 +0800

    AddressBookGuiTest#assertMatching(...): Rename method

    AddressBookGuiTest#assertMatching(...) checks that the card is
    associated with the person.

    The name of the method can be improved as it does not tell us what it is
    matching.

    Let's rename the method to assertCardMatchesPerson(...).

[33mcommit 0e3422e7949ccb1d54ed5cdf85385dfd5a573d0e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 10:42:44 2017 +0800

    AddressBookGuiTest#cleanup(): Change throws declaration to Exception

    AddressBookGuiTest#cleanup() throws a specific exception,
    TimeoutException.

    We can use a more generic exception just like the rest of the test
    methods in the code base.

    Let's change the throws declaration from TimeoutException to Exception.

[33mcommit bd39c0ae91bb72860a00fd8a77b36e8832017377[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 08:55:51 2017 +0800

    AddressBookGuiTest: Make assertMatching(...) and raise(...) protected

    AddressBookGuiTest#assertMatching(ReadOnlyPerson, PersonCardHandle) and
    AddressBookGuiTest#raise(BaseEvent) have their visibility modifier set
    to public.

    Only AddressBookGuiTest and classes that inherit from AddressBookGuiTest
    should use these methods.

    Let's change the visibility modifier of these two methods from public to
    protected.

[33mcommit 3c91ad3a6d63c57d2ac537cc4622e05917c0cb6d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 08:53:20 2017 +0800

    AddressBookGuiTest#setupSpec(): Rename to setupOnce()

    AddressBookGuiTest#setupSpec() is not a standard name for a
    'BeforeClass' test method.

    Let's rename setupSpec() to setupOnce().

[33mcommit 9987ec0aadd7eafeb2c80f1210fcce63384e0baf[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 08:51:41 2017 +0800

    AddressBookGuiTest#raise(BaseEvent): Rename parameter from e to event

    AddressBookGuiTest#raise(BaseEvent) takes in a parameter.

    The parameter's name is in short form. That is not allowed in the coding
    standards.

    Let's rename the parameter from e to event.

[33mcommit 679de5d6f488e76035d20dee69b6478904ba2621[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 11:20:29 2017 +0800

    AddressBookGuiTest: Add guiRobot

    Each GUI tests require the use of guiRobot to emulate user actions.

    It is unnecessary for the creation of guiRobot to be in each individual
    GUI test.

    Let's add GuiRobot to AddressBookGuiTest, so that classes that inherit
    AddressBookGuiTest need not create it on its own.

[33mcommit dc43834458e38fe011dbff0081aa09e99f282d6a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 10:38:47 2017 +0800

    AddressBookGuiTest#setup(): Remove redundant wait for stage to show

    AddressBookGuiTest#setup() waits for the stage to show up after executing
    FxToolkit#showStage().

    The wait is unncessary as FxToolkit#showStage() already blocks the
    current thread until the stage is shown.

    Let's remove the redundant wait.

[33mcommit daddc4289462285c4474311539b79287465273cc[m
Merge: 8d48614 951ca32
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 08:34:26 2017 +0800

    Update DeleteCommand & SelectCommand targetIndex visibility (#527)

    Both target indices of DeleteCommand & SelectCommand are public.

    This breaks the encapsulation of these classes.

    Let's change them to private. As DeleteCommandParserTest and
    SelectCommandParserTest no longer have access to the target indices
    directly, let's use DeleteCommand#equals(...) and
    SelectCommand#equals(...) to check that the target indices are correct.

[33mcommit 8d4861438a18bf73edacfedf469877425296a352[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 29 08:30:49 2017 +0800

    Remove calls to guiRobot#targetWindow(Window) (#526)

    Calling guiRobot#targetWindow(Window) assigns the window to the guiRobot.

    GuiRobot does not access the window. Thus, there is no point assigning
    the window to guiRobot.

    Let?s remove these calls.

[33mcommit 681369a13fd875c41b378e3f5163d888cfba60e6[m
Merge: 2c98147 398be6d
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 29 08:28:56 2017 +0800

    [#459] Clean PersonListPanelHandle (#514)

    PersonListPanelHandle contains an unused method. The logic for some
    methods in PersonListPanelHandle can also be improved.

    Let's tidy up PersonListPanelHandle by:

    * Removing unused or unnecessary methods
    * Throwing more specific exceptions
    * Improving the logic of various methods

[33mcommit 398be6d60b2d1473224f56c793919ac4eaf46fd3[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 13:42:24 2017 +0800

    PersonCardHandle#getPersonCardHandle(ReadOnlyPerson): Fix logic

    PersonCardHandle#getPersonCardHandle(ReadOnlyPerson) uses a stream to
    find the corresponding PersonCard that belongs to the ReadOnlyPerson. It
    then returns the JavaFx node.

    The handle can be returned directly as it has already been created in
    the stream.

    Let's simplify the logic of
    PersonCardHandle#getPersonCardHandle(ReadOnlyPerson) such that the
    handle is returned immediately upon comparison.

[33mcommit 951ca32ca14f47e139a7167c2ac152f1751f6fe9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jun 27 13:01:37 2017 +0800

    Update visibility modifier of DeleteCommand & SelectCommand

    Both target indices of DeleteCommand & SelectCommand are public.

    This breaks the encapsulation of these classes.

    Let's change them to private. As DeleteCommandParserTest and
    SelectCommandParserTest no longer have access to the target indices
    directly, let's use DeleteCommand#equals(...) and
    SelectCommand#equals(...) to check that the target indices are correct.

[33mcommit 16e31fc560bc8e444312af09a5eae209cc813d6a[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jun 27 15:11:42 2017 +0800

    Implement equals(Object) for DeleteCommand & SelectCommand

[33mcommit a19323689966de1c960b4e4977fefcbe2746a0ef[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 13:26:35 2017 +0800

    Simplify PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson)

    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) obtains the
    corresponding ReadOnlyPerson from the list. It also creates a defensive
    copy of the Person.

    PersonListPanelHandle#getPerson(int) already allows us to get the
    corresponding person in the list. Furthermore, creating a defensive
    copy is unnecessary when it is passed into
    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson), which
    will not modify ReadOnlyPerson.

    Let's simplify the logic of
    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson).

[33mcommit 80f0ec0643e7473ae1a13e5f56485ce265dce983[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 27 20:09:37 2017 +0800

    PersonListPanelHandle: Change access modifier to private

    PersonListPanelHandle contains a class variable and class methods that
    are not used outside of PersonListPanelHandle.

    Methods and variables that are not used outside of PersonListPanelHandle
    should not be exposed outside the class.

    Let's change the access modifiers of a class variable and class methods
    to private.

[33mcommit 84f9160426370dcfa5c047f4b8a9d6d712c6fdf0[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 10:27:32 2017 +0800

    PersonListPanelHandle#getPersonCardHandle(...): Add precondition

    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson) returns a null
    if the person is not in the list.

    Callers are expected to not pass in a ReadOnlyPerson if the person is
    not in the list.

    Let's add a precondition check to ensure that the ReadOnlyPerson is on
    the list, and throw PersonNotFoundException if it isn't.

[33mcommit f55e4b9ed18eac87457b258f4ebfecb54e868a5a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 10:16:09 2017 +0800

    PersonListPanelHandle#navigateToPerson(...): Remove return type

    PersonListPanelHandle#navigateToPerson(ReadOnlyPerson) scrolls to the
    person on the list and selects it. It also returns the associated
    PersonCardHandle for that person on the list.

    The method should not be doing two different things. It should only be
    responsible for navigating the list to the person.

    Let's remove PersonListPanelHandle#navigateToPerson(ReadOnlyPerson)'s
    return type. Methods that still require a PersonCardHandle should call
    PersonListPanelHandle#getPersonCardHandle(ReadOnlyPerson).

[33mcommit d2d04cfa09e0002eab4633779842ac678b0fb899[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 27 15:36:06 2017 +0800

    PersonListPanelHandle: Remove unused startPosition parameter

    PersonListPanelHandle#cardsAndPersonsMatchInOrder(...) has a
    startPosition.

    All callers of the method only specifies 0 as the startPosition (i.e.
    use the entire list). This makes the startPosition parameter
    unnecessary.

    Let's remove unused startPosition parameter in
    PersonListPanelHandle#cardsAndPersonsMatchInOrder(ReadOnlyPerson). With
    the parameter startPosition removed,
    PersonListPanelHandle#isListMatching(int, ReadOnlyPerson) is no longer
    necessary. Let's remove that too.

[33mcommit 85e001d85418e283e296e14fc3d5a320a6f2399e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 11:23:31 2017 +0800

    PersonListPanelHandle#navigateToPerson(): Remove pauseForHuman() calls

    PersonListPanelHandle pauses two times using GuiRobot#pauseForHuman():
      1. Before selecting the person
      2. After selecting the person

    The entire navigation should be seen as a single unit of action by a
    human. Therefore, pause 1 is unnecessary.

    Let's remove pause 1.

[33mcommit b75943c924dffc1ce27efc8a3a7664780bd18a94[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 27 19:57:27 2017 +0800

    Remove PersonListPanelHandle#navigateToPerson(String)

    PersonListPanelHandle#navigateToPerson(String) picks a Person that has a
    matching name.

    There may be two Persons of the same name. It is not possible to
    identify which Person should be picked in such situation.

    Let's remove PersonListPanelHandle#navigateToPerson(String).

[33mcommit ae4a128404c1b15f0181afe115e83b6021ee89ef[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 08:28:06 2017 +0800

    PersonListPanelHandle: Remove unused getPersonIndex(int)

    PersonListPanelHandle#getPersonIndex(int) is no longer in use.

    Let's remove it.

[33mcommit d49d89a4f1c337ef05d71c344d913a331fbe767e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 21:44:42 2017 +0800

    PersonListPanelHandle#navigateToPerson(...): Use Person instead of index

    PersonListPanelHandle#navigateToPerson(...) obtains the index of the
    targeted person to scroll to.

    We can use the Person object directly instead of obtaining an index.

    Let's change PersonListPanelHandle#navigateToPerson(...) to use a Person
    instead of an index. Since the Person may not be in the list, let's
    throw a PersonNotFoundException if the person cannot be found in the list.

[33mcommit 028b25c2f414068d9f918ac4ea1d460ea7d7564a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 13:33:49 2017 +0800

    PersonListPanelHandle#navigateToPerson(): Throw PersonNotFoundException

    PersonListPanelHandle#navigateToPerson(String) throws an
    IllegalStateException.

    We should throw a checked exception so that our tests would be able to
    handle the situation whereby the person we are trying to navigate to
    does not exist.

    Let's replace throwing an IllegalStateException to a
    PersonNotFoundException.

[33mcommit 3a2c9adbf25142ddf92e3275fe010bb40046b3bd[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 21:36:20 2017 +0800

    PersonListPanelHandle#isListMatching(...): Retrieve list view once

    PersonListPanelHandle#isListMatching(...) retrieves the list view twice.

    Retrieving the list view multiple times is inefficient. Furthermore, the
    state of the list view might have changed between the two retrievals,
    leading to an inaccurate result.

    Let's change PersonListPanelHandle#isListMatching(...)'s logic to ensure
    that the retrieval is only done at the start of the method.

[33mcommit 359ca02c1caaf1a1cf797f1078dac0dbeccce137[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 21:38:57 2017 +0800

    Remove PersonListPanelHandle#containsInOrder(...)

    PersonListPanelHandle#containsInOrder(int, ReadOnlyPerson...) checks
    that the contents of the list view matches our expected person list.
    This behaviour is similar to isListMatching(...).

    Having two methods with the same functionality is unnecessary.

    Let's remove PersonListPanelHandle#containsInOrder(...).

[33mcommit 980c03648955b220df4d8c18057258cbb11753cc[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 16:25:39 2017 +0800

    PersonListPanelHandle: Change getSelectedPersons()

    getSelectedPersons() returns a list of persons.

    The MainWindow's PersonListPanel only allows a maximum of one person to
    be selected. There is no reason for getSelectedPersons() to return a
    list of persons.

    Let's modify PersonListPanelHandle#getSelectedPersons() to return the
    person selected, or Optional.empty() if no one is selected, and rename
    it to getSelectedPerson() to reflect the new behaviour.

[33mcommit 2c9814756eafc5121e1a13e4ce4d5b8a9b28b7bf[m
Merge: 3ef8744 b1ab21f
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 08:00:16 2017 +0800

    [#327] Add AddCommandParserTest (#494)

[33mcommit 3ef87448dab34c0065e23f6dfa55a138bea79f91[m
Merge: 0e544cd fbdc483
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 07:59:05 2017 +0800

    [#504] Use EventsCollector when testing commands (#507)

    Some command tests check that the correct events are being triggered by
    manually subscribing to the events that they are expecting.

    We already have EventsCollector class in our codebase that catches all
    possible events, and allows us to extract data from the triggered
    events as well.

    Let's replace all manual subscription of events with EventsCollector
    instead.

[33mcommit 0e544cd8273221ef19e29f4724f9c1f8ce5df70c[m
Merge: 8cfab29 98bab2b
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 28 07:57:42 2017 +0800

    [#459] Clean up GuiHandle (#515)

    GuiHandle contains unnecessary parameters in its constructor. It also
    contains methods that are more specialized to individual components.

    Let's remove these constructor parameters, and move the methods to their
    appropriate component handle classes.

[33mcommit fbdc48389e26e64d9089a274e243ef565b3ee7d1[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 11:02:38 2017 +0800

    EventsCollector: Remove get(int)

    EventsCollector#get(int) is unused.

    Let's remove it.

[33mcommit 1bf9b4f4176f71db4d19f30641182c6670b0e42d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 09:37:28 2017 +0800

    EventsCollector: Add isEmpty()

    SelectCommandTest expects that no events are raised.

    Let's create EventsCollector#isEmpty() to check that no events are
    raised.

[33mcommit 64fd5b9fa247f3bff113b474409d0ea934655336[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 19 09:33:17 2017 +0800

    SelectCommandTest: Use EventsCollector to receive events

    SelectCommandTest manually subscribes to JumpToListRequestEvent to test
    that the event is actually being raised with the correct Index.

    EventsCollector allows us to check that the event is raised without
    having to manually subscribe to the event.

    Let's use EventsCollector in our SelectCommandTest instead.

[33mcommit 21b0e337c24db98d1fe8d2580fb411f18e812006[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 19 09:20:50 2017 +0800

    ExitCommandTest: Use EventsCollector to receive events

    ExitCommandTest manually subscribes to ExitAppRequestEvent to test that
    the event is actually being raised.

    EventsCollector allows us to check that the event is raised without
    having to manually subscribe to the event.

    Let's use EventsCollector in our ExitCommandTest instead.

[33mcommit 36edb5221a2ea76f8136941db55cf869635c426f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 19 09:13:15 2017 +0800

    HelpCommandTest: Use EventsCollector to receive events

    HelpCommandTest manually subscribes to ShowHelpRequestEvent to test that
    the event is actually being raised.

    EventsCollector allows us to check that the event is raised without
    having to manually subscribe to the event.

    Let's use EventsCollector in our HelpCommandTest instead.

[33mcommit 0fd010a8095baa15b79f6169466f92d151151de5[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 09:24:57 2017 +0800

    EventsCollector: Add getMostRecent()

    StorageManagerTest uses EventsCollector. It is only interested in
    testing the most recent event that has occurred.

    The test gets the first event from the EventsCollector's List as it
    assumes that is the most recent event. That assumption may not always
    be true.

    Let's add EventsCollector#getMostRecent() that retrieves the most recent
    event, and teach StorageManagerTest to call that instead.

[33mcommit 943d1286f93d140b62e0ecf3f2c837a2ebb7ac4b[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 11:04:23 2017 +0800

    EventsCollector: Add getSize()

    Some test requires checking that no extra events were called.

    Let's add EventsCollector#getSize() to check how many events were called.

[33mcommit 98bab2b3c6a5544e127634a7487bd70b65ef0e17[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 21 08:39:39 2017 +0800

    Inline GuiHandle#getTextFromLabel(String, Node)

    GuiHandle#getTextFromLabel(String, Node) gets the content of a label
    belonging to a root node.

    Not all components have a label. Furthermore, only PersonCardHandle uses
    a label.

    Let's inline GuiHandle#getTextFromLabel(String, Node).

[33mcommit c2319a9a1d377c6d44f4d6b3a90b53fe95228599[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 21 08:35:39 2017 +0800

    Inline GuiHandle#getTextFieldText(String)

    GuiHandle#getTextFieldText(String) gets the content of a text field.

    Not all components have a text field. Furthermore, only CommandBoxHandle
    uses a text field.

    Let's inline GuiHandle#getTextFieldText(String).

[33mcommit 99062b465ebd087a0946d396ad7775a714df998d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 09:46:57 2017 +0800

    Inline GuiHandle#setTextFieldText()

    GuiHandle#setTextFieldText() emulates the user typing text into the
    specified text field.

    Only CommandBoxHandle uses setTextFieldText().

    Let's inline GuiHandle#setTextFieldText().

[33mcommit 8eed4fc38775b57ab97bff49709f832519682b54[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 09:12:25 2017 +0800

    GuiHandle: Move pressEnter() to CommandBoxHandle

    GuiHandle#pressEnter() allows tests to press the Enter key and pause for
    a while.

    Only CommandBoxHandle uses pressEnter().

    Let's move pressEnter() from GuiHandle to CommandBoxHandle.

[33mcommit 39edc0922122b9d714acc6dbcf46d2d9612715e8[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 15:17:17 2017 +0800

    GuiHandle: Remove primaryStage constructor parameter

    The primaryStage variable is not used anywhere.

    Let's remove it.

[33mcommit 357325788727f5f5e81d10ab07ba50f18532067c[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 20 14:51:38 2017 +0800

    GuiHandle: Remove guiRobot from constructor parameters

    It is not necessary to pass in a guiRobot when each handle can create
    one on their own.

    Let's remove guiRobot from the constructor parameters.

[33mcommit 8cfab29d930e3fa60c7411a7eb6992373cff0686[m
Merge: d4dd4c2 315ca9c
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 27 08:18:32 2017 +0800

    [#502] Revamp sleep() for Gui tests (#503)

    The current uses of `guiRobot.sleep()` in our gui tests can be
    categorized into two groups:

      (A) To prevent the tests from executing too fast, as that prevents us
          from visually examining the progression of the test.

      (B) To wait for something to happen on the JavaFX Application thread.

    Both types of uses of `guiRobot.sleep()` are undesirable. Group (A)
    unfairly makes our GUI tests slower in headless mode, as in headless
    mode we can't visually examine GUI test progression anyway. Group (B)
    is wrong and can lead to flaky tests, as sleeping for a set amount of
    time does not guarantee that what we are waiting for actually occurs on
    the JavaFX Application thread.

    Let's
    - Add GuiRobot#pauseForHuman() (for group A) for pauses that are merely
      for human observations. We are able to disable these pauses in
      headless mode.
    - Add guiRobot.waitForEvent() (for group B) with incremental waits, so
      that we are able to wait for events in JavaFX Application thread,
      instead of waiting for a fixed interval and assuming that the events
      happened.

[33mcommit 315ca9c8c15b5854256ec44809aaee2642cf2b14[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 16 16:24:46 2017 +0800

    GuiRobot#waitForEvent(BooleanSupplier, int): Add default timeout value

    GuiRobot#waitForEvent(BooleanSupplier, int) takes in a parameter for the
    timeout value.

    For most events, a reasonable waiting time would be 5000ms.

    Let's add a default timeout value for GuiRobot#waitForEvent().

[33mcommit 46b19c02d2a6e1e7f6e18ff8878b58fbd6850c79[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 14:53:18 2017 +0800

    GuiRobot#pauseForHuman(int): Remove duration parameter

    Some events are easy to examine and require less time for pausing, while
    other events require more human processing time. Therefore, the tests
    require different values of time to sleep.

    However, this makes it difficult to use GuiRobot#pauseForHuman(int) as
    developers need to determine the desirable waiting time.

    Let's remove the duration parameter, and standardise the waiting time
    to be 250ms, which is sufficient for events that require more human
    processing time.

[33mcommit aa9693501043561b79998de82d667f5c0c5f4c5a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 12:10:15 2017 +0800

    ErrorDialogGuiTest: Implement smart wait for showErrorDialogs()

    ErrorDialogGuiTest#showErrorDialogs() posts a 'DataSavingExceptionEvent'.
    This event is caught by the GUI, which launches an Alert dialog box.

    The GUI launches the dialog box, waits for 1000ms, and assumes that the
    dialog box is open after 1000ms. The delay does not guarantee that the
    Alert dialog box is actually opened after 1000ms has passed.

    Let's add guiRobot.waitForEvent() to add incremental wait, and also ensure
    that the Alert dialog box is actually opened before proceeding. It will
    also fail if our wait becomes too long.

[33mcommit b1ab21f8350f16616af46922255e7794f2798d0e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 15 10:33:40 2017 +0800

    Add tests for AddCommandParser

[33mcommit c4e0a604808d195dcec7b7e933e6b0d275eec2e4[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 22 11:15:04 2017 +0800

    AddCommand: Implement equals(Object) method

[33mcommit cc2b06cdcf78ec88b425fadd4470dc4e5a065627[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 3 09:36:08 2017 +0800

    Extract constants from EditCommandParserTest to CommandTestUtil

    Constants in EditCommandParserTest can be used by other command
    tests.

    Let's extract these constants from EditCommandParserTest to
    CommandTestUtil.

[33mcommit a4bc9f8b32900dc0dfd43acf573c586c329e4b59[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 15 10:23:02 2017 +0800

    Rename EditCommandTestUtil to CommandTestUtil

    The constants declared in EditCommandTestUtil can be used by other
    command tests.

    Let's rename EditCommandTestUtil to a more generic name,
    CommandTestUtil.

[33mcommit e5ea5d7121fee2bacd02acf94c37106e944b95aa[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 09:43:00 2017 +0800

    GuiRobot: Add pauseForHuman(int)

    The current uses of `guiRobot.sleep()` in our gui tests can be
    categorized into two groups:

      (A) To prevent the tests from executing too fast, as that prevents us
          from visually examining the progression of the test.

      (B) To wait for something to happen on the JavaFX Application thread.

    Both types of uses of `guiRobot.sleep()` are undesirable. Group (A)
    unfairly makes our GUI tests slower in headless mode, as in headless
    mode we can't visually examine GUI test progression anyway. Group (B)
    is wrong and can lead to flaky tests, as sleeping for a set amount of
    time does not guarantee that what we are waiting for actually occurs on
    the JavaFX Application thread.

    Let's start by cleaning up group (A), by adding GuiRobot#pauseForHuman(int)
    to make the usage of pausing the test execution clearer, and also to
    allow headless mode to disable these unnecessary pauses.

    We then replace all usages of `guiRobot.sleep()` in group (A) with
    `guiRobot.pauseForHuman()`.

    The remaining usages of `guiRobot.sleep()` in the code base fall into
    group (B), which we shall clean up in the next commit.

[33mcommit d4dd4c253b3218faf475d5d3941e5db377e62637[m
Merge: 97653b7 276d47c
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 23 08:25:03 2017 +0800

    Add tests for DeleteCommand (#464)

[33mcommit 276d47c2fcac0111d69e01dc352ca172559b298f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 5 10:13:56 2017 +0800

    Add DeleteCommandTest

[33mcommit 1e8bd97eda888e6ef9038233794780c70c01d0eb[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 5 10:05:04 2017 +0800

    EditCommandTest: Move assertCommandSuccess(...) to CommandTestUtil

    EditCommandTest#assertCommandSuccess(EditCommand, String,
    ReadOnlyAddressBook, List<? extends ReadOnlyPerson>) can be used to test
    commands other than EditCommand.

    Let's extract EditCommandTest#assertCommandSuccess(...) out to
    CommandTestUtil, and make the command parameter more generic so that it
    can be used by any type of commands.

[33mcommit 9e2f9bd84259c9414359cf4f21a8002d7b81a642[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 5 09:50:28 2017 +0800

    EditCommandTest: Move assertCommandFailure(...) to CommandTestUtil

    EditCommandTest#assertCommandFailure(EditCommand, String) can be
    used to test commands other than EditCommand.

    Let's extract EditCommandTest#assertCommandFailure(EditCommand, String)
    out to CommandTestUtil, and make the command parameter more generic so
    that it can be used by any type of commands.

[33mcommit 97653b7fa08a90902a9a5c8b800007d3bbb483bf[m
Merge: 7414fb5 0e39f06
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 13:32:59 2017 +0800

    [#448] ui: Remove bidirectional dependencies in UiParts (#497)

    The components accept a placeholder in their parameter in order for them
    to add themselves into the placeholder. Therefore the placeholder acts
    like a parent to the component.

    The components themselves should not know about their parent placeholder
    as this creates a bi-directional dependency coupling.

    Let's remove the placeholder parameter in all component's constructor, and
    let MainWindow add the component to the placeholder instead.

    The components no longer fills up the entire space of the placeholder as
    it now contains the root node of the component as well. Let's also
    modify the .fxml to allow the component to fill up the entire space.

[33mcommit 7414fb54a2c702efb919616ec1061d9926ade0aa[m
Merge: 48775e4 b7663db
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 13:31:51 2017 +0800

    [#459] Clean up MainGuiHandle (#511)

    MainGuiHandle recreates a new Handle whenever one is requested. It also
    handles AlertDialog box, even though it is only responsible for the
    MainWindow.

    There is no need to recreate the handles. Furthermore, MainGuiHandle
    should be the owner of all the handles to the components in MainWindow,
    but not for any error dialog boxes.

    Let's encapsulate the handles in MainGuiHandle. Let's also remove
    getAlertDialog(String), and make the callers create the handle on their
    own instead.

[33mcommit 0e39f066e4b692996782bccafe1634de127762f3[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 08:52:49 2017 +0800

    ResultDisplay: Change AnchorPane to StackPane

    ResultDisplay is enclosed inside an AnchorPane. We have to configure
    ResultDisplay's anchor attributes to allow it to stretch together with
    the AnchorPane.

    StackPane already provide this behavior by default. Therefore, StackPane
    is more suitable than AnchorPane for our purpose.

    Let's change the use of AnchorPane to StackPane instead.

[33mcommit 32513851709c5e16ba9a5551ab95a5d4f43c588b[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 08:51:53 2017 +0800

    CommandBox: Change AnchorPane to StackPane

    CommandBox is enclosed inside an AnchorPane. We have to configure
    CommandBox's anchor attributes to allow it to stretch together with
    the AnchorPane.

    StackPane already provide this behavior by default. Therefore, StackPane
    is more suitable than AnchorPane for our purpose.

    Let's change the use of AnchorPane to StackPane instead.

[33mcommit 729eec99c286f31677bc0082231f72ea1d8fdde7[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 22 08:41:45 2017 +0800

    BrowserPanel: Change AnchorPane to StackPane

    BrowserPanel is enclosed inside an AnchorPane. We have to configure
    BrowserPanel's anchor attributes to allow it to stretch together with
    the AnchorPane.

    StackPane already provide this behavior by default. Therefore, StackPane
    is more suitable than AnchorPane for our purpose.

    Let's change the use of AnchorPane to StackPane instead.

[33mcommit 540862f623c58f94ce112f611c2a49484d23869f[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jun 20 09:42:57 2017 +0800

    LogicManagerTest: Initialise object variables during declaration

    Object variables `model` and `logic` are initialised in #setUp().

    This is unnecessary as JUnit instantiates the class for each test,
    thus resetting instance variables after each test.

    Let?s initialise these object variables during declaration instead.

[33mcommit 2a932f5be144dde36aad1c1e9100a2b222769034[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jun 19 15:59:04 2017 +0800

    LogicManagerTest: Merge LogicManagerTest#execute_verifyHistory_success()

    A separate test is created to verify the history.

    This is unnecessary as we can verify the history in each test.

    Let?s remove LogicManagerTest#execute_verifyHistory_success() and test
    for the history in each individual test.

[33mcommit 81fc7600593f69143b957f67cb04995d7d71f4ef[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jun 19 15:47:44 2017 +0800

    LogicManagerTest: Add successful test

[33mcommit 99bfbcef557690d7cc942a95f361f05380ad2935[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 10:05:44 2017 +0800

    LogicManagerTest: Add test for CommandException thrown

[33mcommit 265c96ff581fc24f88c6d10a38d3d06ddb41a343[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jun 20 08:42:19 2017 +0800

    LogicManagerTest: Rename test method

    The current test method name does not reflect the equivalence class
    being tested.

    Let?s update the test method name accordingly, and rename the local
    variable inside the test method to reflect the update.

[33mcommit 06a592eca49d0d181355753c7f97c6595537aef4[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Jun 20 08:40:02 2017 +0800

    LogicManagerTest: Place private methods after test methods

[33mcommit 5303863303cd39ab4c5f8cc15e386106c17160d1[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 10:02:48 2017 +0800

    LogicManagerTest: Remove unnecessary test

    LogicManagerTest has 2 tests testing for the same code path (verifying
    that ParseException is thrown).

    This is unnecessary. Let?s remove it.

[33mcommit 82b33c2dbf1367e310794d5c36391ea91e2cc625[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 09:56:06 2017 +0800

    LogicManagerTest: Remove generic type name

    Specifying the generic type name is unnecessary.

    Let?s replace it with a wildcard instead.

[33mcommit e05d7e14797fd4fd004c742980134aee08a5d901[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 09:48:10 2017 +0800

    LogicManagerTest: Remove Storage component

    LogicManagerTest is an integration test for Logic, Model and Storage.

    Since the system tests cover Storage, it is unnecessary for
    LogicManagerTest to include Storage.

    Let?s remove the Storage component from LogicManagerTest, so that
    LogicManagerTest is an integration test for Logic and Model only.

[33mcommit 920e3f5b48fe93b0767d63e08c340bc2c6b5b651[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 09:34:01 2017 +0800

    LogicManagerTest: Remove unused methods

    After removing repeated tests from LogicManagerTest, some methods are
    now unused.

    Let's remove them.

[33mcommit ac351cfa0111c4edb737875d1ad69254fe54f6f8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 09:21:34 2017 +0800

    LogicManagerTest: Remove repeated tests

    LogicManagerTest tests all commands at integration test level.

    These tests have already been covered in *CommandIntegrationTest.

    Let?s remove them.

[33mcommit d511d69e7f4ee1a07d83c8a6d0d0d1f53eeb391d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 20 15:23:10 2017 +0800

    MainWindow: Remove getXPlaceholder() methods

    The MainWindow contains getter methods for each placeholder.

    They are unused.

    Let's remove them.

[33mcommit 1d780e1567479dce3bfdbd15891f44b70f5ab7fb[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 15:03:17 2017 +0800

    BrowserPanel: Remove placeholder from constructor

    The components accept a placeholder in their constructor in order for
    them to add themselves into the placeholder. Therefore the placeholder
    acts like a parent to the component.

    The components themselves should not know about their parent placeholder
    as this creates a bi-directional dependency coupling.

    Let's remove the placeholder parameter in BrowserPanel's constructor, and
    let MainWindow add the component to the placeholder instead.

    The component no longer fills up the entire space of the placeholder as
    it now contains the root node of the component as well. Let's also
    modify the .fxml to allow the component to fill up the entire space.

[33mcommit 9b45ac30273c71d112a1b34bf2b55732868bf561[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 14:59:21 2017 +0800

    PersonListPanel: Remove placeholder from constructor

    The components accept a placeholder in their constructor in order for
    them to add themselves into the placeholder. Therefore the placeholder
    acts like a parent to the component.

    The components themselves should not know about their parent placeholder
    as this creates a bi-directional dependency coupling.

    Let's remove the placeholder parameter in PersonListPanel's constructor, and
    let MainWindow add the component to the placeholder instead.

[33mcommit 7608a9c595d4779a9d3a56f70d8f6d6500d6b919[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 21 13:41:14 2017 +0800

    PersonListPanel: Fix SplitPane.resizableWithParent not working

    PersonListPanel should not resize when the MainWindow is being resized.
    This is accomplished by setting the SplitPane.resizableWithParent
    attribute to false.

    The attribute is set inside the PersonListPanel's placeholder, but the
    placeholder is enclosed inside a VBox element. Therefore, when the user
    resizes the window, the SplitPane is still able to resize the VBox,
    which in turn resizes the placeholder. This behavior overrides the
    attribute.

    Let's set the SplitPane.resizableWithParent attribute in the VBox
    element, so that the VBox element cannot be resized by the window, which
    in turn prevents the placeholder from resizing as well.

[33mcommit d1bd1cd1a49ab1fe3159cf955aa37de686db3cf5[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 21 09:25:53 2017 +0800

    PersonListPanel: Set SplitPane.resizableWithParent in .fxml

    PersonListPanel's placeholder should not resize when the SplitPane is
    resized.

    The attribute can be set in .fxml, rather than setting it
    programmatically.

    Let's set PersonListPanel placeholder's SplitPane.resizableWithParent
    attribute in .fxml instead of setting it programmatically.

[33mcommit baf00d32843e028a9875e93f413f818e8e5346f8[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 14:55:39 2017 +0800

    ResultDisplay: Remove placeholder from constructor

    The components accept a placeholder in their constructor in order for
    them to add themselves into the placeholder. Therefore the placeholder
    acts like a parent to the component.

    The components themselves should not know about their parent placeholder
    as this creates a bi-directional dependency coupling.

    Let's remove the placeholder parameter in ResultDisplay's constructor, and
    let MainWindow add the component to the placeholder instead.

    The component no longer fills up the entire space of the placeholder as
    it now contains the root node of the component as well. Let's also
    modify the .fxml to allow the component to fill up the entire space.

[33mcommit dac78051e25237a925636246c6f873e2e9bebd65[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 14:53:50 2017 +0800

    StatusBarFooter: Remove placeholder from constructor

    The components accept a placeholder in their constructor in order for
    them to add themselves into the placeholder. Therefore the placeholder
    acts like a parent to the component.

    The components themselves should not know about their parent placeholder
    as this creates a bi-directional dependency coupling.

    Let's remove the placeholder parameter in StatusBarFooter's constructor, and
    let MainWindow add the component to the placeholder instead.

[33mcommit 4acbb6cd76c5a683c70ff519eeecea775d2ab2df[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 14:32:49 2017 +0800

    CommandBox: Remove placeholder from constructor

    The components accept a placeholder in their constructor in order for
    them to add themselves into the placeholder. Therefore the placeholder
    acts like a parent to the component.

    The components themselves should not know about their parent placeholder
    as this creates a bi-directional dependency coupling.

    Let's remove the placeholder parameter in CommandBox's constructor, and
    let MainWindow add the component to the placeholder instead.

    The component no longer fills up the entire space of the placeholder as
    it now contains the root node of the component as well. Let's also
    modify the .fxml to allow the component to fill up the entire space.

[33mcommit f7a5766af3d09475af6f9b276c8c26dc624b502d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 21 09:17:13 2017 +0800

    CommandBox: Remove call to SplitPane#setResizableWithParent()

    The placeholder for CommandBox is stored inside StackPane, not a
    SplitPane.

    The call to SplitPane#setResizableWithParent() is erroneous and has no
    effect.

    Let's remove the call to SplitPane#setResizableWithParent() in
    addToPlaceholder(Pane).

[33mcommit 48775e45f9e37d5c00b99f7241d2856b3e2eac9e[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 21 08:06:48 2017 +0800

    [#480] Change EditPersonDescriptor?s parameters to be non-Optional (#482)

    EditPersonDescriptor?s parameters are of type Optional.

    Optional should not be used as parameters. The intended use case is
    for return types to indicate that there is no result.

    Let?s update EditPersonDescriptor?s parameters to be non-Optional.

[33mcommit b7663dbf33e89d4adccdc5fcf2e7303c7f562867[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 20 13:51:56 2017 +0800

    Rename MainGuiHandle to MainWindowHandle

    MainGuiHandle contains a list of handles to components found inside
    MainWindow.

    It would be more appropriate to rename the class MainWindowHandle as it
    is tied to MainWindow rather than MainGui (which does not exist).

    Let's rename it from MainGuiHandle to MainWindowHandle.

[33mcommit 94bfea960fffee520d7b2301b4951e3bcb4720a7[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 10:13:34 2017 +0800

    MainGuiHandle: Create handles only once

    The getter methods of MainGuiHandle return a new Handle when one is
    requested.

    This is inefficient as there is no need to recreate the handles.
    Furthermore, MainGuiHandle should be the owner of all the handles to the
    components.

    Let's create the handles once in the constructor, and return these
    existing handles in the getter methods.

[33mcommit 470f285abd57ac5a258f3adb51d9276caed5c5cf[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 13 10:15:38 2017 +0800

    MainGuiHandle: Remove getAlertDialog(String)

    An alert dialog box is a separate window from the main window.
    As MainGuiHandle is the handle for the main window, it should not be
    the responsibility of MainGuiHandle to create such a handle for the
    callers.

    Let's remove getAlertDialog(String), and make the callers create the
    handle on their own instead.

[33mcommit 425582ae92d17a02ed45464fb87e52d3e0034b0c[m
Merge: 5cc85fc bafef4e
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 20 10:42:02 2017 +0800

    Remove unused test methods (#508)

    GuiRobot#push(KeyCodeCombination) and TestUtil#scrub(KeyCodeCombination)
    are not used by any classes.

    Let's remove them.

[33mcommit bafef4e86336b809168ae6d9123746e8b59bb8ba[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 15 08:21:41 2017 +0800

    TestUtil: Remove scrub(KeyCodeCombination)

    TestUtil#scrub(KeyCodeCombination) is no longer used in the codebase.

    Let's remove it.

[33mcommit e98aa4c2770c1b194f8d29d62d851d29c1f6554f[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 09:18:59 2017 +0800

    GuiRobot: Remove push(KeyCodeCombination)

    GuiRobot#push(KeyCodeCombination) is not used in the codebase.

    Let's remove it.

[33mcommit 5cc85fcf11b40d1660d0b6be20a3ef90bc71c1c1[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 15 07:50:29 2017 +0800

    [#437] Remove unused parameter in LogicManager constructor (#493)

[33mcommit 94149b9b67146de586e7a43a5b8878ee3dd2f5b4[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 15 07:49:49 2017 +0800

    [#327] Add AddCommandIntegrationTest (#488)

[33mcommit 6ec9b6811339fd6a8d8a6e951b283d5e28fe6f6b[m
Merge: 4fda095 ae3f81e
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 09:15:56 2017 +0800

    [#417] Make help documentation accessible offline (#420)

    The help window accesses the online version of the documentation.

    Users are unable to access it if they are offline. Furthermore, the
    application version for the online documentation may not match the
    application version that the user is using.

    Let's change the help window to use an offline version instead, and
    deploy the offline version to the 'src/main/resources/' folder such
    that shadowJar will automatically bundle the documentation with the app.

[33mcommit 4fda095582f3ce6f53774550edbc0561c9172b2c[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 14 09:15:05 2017 +0800

    [#327] Add tests for SelectCommandParser (#485)

[33mcommit 54faa4d46764fdf5a89fbe229686e7888cffe897[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed Jun 14 09:14:39 2017 +0800

    [#327] Add SelectCommandTest (#487)

[33mcommit 1bea354f06cfe721d17bdf267a560a7131aa3cae[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 12 08:03:38 2017 +0800

    [#327] Add tests for ListCommand (#473)

[33mcommit ae3f81e3ea549be88aac672f9498ee599015c45a[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 16 16:55:16 2017 +0800

    HelpWindow: Use offline version of user guide

    The help window accesses the user guide at:
    https://se-edu.github.io/addressbook-level4/docs/UserGuide.

    The user will not be able to access it if he has no internet connection.
    Furthermore, the user guide may not match the version that he is using.

    Let's change the user guide used by HelpWindow to an offline version.

    The offline user guide and its associated files are stored at
    'src/main/resources/docs', so that gradle's shadowJar deployment task
    will automatically copy them to the output .jar file. It also allows
    HelpWindow to access them using a simple relative filepath.

[33mcommit 591c4c521c592d0008f67be98adf9e26ee1fb2f9[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 23 15:07:52 2017 +0800

    Create gradle task for generating offline user guide

    The offline user guide and its associated files have to be manually
    updated by copying the corresponding html files from the asciidoctor's
    output directory.

    Such a process is tedious and prone to errors. Furthermore, we may
    forget to update to the new version when deploying a new .jar file.

    Let's create a new gradle task 'deployOfflineDocs', to automate the
    copying process, in order to allow 'processResources' task to update
    the offline user guide and its associated files first before running
    or deploying the application.

[33mcommit a76a2a505499c1c7c68a22083026f286f4f85592[m
Merge: 27f8e00 8c3eb78
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 9 09:56:27 2017 +0800

    [#467] Add Prefix "n/" for specifying names (#474)

    There is no Prefix for specifying names. The name is included in the
    preamble of the argument for the add and edit commands.

    Putting the name in the preamble can make the code more complex. For
    example, in EditCommandParser, the preamble includes both the index
    and the name, so EditCommandParser has to split it.

    Let's add a new Prefix "n/" for specifying names so that the name will
    not be parsed as part of the preamble.

[33mcommit 27f8e004e290b89da155d2a30188f6805fde21d4[m
Merge: 9db18c3 7290079
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 9 09:54:45 2017 +0800

    [#254] Add more tests for EditCommand (#393)

[33mcommit 7290079e5e3ef46ceff790253f8d00a73d5f9bff[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu May 18 14:16:05 2017 +0800

    Add missing integration and hybrid tests

[33mcommit 79bb60d09f1c2872be0ed291e109162986ca29d8[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jun 5 09:45:10 2017 +0800

    Move EditCommandTest#createEditPersonDescriptor(ReadOnlyPerson)

    This method is a helper method that creates an EditPersonDescriptor
    object. EditPersonDescriptorBuilder also contains helper methods to
    create EditPersonDescriptor objects.

    This causes inconsistency in the codebase as EditPersonDescriptorBuilder
    ought to contain all necessary helper methods required to construct
    an EditPersonDescriptor object.

    Let?s move this method over to EditPersonDescriptorBuilder.

[33mcommit 8d2ccd94e022622f950a5d5bca83b07b4f2ec3cd[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Jun 5 09:31:44 2017 +0800

    Update EditCommandTest to check equality using Model directly

    The tests check for equality of the individual components of Model
    (AddressBook and FilteredList).

    This can be simplified by checking for equality of the entire Model
    directly using ModelManager#equals().

    Let?s update EditCommandTest accordingly.

[33mcommit c7710969266fa3887aff311d4bc05f93b5701f30[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 3 12:12:24 2017 +0800

    PersonBuilder constructor: Change Person to ReadOnlyPerson

    PersonBuilder's constructor takes in Person, which is more specialized
    than ReadOnlyPerson.

    As we can also copy the details of a person with ReadOnlyPerson, the
    constructor is unnecessarily restrictive.

    Let?s change it to take in a ReadOnlyPerson instead.

[33mcommit 9db18c3ec4b2df042e036616e8bce2d2fb3dd7d5[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 9 08:19:48 2017 +0800

    [#327] Add tests for DeleteCommandParser (#472)

[33mcommit 5719ad6697102ce3513c1df2160f38b62aad4630[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 9 08:01:55 2017 +0800

    [#476] Extract exceptions in UniquePersonList (#479)

    Model API refers to UniquePersonList.DuplicatePersonException and
    UniquePersonList.PersonNotFoundException.

    UniquePersonList is a class inside the model component which need not
    be exposed to classes outside the Model component.

    Let's extract these two exception as standalone classes so that the
    Model API no longer exposes the UniquePersonList class.

[33mcommit 8c3eb78925eff1fb77e38cd988b9b1e1a14aac57[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue Jun 6 10:44:56 2017 +0800

    docs: Add new Name prefix

[33mcommit 3c729eccff474ae0f36636207807a26df52eb3f2[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue Jun 6 10:36:22 2017 +0800

    Remove ParserUtil#split(String, int)

    ParserUtil#split(String, int) is unused.

    Let's remove ParserUtil#split(String, int) and its tests.

[33mcommit 17aceb2eb3fb492aa8541c6224d530a2836b3777[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue Jun 6 10:27:33 2017 +0800

    Add Prefix "n/" for specifying names

    There is no Prefix for specifying names. The name is included in the
    preamble of the argument for the add and edit commands.

    Putting the name in the preamble can make the code more complex. For
    example, in EditCommandParser, the preamble includes both the index
    and the name, so EditCommandParser has to split it.

    Let's add a new Prefix "n/" for specifying names so that the name will
    not be parsed as part of the preamble.

[33mcommit 8e4f02b5ad8da2c440f262c2787f24f824978e4c[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 8 10:19:22 2017 +0800

    [#327] Add tests for ClearCommand (#475)

[33mcommit 2dacdc4e3029a3bc345dc15739e6cb9939fe5659[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 8 10:18:20 2017 +0800

    [#327] Add tests for HelpCommand (#477)

[33mcommit 3cee7812a525b60e0a8aef516c77dac11d941124[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu Jun 8 10:11:50 2017 +0800

    [#327] Add tests for ExitCommand (#478)

[33mcommit a300eb7b7798dfd52a5b056874219042c7123ec7[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 7 12:49:51 2017 +0800

    [#468] Model#updatePerson(...): Change parameter from Index to ReadOnlyPerson (#471)

    Model exposes its internal representation by taking in an `int index`
    to update the person at the index.

    Model is a facade and should not expose its internal representation.

    Let?s update Model#updatePerson(int, ReadOnlyPerson) to
    Model#updatePerson(ReadOnlyPerson, ReadOnlyPerson).

[33mcommit 857090e443120e18c45deb59c15089c64cce11d5[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed Jun 7 12:48:50 2017 +0800

    Remove IndexUtil#oneToZeroIndex(int) (#463)

    The creation of Index class in #447 makes IndexUtil#oneToZeroIndex(int)
    obsolete.

    Let?s standardise the codebase to use Index instead.

[33mcommit 3de3b34bcf05aa4a9a656b238be22d7de6d78279[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Jun 6 11:24:41 2017 +0800

    [#469] Fix HelpWindow online user guide URL (#470)

    We migrated the documentation rendering system from Markdown to
    Asciidoctor. The URL for the online user guide in the new Asciidoctor
    website was changed.

    HelpWindow now points to the wrong URL.

    Let's fix the URL to point to the correct online user guide URL.

[33mcommit dfe3b25eb274119f2d0605fa266877597a3341c6[m
Merge: 5ccd6d1 ae54819
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jun 5 08:26:25 2017 +0800

    [#439] Allow user to see the command history (#440)

    AddressBook does not keep track of entered commands.

    This makes it difficult for the user to trace commands entered
    previously. In addition, users have to type out the whole command again
    should they make a small typo in their commands previously.

    Let?s implement the History functionality to allow the user to access
    previously entered commands in the GUI.

[33mcommit ae5481905f5c735dd9f927474b75ff1bca7739c5[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 2 09:53:54 2017 +0800

    DeveloperGuide: Include CommandHistory

[33mcommit 554e26f9a97b3323276e8ec30a628f502b04ec11[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 24 14:58:25 2017 +0800

    UserGuide: Add History command

[33mcommit 567545ee8e951fc67db600f37f7820cb6c5b00e2[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 24 10:41:03 2017 +0800

    Teach Parser to parse HistoryCommand

    Addressbook does not keep track of entered commands.

    This makes it difficult for the user to trace commands entered
    previously. In addition, users have to type out the whole command again
    should they make a small typo in their commands entered into the
    system.

    Let?s teach Parser to parse HistoryCommand to allow the user to see
    what he has entered previously.

[33mcommit c184e7351763bbd049b55d9a5b58c635d3f976c7[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 24 10:40:54 2017 +0800

    Create HistoryCommand

    Addressbook does not keep track of entered commands.

    This makes it difficult for the user to trace commands entered
    previously. In addition, users have to type out the whole command again
    should they make a small typo in their commands entered into the
    system.

    As a step towards implementing history functionality, let?s create
    the class HistoryCommand.

[33mcommit 6ddeccc82b19d3c61ab68b6dc8249ed5aa4d86ac[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu May 4 09:02:56 2017 +0800

    Logic: Create CommandHistory

    Addressbook does not keep track of entered commands.

    This makes it difficult for the user to trace commands entered
    previously. In addition, users have to type out the whole command again
    should they make a small typo in their commands entered into the
    system.

    As a step towards implementing history functionality, let?s create
    the class CommandHistory.

[33mcommit 5ccd6d185c69c6af44f01b45eab992d90a4358f3[m
Merge: d8b24e8 55838d7
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 10:09:02 2017 +0800

    [#401] Create unit tests for ParserUtil#splitPreamble() (#424)

    ParserUtil#split() has no unit test.

    It exhibits undesirable behaviours such as not properly splitting the
    string when there are leading and trailing white spaces. For example,
    the string " abc def" will be split into: an empty string and "abc def",
    instead of two strings "abc" and "def". It also allows the method to be
    called when there are fewer than 2 parts.

    Let's fix those issues and create unit tests for the method.

[33mcommit 55838d7de4156586b478ef44ce605c193b0ec793[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Thu May 25 16:29:24 2017 +0800

    ParserUtil#split(): Add precondition for numOfParts < 2

    ParserUtil#split() does not make sense if the number of parts is less
    than 2. There is no precondition check for this method.

    Let's add a precondition check that throws an IllegalArgumentException
    if there is an insufficient number of parts.

[33mcommit b1ef8f3054c2675a6b985e28af501e5066b1e6ad[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Wed May 31 10:25:41 2017 +0800

    ParserUtil#split(String, int): Trim whitespace

    If there are leading whitespace characters in the string, the first
    field will be an empty string after splitting.

    This may cause unexpected behaviour when splitting the string.
    For example, the string " abc def" will be split into: an empty string
    and "abc def", instead of two strings "abc" and "def".

    Let's trim the whitespace in the string before splitting it so
    that this behaviour can be avoided.

[33mcommit 84a9893b98ee57a7837f5648f7af1ac8060cd174[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Thu May 25 15:37:01 2017 +0800

    ParserUtil: Rename splitPreamble() to split()

    The method name is misleading as it is not limited to just preambles.

    Let's rename it to ParserUtil#split().

[33mcommit 6ca3d19bc7bd901f41b3d63d53552f3641ddb107[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 23 11:40:44 2017 +0800

    Add unit tests for ParserUtil#splitPreamble()

[33mcommit d8b24e8a0c61af4746f7dce842eb2771c8583402[m
Merge: 0352e6b 24622e2
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 08:41:20 2017 +0800

    [#438] Create a new Index class (#447)

    The usages of zero-based indices and one-based indices are mixed
    throughout the codebase. Both uses int, and are only differentiated by
    different suffixes for the variable names (e.g int zeroBasedIndex,
    int oneBasedIndex).

    The index base can be easily confused and is prone to error. The
    conversion also takes place at different areas of the codebase and is
    not consistent.

    Let's create an Index class that understands how to convert to a
    both zero-based and one-based index, and update the codebase to use
    Index instead of int when handling user inputs.

    Index from the point when a new user input is being parsed, so that if
    the current component wants to communicate with another component, it
    can send an Index to avoid having to know what base the other component
    is using for its index. However, after receiving the Index, that
    component can convert it back to an int if the index will not be passed
    to a different component again.

[33mcommit 24622e28586a5d932a78520e0645588e5b37eeea[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu May 25 14:29:32 2017 +0800

    Update codebase to use Index instead of int

    The usages of zero-based indices and one-based indices are mixed
    throughout the codebase. Both use int, and are only differentiated by
    different prefixes for the variable names (e.g zeroBasedIndex,
    oneBasedIndex).

    The index base can cause confusion and is prone to error. The
    conversion also takes place at different areas of the codebase and is
    inconsistent.

    Let's update the codebase to use Index from the point when a new user
    input is being parsed. Index will be passed around when communicating
    with other components. However, each component within itself should
    convert it back to int using Index#getZeroBased() or Index#getOneBased()
    depending on the standard base of the index used within the component.

[33mcommit 413275f9f022ee1c350c9fff276df87d84d985a8[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed May 24 11:32:38 2017 +0800

    Create Index class

    The usages of zero-based indices and one-based indices are mixed
    throughout the codebase. Both use int, and are only differentiated by
    different prefixes for the variable names (e.g zeroBasedIndex,
    oneBasedIndex).

    The index base can cause confusion and is prone to error. The
    conversion also takes place at different areas of the codebase and is
    inconsistent.

    Let's create an Index class, allowing methods to specify their expected
    base for the input index without explicitly converting it.

[33mcommit 0352e6b6e3f51910edbff7a786f6ae24f453d38f[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri Jun 2 08:13:34 2017 +0800

    [#436] StringUtil#isUnsignedInteger(String): Fix unhandled NFE (#460)

    StringUtil#isUnsignedInteger(String) attempts to convert any given
    number to an integer (as a step in checking if it is an unsigned integer).

    When the input is a number higher than Integer.MAX_VALUE,
    the method fails with an exception instead of returning false.

    Let?s teach StringUtil#isUnsignedInteger(String) to return false if
    the input number is higher than Integer.MAX_VALUE.

[33mcommit f6fe1a019300e879cb62af993a0c12d61cb28f87[m
Merge: 2f5b10f 46e57b8
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri Jun 2 08:12:47 2017 +0800

    Tidy EditCommand related classes (#445)

[33mcommit 46e57b8f069ac90945b4fb5e94ad88c5dd1e1f30[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri May 26 16:55:19 2017 +0800

    EditCommandTest: Replace `Command command` w/ `EditCommand editCommand`

    EditCommandTest only contain tests for EditCommand. There is no need
    for these helper methods to take in Command which is more general.

    Let?s do the replacement.

[33mcommit 6685551ab60859ab8d824bceae904a44791d7442[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri May 26 16:54:25 2017 +0800

    EditCommandTest: Remove unnecessary line breaks in header comments

    These line breaks are unnecessary as they are located on the last
    line of code.

    Let?s remove them.

[33mcommit 8087b5dc3806533c4258a7622d16018d30ac4f65[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri May 26 16:53:57 2017 +0800

    EditCommandTest: Update PersonBuilder usage with more compact version

    These lines of code were written before PersonBuilder had default values
    in the default constructor. It is now unnecessary to call PersonBuilder#with*
    methods as default values will be assigned when calling the default
    constructor.

    Let?s make this code more compact.

[33mcommit 701cb3b9a8fb6b5a7cc5a0c4850b4b27399999d9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon May 22 08:47:38 2017 +0800

    EditCommandTest: Construct EditCommand directly

    EditCommandTest constructs its EditCommands for testing by first
    constructing an edit command string via PersonUtil#getEditCommand()
    and then parsing that via Parser#parseCommand() to obtain an EditCommand.

    This causes unnecessary coupling with Parser in EditCommandTest as
    constructing EditCommand does not require Parser.

    Let?s improve EditCommandTest by constructing EditCommand using its
    constructor instead.

[33mcommit f3eb596fe316f5508c63cede160be2b74931f73c[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu May 4 10:15:47 2017 +0800

    EditCommandTest: Merge with EditCommandIntegrationTest

    As we have decided not to write pure unit tests for EditCommand, there
    is no need to specifically make the distinction between EditCommandTest
    and EditCommandIntegrationTest.

    Let?s merge them into EditCommandTest.

[33mcommit 2f5b10f106c34d815c23f7d029920f166ffd4c51[m
Merge: 3e929d6 288a958
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 1 19:33:15 2017 +0800

    [#239] Reduce unnecessary asserts (#414)

    Parameter validation is done by using asserts, and throws AssertionError
    when validation fails.

    Asserts may not always be enabled. Furthermore, specific exceptions
    such as NullPointerException should be thrown to make the error more
    explicit.

    Let's
        - Replace the asserts for public APIs with checkNotNull() and
          checkArgument(), which throws an appropriate exception when
          validation fails.
        - Enhance CollectionUtil#isAnyNull(?) to do the same operation as
          Objects#requireNonNull(T), and also able to take in multiple
          parameters.

[33mcommit 3e929d61e0909940d635fb8e955142f440215346[m
Merge: b0c1794 96cb99e
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 1 17:13:41 2017 +0800

    [#271] Migrate documentation from markdown to asciidoc (#452)

[33mcommit b0c1794e834c317a280bf369502181d365c4a6d2[m
Merge: cfc8ecc 8d4cd68
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jun 1 17:12:21 2017 +0800

    [#456] Update tests to compare at Model level (#458)

    ```
    Tests check for equality of the individual components of Model
    (AddressBook and FilteredList). The following code snippet shows an
    example:

    assertEquals(expectedAddressBook, model.getAddressBook());
    assertEquals(expectedFilteredList, model.getFilteredPersonList());

    This can be simplified by checking for equality of the entire Model
    directly using ModelManager#equals().

    Let's implement Model#equals() and update the tests to check for
    equality of Model using assertEquals(expectedModel, model).
    ```

[33mcommit 8d4cd683088b0983fc4d157bce8b539a4deff9ac[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 31 09:59:21 2017 +0800

    Update tests to use assertEquals(Model, Model)

    The tests check for equality of the individual components of Model
    (AddressBook and FilteredList).

    This can be simplified by checking for equality of the entire Model
    directly using ModelManager#equals().

    Let?s update the tests accordingly.

[33mcommit ec9802858a993112faf0810e9e242a658d3f5d4b[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed May 31 09:57:20 2017 +0800

    Implement ModelManager#equals()

[33mcommit 288a958a8d077613b9eed81e5f20219cc4d97449[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri May 19 12:30:45 2017 +0800

    Update CollectionUtil#isAnyNull(Object...) to throw NPE

    Java?s native Objects#requireNonNull(T) can only take in an Object.
    Calling the native method requires multiple calls in cases where certain
    methods require multiple parameters to be non-null.

    Let?s update CollectionUtil#isAnyNull(?) to do the same operation as
    Objects#requireNonNull(T), and also able to take in multiple parameters.

[33mcommit 96cb99eb0f68adc8e50d1060a2e5b72a3a7d0d37[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 30 15:39:33 2017 +0800

    Remove numbered: true in build.gradle

    When rendered to HTML with asciidoctor, the numbered attribute adds
    numbers to the headers by default.

    This does not suit the look of documents like AboutUs.adoc.

    Let's remove this attribute from build.gradle. Instead, documents that
    require header numbers should include this attribute in their
    document header (which is already included in suitable documents such
    as UserGuide.adoc).

[33mcommit a766c5822f718ea8ea93fb12a19c22254aec2998[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 30 13:21:37 2017 +0800

    Use absolute path for links to files in documentation

    DeveloperGuide.adoc uses relative path to link to the source code when
    describing the components of the application (such as Model.java).

    The relative path might no longer contain the source code. For example,
    in the gh-pages branch, the source code is not available through
    relative paths, as it only contains the documentation files.

    Let's change all of such links to use absolute path.

[33mcommit 64b3abe4f3c180a37456b0310f69df376aa86794[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 30 10:08:36 2017 +0800

    Migrate documentation from markdown to asciidoc

[33mcommit 3520462d11563c02dbd6af9d88de0eb02385c2fa[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 30 10:07:45 2017 +0800

    Modify DeveloperGuide.adoc to use appendix styles and list continuation

[33mcommit 16e7ada8773c884ac90320a1b0ac2266648f67ab[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 30 16:10:46 2017 +0800

    Add idseparator: '-' attribute to build.gradle

    Internal cross references with hyphens do not work in HTML. E.g.
    link:#common-classes in DeveloperGuide.adoc.

    Let's add this attribute so that the links will work in HTML.

[33mcommit a37629cf4c31f6783ffefbb4cd85bbcf3bc0f016[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon May 15 13:51:14 2017 +0800

    Replace asserts with proper exceptions for parameter validation

    Parameter validation is done by using asserts, and throws AssertionError
    when validation fails.

    Asserts may not always be enabled. Furthermore, specific exceptions
    such as NullPointerException should be thrown to make the error more
    explicit.

    Let's replace the asserts with requireNonNull() and checkArgument(),
    which throws an appropriate exception when validation fails.

[33mcommit 44072296483d8f335468be1c9590723cc7bc8088[m
Author: limmlingg <limmlingg@gmail.com>
Date:   Tue May 30 10:04:36 2017 +0800

    Modify DeveloperGuide.adoc to use smart links

    When linking to other asciidoctor documents, we use the extension .adoc.

    The extensions remain unchanged even when exporting to HTML.

    Let's fix this by using smart links, such that asciidoctor will change
    to the correct extension .html when exporting to HTML.

[33mcommit cfc8ecc72a73a989ecc58427e6ddd1c564361408[m
Merge: 015b57d 3b626bb
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon May 29 08:53:21 2017 +0800

    [#305] Command parsers: use exceptions for error handling (#333)

    All CommandParser#parse(String) return a generic Command type, instead
    of the specific command that they are tasked to parse (for example,
    AddCommand for AddCommandParser).

    This is because the methods might also return an IncorrectCommand if it
    encounters a parse error. This causes an unnecessary loss of specificity
    in the return value type if the parsing is successful (e.g. receiving a
    Command object instead of an AddCommand object), and in the error info
    if the parsing failed (e.g. receiving an IncorrectCommand instead of a
    specific Exception object containing the exact stack trace).

    Let's change all CommandParser#parse(String) methods to return their
    specific command type, and throw a ParseErrorException instead when
    encountering an error, to allow the caller to deal with it.

[33mcommit 3b626bba65bb34231fe2e11ab5504073efddde13[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 23 09:38:26 2017 +0800

    Remove IncorrectCommand

    Parser throws a ParseException instead of IncorrectCommand when
    encountering an unrecognized command.

    IncorrectCommand is no longer in use anywhere.

    Let's remove IncorrectCommand.

[33mcommit 64eab5d850926fba45d8f3a759adbd9410119f3e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Mar 11 10:22:29 2017 +0800

    Change command parsers' parse(String) return type to be more specific

    All command parsers' parse(String) methods return the base Command
    type, instead of the specific command that they are tasked to parse
    (for example, AddCommand for AddCommandParser).

    Let's change all command parsers' parse(String)'s return type from the
    generic Command type to their specific command type that they are
    tasked to parse.

[33mcommit 621ede40779fe60058157430eef0db3e54bfa1aa[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Mar 11 10:15:25 2017 +0800

    Modify all command parsers' parse(String) to throw ParseException

    All command parsers return an IncorrectCommand object when they
    encounter a parse error.

    The parse error can be made more visible if an exception was thrown
    instead. Otherwise, the caller is unable to handle any parsing errors
    such as IllegalValueException. Context information, such as the
    stacktrace, is also lost when wrapping the exception instead of
    returning it directly.

    Let's change all command parsers' parse(String) methods such that they
    throw ParseException instead of returning an IncorrectCommand object.

[33mcommit 015b57d6ae29042e4281de6a644a0a2f950f418a[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Fri May 26 15:10:08 2017 +0800

    [#401] Create unit tests for ParserUtil#parseIndex() (#423)

[33mcommit cebed7329394a82a16c76add783ef9a677076a88[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri May 26 15:07:05 2017 +0800

    [#433] GuiHandle#setTextField(String, String) should call Gui methods on JavaFx threads (#434)

    On some computers, GuiHandle#setTextField() throws an
    IllegalStateException, indicating that the methods called in
    GuiHandle#setTextField() should have been executed on the JavaFx Gui
    thread.

    Let's fix GuiHandle#setTextField() to call Gui modification methods
    on the JavaFx Gui thread.

[33mcommit 46e86ee601fb7d38a55e58245a0033ac796ae408[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Fri May 26 11:55:13 2017 +0800

    Migrate UserGuide.md from markdown to asciidoc (#435)

[33mcommit 6af393367c998910784881146ffa049725bc31bd[m
Merge: d0272c5 9e158dd
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Wed May 24 08:52:56 2017 +0800

    [#311] AddressBook#addPerson() does not copy the Person (#313)

    When accepting a new Person, both UniquePersonList and AddressBook
    insert the original object, rather than a copy of the object.

    Outside classes are able to indirectly modify the list by using the
    same object after inserting them into the list. This is undesirable as
    UniquePersonList and AddressBook cannot guarantee that the constraints,
    such as the uniqueness of the list, continue to hold, which results in
    incorrect behavior for both classes.

    Let's ensure that UniquePersonList and AddressBook are actually storing
    copies of the Person object, rather than the original object, so that
    outside classes are not able to modify them after it is inserted into
    the list or book.

[33mcommit d0272c5c5f26e83f431872f0c3e33534bfb88741[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Wed May 24 08:51:05 2017 +0800

    Fix broken links to Developer Guide in docs (#432)

    Update links to Developer Guide in README.md and LearningOutcomes.md.

[33mcommit cc22ed642b34f15798facec1bddd597aa8c0c395[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Mon May 22 08:33:43 2017 +0800

    [#319] Checkstyle: enforce operators' placement in line wraps (#382)

    Our coding standard for Java requires operators' placement in line
    wraps to follow specific rules, such as having assignment operator (=)
    stay attached to the token that precedes it and having the arithmetric
    operator (+) in a new line. These rules are not enforced by
    checkstyle.

    Let's teach Checkstyle to be stricter about line wrapping around more
    symbols by adding the relevant OperatorWrap rules.

[33mcommit a74cc95881c51ec7c7e958c6f150ee0a1daa4c68[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Mon May 22 08:21:39 2017 +0800

    [#401] Add unit tests for ParserUtil#parseX() (#425)

[33mcommit e209ff6d341ececf145ad4f5b58908ce3a49ce6b[m
Merge: 5b19eb4 b918c91
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon May 22 08:13:18 2017 +0800

    [#254] Create Parser Tests for EditCommand (#394)

[33mcommit 5b19eb462c7b62e2fbed1d2e6697894111125029[m
Merge: 1af6587 dbfa20f
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri May 19 14:01:25 2017 +0800

    [#309] Use StackPanes for holding UiParts (#405)

    MainWindow uses AnchorPanes as a placeholder for UiParts. AnchorPane's
    default behavior does not make its children fill up the entire space,
    thus we have to manually call FxViewUtil#applyAnchorBoundaryParameters()
    to do so.

    StackPane's default behavior fills up the entire placeholder space
    automatically.

    Let's
      - replace the usage of AnchorPane with StackPane.
      - remove FxViewUtil#applyAnchorBoundaryParameters(), since we no
        longer have to manually fill up the entire space.

[33mcommit 1af6587f5bd9e70c2b7fba48d587f843b2250af1[m
Author: Miao Ling <limmlingg@gmail.com>
Date:   Fri May 19 13:51:40 2017 +0800

    [#271] Migrate DeveloperGuide.md from markdown to asciidoc (#408)

[33mcommit 93df19ad3c9a46c6983b67d0a3af307d8f4db62a[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri May 19 13:44:57 2017 +0800

    [#406] Teach Parser to enforce spaces between arguments (#409)

    Our parser does not enforce a space between consecutive arguments.
    For example: ?add ABC a/ValidAddressp/61356436e/abc@email.com
    t/someTag? is able to create a correct person.

    This is undesirable because,
    1. it makes the command harder to read (prefixes are harder to detect
    by the naked eye).
    2. it limits our choices for future implementations of prefixes.
    For example, if we want to create a new prefix sp/, the input above
    would be ambiguous because we do not know whether the user meant
    sp/ or p/.

    Let?s teach Parser to enforce spaces between fields.

[33mcommit 8045c62c5c2e17e9b6d22b85f5d5a6e5a12361a0[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri May 19 13:37:43 2017 +0800

    [#428] Fix minor bug in EditCommandIntegrationTest (#429)

    The expectedFilteredList is backed by the internal list of model's
    addressBook. This makes the equals comparison always returning true
    because both lists are pointing to the same list.

    Let?s make expectedFilteredList to be backed by the expectedAddressBook
    instead.

[33mcommit 9e158dd1e06328b723edeeded077f15019ac39d0[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Mar 2 13:50:58 2017 +0800

    Change Model#addPerson(...) signature to ReadOnlyPerson

    Model#addPerson(Person) accepts a mutable Person object. Outside
    classes are able to modify the Person object after inserting it into
    the model.

    Only Model should be able to modify the Person objects that it owns.

    Let's change addPerson()'s signature from Person to ReadOnlyPerson, so
    that the internal Person list is forced to duplicate this object,
    satisfying our new constraint.

[33mcommit 1d9a07fd3469504f545ccc4492b2d810994137d2[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Mar 2 13:36:25 2017 +0800

    Change AddressBook#addPerson(...) signature to ReadOnlyPerson

    AddressBook#addPerson(Person) accepts a mutable Person object. Outside
    classes are able to modify the Person object after inserting it into
    the address book.

    Only AddressBook should be able to modify the Person objects that it owns.

    Let's change addPerson()'s signature from Person to ReadOnlyPerson, so
    that the internal Person list is forced to duplicate this object,
    satisfying our new constraint.

[33mcommit ad970d90a8c4a9e81680c053e033f5f2255f459d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Mar 2 12:44:20 2017 +0800

    Change UniquePersonList#add(...) signature to ReadOnlyPerson

    UniquePersonList#add(Person) directly inserts the input Person object
    to the internal list.

    This makes it possible for outside classes to indirectly modify Person
    objects in the list, making the list unable to guarantee its constraint
    of uniqueness for each Person.

    Let's change the signature of UniquePersonList#add(...) from Person to
    ReadOnlyPerson, so that the inner logic is forced to store a copy of
    the Person object, preventing outside classes from modifying objects
    already inserted into the list and violating the list's constraint.

[33mcommit b918c91b5d725e7331a485bcb112a1dbcf8e3eda[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Thu May 4 07:22:11 2017 +0800

    Create tests for EditCommandParser

[33mcommit 780ad50aee0de04279d98d3798c3b65c2e2cb8e1[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon May 8 13:35:43 2017 +0800

    Add EditCommand#equals(Object)

[33mcommit b98082bc7e98040af92474f37cf55d504c0cf03d[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Fri May 5 14:00:03 2017 +0800

    Add EditPersonDescriptor#equals(Object)

[33mcommit ef06553753b5073c012ccac9ab1082c46b9d0f51[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Wed May 17 08:05:18 2017 +0800

    [#411] UniqueTagList: Add assertions to check all tags are unique (#412)

    The uniqueness of all the tags in UniqueTagList is not being
    checked after the call of every public method in UniqueTagList.
    As such, we do not know whether the invariant is maintained at the:
        1. Start of each method that modifies UniqueTagList.
        2. End of each method that reads from UniqueTagList.

    Let's add assertions for every method to ensure that UniqueTagList's
    invariant is maintained after each operation.

[33mcommit dbfa20f3050d489caa469ffa3d8e4d5c1ded7cf1[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon May 15 12:33:54 2017 +0800

    Combine .anchor-pane-with-border and .stack-pane-with-border

    The design of panes with border are the same regardless of whether it is
    an AnchorPane or a StackPane.

    Let's combine .anchor-pane-with-border and .stack-pane-with-border to
    just .pane-with-border.

[33mcommit cf98b04511de0ed33f94d91ba913b5de03d8b65b[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 11:10:07 2017 +0800

    Remove FxViewUtil#applyAnchorBoundaryParameters()

    FxViewUtil#applyAnchorBoundaryParameters() is no longer used anywhere
    in the codebase.

    Let's remove it.

[33mcommit 54bff95d0bde03178ca77dec447597d77bc904e2[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 10:46:20 2017 +0800

    Change HelpWindow to use StackPane

    HelpWindow uses an AnchorPane to display the help browser. This requires
    manual adjustment of the browser's anchors to fill up the entire space.

    StackPane has this behavior by default.

    Let's change the AnchorPane to StackPane so that we do not need to do
    the manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().

[33mcommit 6faf8cd4e108d5d78aabc0af4323ba43d785414c[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 10:41:07 2017 +0800

    Change MainWindow's StatusBarFooter to use StackPane

    MainWindow uses an AnchorPane as a placeholder for StatusBarFooter. This
    requires manual adjustment of StatusBarFooter's anchors to fill up the
    entire space.

    StackPane has this behavior by default.

    Let's change the AnchorPane to StackPane so that we do not need to do
    the manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().

[33mcommit c684e8a89a09b3f3daeb4757eea50a6683f7d635[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 10:10:37 2017 +0800

    Change MainWindow's ResultDisplay to use StackPane

    MainWindow uses an AnchorPane as a placeholder for ResultDisplay. This
    requires manual adjustment of ResultDisplay's anchors to fill up the
    entire space.

    StackPane has this behavior by default.

    Let's change the AnchorPane to StackPane so that we do not need to do
    the manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().

    The ResultDisplay is wrapped inside another AnchorPane. It is
    redundant. Remove it.

[33mcommit eb2ee4176aa6da8139f8c6352199660f89c5560b[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 09:55:34 2017 +0800

    Change MainWindow's PersonListPanel to use StackPane

    MainWindow uses an AnchorPane as a placeholder for PersonListPanel. This
    requires manual adjustment of PersonListPanel's anchors to fill up the
    entire space.

    StackPane has this behavior by default.

    Let's change the AnchorPane to StackPane so that we do not need to do
    the manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().

[33mcommit 0a1c3a99079f99c314c35c403b1c0f9b681c1964[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 09:46:56 2017 +0800

    Change MainWindow's CommandBox to use StackPane

    MainWindow uses an AnchorPane as a placeholder for CommandBox. This
    requires manual adjustment of CommandBox's anchors to fill up the
    entire space.

    StackPane has this behavior by default.

    Let's change the AnchorPane to StackPane so that we do not need to do
    the manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().

[33mcommit b8c4d5b4badc939ab9599acae8db10c40e037269[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue May 9 09:30:40 2017 +0800

    Change MainWindow's BrowserPanel to use StackPane

    MainWindow uses an AnchorPane as a placeholder for BrowserPanel. This
    requires manual adjustment of BrowserPanel's anchors to fill up the
    entire space.

    StackPane has this behavior by default.

    Let's change the AnchorPane to StackPane so that we do not need to do
    the manual adjustment using FxViewUtil#applyAnchorBoundaryParameters().

[33mcommit 0f2cb22b3dbf7cdc592e2b58261728241f4d4166[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon May 15 08:15:22 2017 +0800

    [#303] Modify ParserUtil#parseIndex(String) to throw IllegalValueException (#403)

    ParserUtil#parseIndex(String) returns an empty Optional if the input is
    not a positive unsigned integer.

    Failing silently prevent callers from distinguishing between missing
    input vs wrong input format.

    Let's modify ParserUtil#parseIndex(String) to throw
    IllegalValueException when it receives an input that is not a positive
    unsigned integer.

[33mcommit 05a676443ef9016e1c6975b06d6fb322b43b4dc2[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri May 12 10:27:12 2017 +0800

    [#172] Add unit tests for AddCommand (#273)

    AddCommand does not have unit tests.

    Let's write AddCommandTest (unit test version), which injects a model
    stub into the command, so that the behavior of AddCommand can be
    tested in isolation.

    To implement the stubs, we need to be able to throw
    DuplicatePersonException, so make it public.

[33mcommit 84ae299cfdff2ffb4b528ece881e3c23b0a66535[m
Merge: d0cf128 ad6d5bd
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Fri May 12 09:46:11 2017 +0800

    [#376] Remove repeated usage of string literals (#377)

    The repeated usage of string literals violates the DRY principle
    (e.g. "add" for the add command word, "p/" for phone prefix).

    Let's replace these string literals with the constants defined for
    them (e.g. AddCommand.COMMAND_WORD for "add",
    CliSyntax.PREFIX_PHONE for "p/").

[33mcommit d0cf1289ffbaa80838c3e0b130aebe995d19035d[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Fri May 12 09:02:04 2017 +0800

    Replace LogicManagerTest#generatePersonWithName() with PersonBuilder (#391)

    LogicManagerTest#generatePersonWithName(String) creates a person with
    default values, except for the name. However, the same can be achieved
    using PersonBuilder. This makes the method redundant.

    Let?s change the creation of these Person objects to use PersonBuilder
    instead.

[33mcommit ad6d5bd714fd1d059a7f9523c53dde2cc23951e5[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Tue May 9 19:54:18 2017 +0800

    Replace repeated usage of string literals with CliSyntax constants

    We use string literals "p/", "e/", "a/", "t/" for prefixes in various
    places.

    However, such repeated use of string literals (e.g. "p/") violates
    the DRY principle because the string literal for each prefix is already
    defined in CliSyntax class (e.g. PREFIX_PHONE for "p/").

    Let's replace these string literals with CliSyntax constants.

[33mcommit db4541a86179c796c8ff0c5fa0ca974adcded350[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Mon May 8 21:08:19 2017 +0800

    Prefix: add toString()

    Concatenating a command prefix when constructing a command string
    requires the use of Prefix#getPrefix().
    e.g. PREFIX_PHONE.getPrefix() + "911"

    As Prefix encapsulates the prefix string that is also the return value
    of getPrefix(), overriding toString() in Prefix class to return the
    result of getPrefix() allows us to omit getPrefix() when concatenating
    prefixes to strings. e.g. PREFIX_PHONE + "911" would return the same
    value as PREFIX_PHONE.getPrefix() + "911".

    Let's add the toString() method to the Prefix class.

[33mcommit 095c4198c0df4de21bcf341572e5620266daedca[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Wed Mar 29 14:36:10 2017 +0800

    Replace repeated usage of string literals with COMMAND_WORD constants

    We use string literals (e.g. "add", "edit") in our tests.

    However, such repeated use of command word string literals (e.g. "add")
    violates the DRY principle because the string literal for each command
    is already defined in the respective *Command classes
    (e.g. AddCommand.COMMAND_WORD is defined as "add").

    Let's replace these string literals with COMMAND_WORD constants.

[33mcommit 8e4d306e4cc579b4e967b267a3c41aafcedbc700[m
Author: Ka Yi <chua.kayi@yahoo.com.sg>
Date:   Sat May 6 23:21:49 2017 +0800

    [#270] Set up workflow for asciidocs (#302)

    As discussed in fae87009249fc5a0084ea0d4fd28d1d8bf312921, we are
    migrating the documentation from GitHub Flavored Markdown to AsciiDoc.

    Let's teach Travis to generate HTML files with Asciidoctor using the
    AsciiDoc files inside the 'docs' directory. Generated files are then
    pushed to gh-pages branch for commits to the master branch.

    For the deploy script to work, maintainers will then have to:
     1. Create a GitHub machine account and grant it access to this repo
     2. Generate an access token and put it as an encrypted environment
         variable in Travis settings.

    We use personal access tokens instead of SSH deploy keys to grant
    Travis push access to the repo as they can be set up easily via GitHub's
    and Travis' websites, unlike SSH keys which require additional tools.

    However, personal access tokens grant access to all of a user's repos.
    If a user's access token is used, others with write access to the repo
    may change the deploy script to print the token and hence gain access to
    the user's repos. Thus, we create a separate GitHub user account
    (machine account) to handle deployment. This way, only the repo is put
    at risk in the case of a leak.

    Asciidoctor suggests using the Gradle Git Plugin to publish files to
    gh-pages[1]. However, setting up is more complicated and less
    customization is allowed.

    Travis also supports GitHub Pages Deployment[2]. However, it does not
    maintain history for generated files, storing only the most recent
    version, and the commit message cannot be customised to show which
    commit the files are generated from. This can be problematic if
    deployment fails as it is harder to identify which version of
    documentation is being deployed.

    In deploy_github_pages.sh, we use git credentials to store the personal
    access token instead of adding the token to the repo url. GitHub prints
    the repo url when there is an error for certain commands, so using
    credentials ensures that the token is not printed to Travis logs.

    [1] http://asciidoctor.github.io/asciidoctor-gradle-examples/#_publish_to_github_pages_example
    [2] https://docs.travis-ci.com/user/deployment/pages/

[33mcommit a5d9fcc4cce6b798663a565091e38782d140b7e7[m
Author: Zhi Yuan <yongzhiyuan@u.nus.edu>
Date:   Thu May 4 13:53:13 2017 +0800

    [#286] Update Phone's regex to reject numbers shorter than 3 digits (#383)

    The shortest known phone numbers are 3 digits (e.g. emergency numbers
    such as 911 and 999) but the regex used to validate phone numbers
    accepts numbers shorter than 3 digits.

    Let?s change the regex to reject numbers shorter than 3 digits.

[33mcommit dc9fe96a38a2b5f9bb5bb4c05c3ff1db47b1effd[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Fri Apr 14 15:45:15 2017 +0800

    [#319] Checkstyle: enforce separators' placement in line wraps (#368)

    Our coding standard for Java requires separators' placement in line
    wraps to follow specific rules, such as having comma (,) stay attached
    to the token that precedes it and having the dot (.) in a new line.
    These rules are not enforced by checkstyle.

    Let's teach Checkstyle to be stricter about line wrapping around some
    symbols by adding the relevant SeparatorWrap rules.

[33mcommit c730a6805dd0724cb8fb57ca14a2248df32071b2[m
Merge: 3e7451e b8be1a3
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Apr 14 15:22:26 2017 +0800

    [#254] Add Integration Tests for EditCommand (#317)

    There are no integration tests for the EditCommand.

    Let's add an EditCommandIntegrationTest to test code paths
    in the EditCommand and verify EditCommand's integration
    with the Model.

[33mcommit b8be1a36f6bc2da092ab4bccc8c7f199bd16d935[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Thu Apr 6 04:07:30 2017 +0800

    Add EditCommandIntegrationTest

    There are no integration tests for EditCommand.

    Let's add an EditCommandIntegrationTest to test code paths
    in the EditCommand and verify EditCommand's integration
    with the Model.

[33mcommit 81ee71e821cadb832cb9a1403ac2050692d0bbe5[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Thu Apr 6 04:07:06 2017 +0800

    PersonUtil: add getEditCommand(int, Person)

    Let's add a utility method for creating the command string for
    editing the details of a person in the address book.

[33mcommit 3e7451edc6f148feacd107828732a4856a79f7e5[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Thu Apr 13 11:07:47 2017 +0800

    [#319] Checkstyle: enforce final keyword or encapsulation for class variables (#364)

    Our coding standard for Java does not allow class variables to be
    declared public. This rule is not enforced by checkstyle.

    By not enforcing the rule, it violates the concept of Java information
    hiding and encapsulation. However, there is one exception to this
    rule, which is when the class is essentially a data structure, with no
    behaviour. In such cases the variables are required to use the
    final keyword to minimize unintended modifications to those
    variables by clients.

    Let's teach Checkstyle to enforce the above rule and its exception by
    adding the VisibilityModifier rule.

[33mcommit fa5b6d68d02e98d8b1c30dfb4c50185eb7b27389[m
Author: Lim Shun Xian <shouyu2@hotmail.com>
Date:   Thu Apr 13 10:54:39 2017 +0800

    [#293] Implement a IndexUtil#oneToZeroIndex() abstraction (#331)

    "i - 1" is sometimes used to convert 'i' from a one-based index to a
    zero-based index.

    Comments have to be added to describe the purpose of "i - 1", as it is
    not obvious whether we are taking the item before 'i', or whether we are
    converting 'i' from a one-based index into a zero-based index, which
    decreases code readability.

    Let's implement a IndexUtil#oneToZeroIndex(int) method which returns the
    zero-based index given the one-based index as input.

    The use of IndexUtil.oneToZeroIndex(int) removes the need for a comment
    when we convert 'i' from a one-based index to a zero-based index.

[33mcommit 2c3390b1442d4fd7cc8484e339e9ffa3aed3b981[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Fri Apr 7 22:41:53 2017 +0800

    [#319] Checkstyle: require default branch in switch statements (#378)

    Our coding standard requires each switch statement to include a
    default branch, even if it contains no code. This rule ensures that
    all possible cases are covered and also to protect the code against
    later changes, e.g. introduction of new types in an enumeration type.
    This rule is not enforced by checkstyle.

    Let's teach Checkstyle to enforce the above rule.

[33mcommit 12c4294cfc5c7ac4294223ac647d25878caad3b6[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Fri Apr 7 22:22:12 2017 +0800

    [#319] Checkstyle: enforce @clause order (#365)

    Our coding standard requires @clauses in Javadoc comments
    to be in the order:
    @author, @version, @param, @return, @throws, @exception, @see,
    @since, @serial, @serialField, @serialData, @deprecated
    This rule is not enforced by checkstyle.

    Keeping the order of at-clauses organized results in the javadocs
    being more readable in code form. This is important as this type of
    documentation is typically read more often inside the code than it is
    as processed text.

    Let's fix this by adding AtclauseOrder rule. It checks that the order
    of @clauses follows the tagOrder property value order.

[33mcommit 583d3085055991471563d0d348c5cea96491fe6f[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Fri Apr 7 22:10:28 2017 +0800

    [#319] Checkstyle: prevent upper case abbreviations in names (#360)

    Upper case abbreviations in names (e.g. HTML in exportHTMLSource)
    are not allowed by our coding standard (it should be exportHtmlSource
    instead) but that rule is not enforced by checkstyle .

    Let's teach checkstyle to reject upper case abbreviations in names
    by adding AbbreviationAsWordInName rule which rejects
    consecutive upper case letters in identifier names.

    In cases where there are consecutive capital letters due to word
    boundaries around single-lettered words, such as in
    ?canIHasReview?, we can make use of the allowedAbbreviations property to
    whitelist them. We are not relaxing the allowedAbbreviationLength to >1
    as single-lettered words are uncommon in identifier names, and
    whitelisting any legitimate cases is a suitable solution.

[33mcommit 6951a73c502185c54370c16fde85605743899d55[m
Author: Huang Chao <huangchao0825@gmail.com>
Date:   Wed Apr 5 20:12:52 2017 +0800

    [#371] Remove uses of real domain names (#375)

    Potentially genuine email addresses are used in our documentation and
    testing code, e.g. bobby@gmail.com, hans@google.com, alice@yahoo.com.

    We don't want to help spam bots send spam to them.

    Let's change these potentially genuine email address to @example.com.

[33mcommit 8f4b6b4bb819c670f9039374e55781a848783676[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Wed Apr 5 19:40:23 2017 +0800

    [#319] Checkstyle: disallow single line conditional statements (#362)

    Checkstyle allows single line conditionals like this:

    if(something) foo();

    Such statements can potentially introduce bugs like the code
    below where it appears like bar() is attached to the condition
    but is not:

    if(something) foo();
        bar();

    It can also cause some code coverage checkers to produce
    inaccurate coverage statistics as it goes by the lines covered.

    Let's disallow single line conditionals by removing the allowSingleLineStatement
    property, which defaults to false.

[33mcommit d010443ebdd238e46d1abda1a59718027c7f473b[m
Author: Huang Chao <huangchao0825@gmail.com>
Date:   Wed Apr 5 17:53:46 2017 +0800

    [#310] Remove TestPerson (#373)

    TestPerson is used in testing to create a Person without filling in
    all the fields.

    However, although it simplifies construction of a Person, it also
    violates LSP because TestPerson breaks ReadOnlyPerson's contract.
    For example, its getName() method can possibly return null, and
    its getTags() method doesn't return a deep copy.

    Let's remove TestPerson and use Person instead. With default fields,
    it's still easy to construct a Person using PersonBuilder.

    Let's also add PersonUtil to hold utility methods for Person, like
    getAddCommand(Person).

[33mcommit aa9b3b392f5264260d60403c0c9715171692b1d4[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Mon Apr 3 23:50:22 2017 +0800

    [#319] Checkstyle: fix MethodName supplied expression (#366)

    Test case method names are expected to follow the format
    featureBeingTested_scenario_expectedResult.

    However, following aspects of the above naming convention
    are not enforced by checkstyle:
    1. only one consecutive underscore between two parts
    2. no more than 2 underscores
    3. each part should of the name should start with a lower case letter
    4. do not end with a symbol

    Let's update the relevant regex in the checkstyle config file
    to enforce the 4 aspects mentioned above.

[33mcommit 2b73f71fb364eda4be9e0daa1e9c372a46c5a3be[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Mon Apr 3 23:13:42 2017 +0800

    [#319] Checkstyle: add EmptyCatchBlock rule (#369)

    Our coding standard requires an empty catch block to have at least
    an explanatory comment. This rule is not enforced by checkstyle.

    Let's add EmptyCatchBlock rule to reject empty catch blocks that
    don't have any comments. While this does not ensure that the
    comment inside the catch block sufficiently explains the reason
    for the empty catch block, at least it helps to eliminate cases
    where there is no comment at all.

[33mcommit 3fd19d0dc05ea74d872625c86adcf096658aa33b[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Mon Apr 3 22:55:42 2017 +0800

    [#319] Checkstyle: add CommentsIndentation rule (#361)

    Our coding standard for Java requires a comment to be indented to
    match the indentation of the code it describes. This rule is not
    enforced by checkstyle.

    Let's enforce this rule by adding the checkstyle rule CommentsIndentation.

[33mcommit 22397f33a8fc62a7ffd872786333fec99b756a14[m
Merge: 07367fa b91565e
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Apr 3 22:14:38 2017 +0800

    [#231] Simplify FXML files (#356)

    The FXML files are deeply nested with unnecessary parent elements.
    There are also multiple conflicting coding styles that exists within
    the same file.

    This makes the files hard to read and navigate. Furthermore, the
    differing coding styles in the same file makes the whole file
    inconsistent.

    Let's modify the FXML files as follows:
        * Change indentations to 2 spaces in all FXML files as these files
          tends to have deep nesting
        * Remove all star imports and reorder the rest in alphabetical
          order in all FXML files
        * Remove unnecessary parent elements to reduce the nesting in
          all FXML files
        * Remove all unnecessary CSS style sheet imports except those
          in MainWindow.fxml
        * Wrap long attributes into multiple lines and add white spaces
          in MainWindow.fxml to improve readability
        * Remove unneeded minwidth attribute in StatusBarFooter.fxml
        * Remove unnecessary HBox element in PersonListCard.fxml
        * Standardize inset attributes order declarations in all FXML files
        * Add a space before closing slash in self-closing tags in all FXML files
        * Standardize height and width declarations in all FXML files to use
          only integer values

[33mcommit b91565e39e0a18b3f5634912c1849a6aa599f4a6[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Tue Mar 28 10:10:09 2017 +0800

    Standardize height and width declarations in all FXML files

    The various FXML elements declares their height and width using
    both integer and double values.

    Let's standardize all height and width declarations to use integer
    values

[33mcommit 1796655b975ea47319dbe96f10661b720dd5a99c[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Tue Mar 28 10:03:32 2017 +0800

    Standardize self closing tags in all FXML files

    The various FXML files contains self closing tags that are closed by
    appending a slash at the end of the element. Some of these tags prepend
    a space before the slash while others do not.

    Let's standardize all self closing tags to prepend a space before the
    closing slash.

[33mcommit 8f4b7a06d8d784b64246fd03f4d1eb23fced8e5e[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Mon Mar 27 17:40:03 2017 +0800

    Standardize declaration order of insets in all FXML files

    The various FXML files use insets declarations in order to add
    inner padding within elements. The declaration is not consistent as
    some elements declare the padding size using integer values
    while others use declare using double values.

    Let's standardize all insets declarations as follows:
        * Insets should declare paddings using the CSS convention
          (i.e top right bottom left)
        * All padding sizes are declared in integer values.

[33mcommit 098c151f88a6538e5f41e3301e9ee9ede82c9524[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Mar 25 11:57:57 2017 +0800

    PersonListCard.fxml: Remove unneeded child HBox

    The id and name label in PersonListCard is wrapped around two parent
    HBoxes.

    This is not necessary.

    Let's remove the unneeded child HBox.

[33mcommit 3c21984b8a7cf254ed29b3a76794310502a78a4b[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Mar 25 11:55:14 2017 +0800

    StatusBarFooter.fxml: Remove unneeded attribute

    Both StatusBar elements sets their minimum width to zero.

    This is unnecessary as both status bars will have some content in
    runtime.

    Let's remove this unneeded attribute.

[33mcommit 1919a0ab3a347e3a825ac4a83680d51edf767f8b[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Mar 25 11:52:12 2017 +0800

    MainWindow.fxml: Refactor to improve readability

    MainWindow consists of multiple placeholders contained in a VBox all
    clumped together. Furthermore, some elements have multiple attributes,
    causing it to exceed the character limit for a line.

    This makes the file very hard to read.

    Lets refactor MainWindow.fxml as follows:
        * Add white spaces between sibling elements to improve
          readability.
        * Wrap long elements to a new line.

[33mcommit 38a3cb6997dff47e8a6280405f9cc0539e7ffa75[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Mar 25 11:24:30 2017 +0800

    Remove stylesheets imports in UiPart's FXML files

    The various UiParts FXML files import the same DarkTheme and
    extension CSS files.

    This is not necessary as MainWindow loads all UiParts by adding their
    various components as a child of the AnchorPane placeholders. Since
    the AnchorPane placeholder is part of MainWindow, all its children
    will also be styled by the stylesheets declared in MainWindow.

    Let's remove the stylesheets declarations from the various UiParts FXML
    files.

[33mcommit 895f252667f346a88db65a7d5fb0e22c9d138f25[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Mar 25 11:21:23 2017 +0800

    Remove unnecessary children tags in FXML files

    Some FXML files wrap the contents between a pair of children tags.

    This is unnecessary in JavaFX as all panes has a default property of
    children.

    Let's remove these unnecessary children tags.

[33mcommit f8ae1f0efc2e6724be643b3c003d6e6bd3bd8e10[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Mar 25 11:15:26 2017 +0800

    Refactor imports in all FXML files

    The imports in the FXML files are arranged in a haphazard order and
    contain star imports.

    This is not compliant with the coding style used in the rest of the
    project that states:
        * Imports should be arranged in alphabetical order.
        * Avoid using star imports as they load more modules than necessary.

    Let's refactor the imports in all FXML files to fix the two problems
    given above.

[33mcommit 5bc7b615fe1fbde08c06822bcf439a864b124311[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sun Apr 2 20:25:45 2017 +0800

    Change indentation to 2 spaces in all FXML files

    FXML files tend to have rather deep nesting and arrowhead style code.
    Having 4 spaces as indentation makes the code harder to read as
    most elements are aligned to the right.

    Let's modify the FXML files to use 2 spaces instead.

[33mcommit 07367fab5054768f3243fb55eba1367d3d67a39b[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Sat Apr 1 14:30:20 2017 +0800

    [#319] Checkstyle: add DeclarationOrder rule (#367)

    Checkstyle does not enforce the method/variable declaration orders
    in Classes and Interfaces as specified in our coding standard.

    Let's add the checkstyle DeclarationOrder rule to enforce the
    declaration order.

[33mcommit 3ceb58957fcd3268758b1b6b98932f536de3e9e8[m
Author: Eugene Peh <eugenepeh@users.noreply.github.com>
Date:   Sat Apr 1 14:19:35 2017 +0800

    [#319] Checkstyle: add ArrayTypeStyle rule  (#363)

    We allow array type declarations in both Java and C styles, e.g.
    Java style: public static void main(String[] args)
    C style:    public static void main(String args[])

    However, Java style is preferred and we should only use this style
    in our project.

    Let's add ArrayTypeStyle rule to ensure that only the Java style
    of array type declarations is used.

[33mcommit 3291675213b3a08db9653da0722ea8fd374074dc[m
Merge: a61db1b d79c47f
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Mar 31 18:14:02 2017 +0800

    [#306] Move all parsing from AddCommand to AddCommandParser (#315)

    Parsing the add command string into a Person object
    is split between the AddCommandParser and the AddCommand.

    It is more cohesive if the said parsing is done entirely
    by the AddCommandParser itself.

    Let's modify the construction of add command as follows:
    * Add an explicit check for empty prefixes and remove the use of
      NoSuchElementException to detect missing prefixes.
    * Make AddCommandParser do the parsing and create a
      fully parsed Person object.
    * Make AddCommand's constructor accept a fully parsed
      ReadOnlyPerson.

[33mcommit a61db1bf27f62cc549eb79be0a4598f2f1994b9b[m
Author: Huang Chao <huangchao0825@gmail.com>
Date:   Wed Mar 29 19:52:08 2017 +0800

    [#342] Travis CI: cache dependencies (#347)

    Gradle dependencies are not cached in Travis builds.

    Consequently, the dependencies are re-downloaded in every build.

    Let's teach Travis to cache Gradle dependencies using the recommended
    configurations from Travis CI documentation [1].

    In our experiments, when cache is not enabled, it takes 26.68 seconds
    to run Gradle assemble task, which includes downloading Gradle and the
    dependencies. When cache is enabled, Travis will tar up all the cached
    directories and upload them to S3. So the cache is not network-local,
    and the download time will be bound to network bandwidth and DNS
    resolutions for S3. In the experiment, it takes 5.83 seconds to pull
    down the cache from S3 and another 10.75 seconds to finish the assemble
    task. At the end of the build, Travis will also check whether the cache
    is updated. If it is, Travis will create a new archive and upload it to
    S3. This check adds another 1.48 seconds overhead even when the cache
    is not updated. So a rough estimate is that the build time will be
    reduced by around 10 seconds when cache is enabled. Reasons for the
    shorter build time now may be because Travis downloads the dependencies
    from S3 in bulk instead of making multiple requests (one for each
    dependency).

    For more details on how caching works in Travis, please refer to [2].

    [1] https://docs.travis-ci.com/user/languages/java/#Caching
    [2] https://docs.travis-ci.com/user/caching/#How-does-caching-work

[33mcommit d79c47f6bf119284dfa67e9d3a96bc826a6619e1[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Fri Mar 17 23:17:47 2017 +0800

    Move AddCommand's parsing responsibilities to AddCommandParser

    Parsing the add command string into a Person object
    is split between the AddCommandParser and the AddCommand.

    It is more cohesive if the said parsing is done entirely
    by the AddCommandParser itself.

    Let's modify the construction of the add command as follows:
        * Make AddCommandParser do the parsing and create a
          fully parsed Person object.
        * Make AddCommand's constructor accept a fully parsed
          ReadOnlyPerson.

[33mcommit 6fd7e489d6063a985472c278c3a9808d55c11a8d[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Fri Mar 17 23:15:17 2017 +0800

    Remove the use of exceptions for control flow in AddCommandParser

    ArgumentsTokenzier throws a NoSuchElementException if an attempt is
    made to retrieve the value of a prefix that is not present or has an
    empty value. AddCommandParser interprets that exception as an invalid
    add command format. The flow of this check is hard to understand because
    it is embedded in a call to the AddCommand constructor and spills over to
    a catch block.

    The code will be easier to understand if there is an explicit prefix
    check before calling the constructor of AddCommand.

    Let's add an explicit check for empty prefixes and remove the use of
    NoSuchElementException to detect missing prefixes.

[33mcommit 49075017cc9b788001cbb8d4a410adec18dc8406[m
Merge: 2d93a18 c85f70d
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Mar 29 17:22:58 2017 +0800

    [#291] Make ReadOnlyPerson truly read-only  (#326)

    ReadOnlyPerson#getTags() returns a mutable UniqueTagList.

    This makes it possible for outside objects to modify the tags of
    ReadOnlyPerson, violating the constraint that it is supposed to be
    readonly.

    Let's change ReadOnlyPerson#getTags() to return a Set<Tag>
    created using Collections.unmodifiableSet(Set<T>) so that
    callers are not allowed to modify the Tags returned.

[33mcommit 2d93a1840d522a596e521ffc40034205cd95a4bc[m
Merge: 27cb462 b3baf26
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Mar 29 17:14:20 2017 +0800

    [#312] ArgumentTokenizer: ensure tokenizing before getting values (#320)

    ArgumentTokenizer's tokenized arguments getters can be called before
    arguments have been tokenized with ArgumentTokenizer#tokenize(String).

    This is problematic as the getters would return empty Optionals, lists,
    and strings that are indistinguishable from normal empty results.

    Let's encapsulate ArgumentTokenizer's getters in ArgumentMultimap such
    that we can enforce the sequence of method calls and simplify
    ArgumentTokenizer's logic.

[33mcommit b3baf264f5b368654e18e774d604629e1ff7007e[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Mon Mar 20 23:17:04 2017 +0800

    ArgumentTokenizer: make tokenize(...) static

    Command parsers need to create a new ArgumentTokenizer object before
    they can tokenize an arguments string. During instantiation, the
    ArgumentTokenizer constructor is provided prefixes to be later used when
    ArgumentTokenizer#tokenize(String) is called.

    ArgumentTokenizer doesn't have a need to be instantiated before
    tokenizing can be done. The object is not reused to tokenize different
    arguments strings with the same set of prefixes provided during
    instantiation.

    Let's make ArgumentTokenizer#tokenize(...) static, which also makes it
    state-independent and thus easier to test.

[33mcommit 0d2e7b284fdd56c4526b7bf097682a7fb789b22f[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Tue Mar 14 18:19:38 2017 +0800

    Update Logic class diagram with ArgumentMultimap class

    The Logic class diagram in the developer guide does not reflect the
    updated dependencies between ArgumentTokenizer, ArgumentMultimap,
    Prefix, and command parser classes.

    Let's update the Logic class diagram.

[33mcommit 96c1f6221d8f799c26e6f9166eceaf4f8a3c0a89[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Wed Mar 8 22:27:52 2017 +0800

    ArgumentTokenizer: extract getters into ArgumentMultimap class

    ArgumentTokenizer's tokenized argument getters can be accessed even
    before ArgumentTokenizer is given arguments to tokenize through
    ArgumentTokenizer#tokenize(String).

    This behaviour is problematic as the getters can be called before
    ArgumentTokenizer#tokenize(...), and would return empty optionals,
    lists, and strings that are indistinguishable from normal empty results.

    Let's extract the getters into a new ArgumentMultimap class, and have
    ArgumentTokenizer#tokenize(...) return an instance of that class so that
    these getters cannot be accessed before tokenization.

[33mcommit cce7b1a7813517114eb96e2e10ebf6f37b768971[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Sat Mar 11 17:35:18 2017 +0800

    Extract Prefix class out of ArgumentTokenizer class

    The Prefix class is a nested class in ArgumentTokenizer.

    It is unnecessarily tightly coupled with ArgumentTokenizer. The Prefix
    class is used by other classes that do not need access to the
    ArgumentTokenizer class.

    Let's extract the Prefix class into its own class.

[33mcommit 27cb4621dca1bf474b2838352a90873f3fbcb4ef[m
Author: Pierce Anderson Fu <pierceanderson.fu+github@gmail.com>
Date:   Sat Mar 25 16:08:12 2017 +0800

    [#351] Outdated prefixes in ArgumentTokenizer (#352)

    The prefixes in ArgumentTokenizer's comments and tests use the old
    prefix format of "/t" instead of the current "t/".

    This is inconsistent with our production code.

    Let's update the comments and tests to be consistent with the current
    prefix format used in the production code.

[33mcommit 25d03252cfcc4705bb0aa00426298ea2983f3203[m
Author: Jeremy Goh <gohydj2003@gmail.com>
Date:   Sat Mar 25 15:59:06 2017 +0800

    [#336] Cannot add a label called `location` in person card (#339)

    JavaFX stores all the fields in a namespace map which maps the name of
    the field to the corresponding JavaFX object. JavaFX also defines some
    keys as a constant - in particular LOCATION_KEY as the String
    "location" and RESOURCES_KEY as the String "resources".

    Using any of these strings as a field will result in JavaFX trying to
    cast the field to the type of the corresponding value in the namespace.
    For example, any fields with the name "location" will be cast into an
    URL object which is not allowed.

    Let's document these findings down in the controller so as to inform
    other developers of the existence of such keywords.

[33mcommit c85f70dfff7c03cef9db5ba627b1ce0369693f8e[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Mar 11 12:01:57 2017 +0800

    AddCommand: Change constructor to use Set<Tag> instead of UniqueTagList

    AddCommand#AddCommand(...) converts the UniqueTagList to a Set<Tag>,
    only to have the Person's constructor converting it back to a
    UniqueTagList.

    Let's change AddCommand#AddCommand(...), to accept a Set<Tag> (instead
    of UniqueTagList), so as to avoid converting back and forth.

[33mcommit 21b84ac4aaeafa975d1200251c81ff458bd0680b[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Mar 14 13:32:23 2017 +0800

    Person: Change constructor to take Set<Tag> instead of UniqueTagList

    Person#Person(Name, Phone, Email, Address, UniqueTagList) is one of the
    constructors in Person.

    Using a UniqueTagList as a parameter type in the constructor is
    inconsistent with the API, as Person#getTags() returns a Set<Tag>. This
    also means that duplicating a Person will require converting its tag
    list from Set<Tag> to UniqueTagList.

    Let's change Person#Person(...) to accept Set<Tag> (instead of
    UniqueTagList) so that the constructor is consistent with the API.

[33mcommit 470957d1a16ddc0f4f8945a5d13f5a6846565e42[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Sat Mar 11 11:37:39 2017 +0800

    Person: Change setTags(UniqueTagList) to setTags(Set<Tag>)

    The parameter type of Person#setTags(UniqueTagList) is inconsistent
    with the getter counterpart Person#getTags():Set<Tag>. This also means
    that updating a Person's tag list will require converting from Set<Tag>
    to UniqueTagList.

    Let's change Person#setTags(UniqueTagList) parameter type to Set<Tag>
    so that the setter is consistent with the getter.

[33mcommit 270cff83b13f670f8aa8a6258771e3522dd2a0bc[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Mar 7 12:55:04 2017 +0800

    Person: Change getTags() to return immutable tag set

    Person#getTags() returns a mutable Set<Tag>.

    This violates the contract of ReadOnlyPerson#getTags() that
    Person#getTags() implements, which expects an immutable Set<Tag>.

    Let's change Person#getTags() to return an immutable Set<Tag>.

[33mcommit ed1a39fe4a858f5682f119cd2fb9ad9cd1e92e00[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Mar 7 11:50:35 2017 +0800

    ReadOnlyPerson: Change ReadOnlyPerson#getTags() to return Set<Tag>

    ReadOnlyPerson#getTags() returns a mutable UniqueTagList.

    It is better if the method returned an immutable data structure such as
    an immutable Set<Tag>.

    As a step towards returning an immutable Set<Tag>, let's change
    ReadOnlyPerson#getTags() to return a Set<Tag> instead of UniqueTagList.

[33mcommit 2749e8512f3b508ecd93e97788c1f0a6a1efb076[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Tue Mar 7 12:50:33 2017 +0800

    PersonBuilder: Fix withTags(...) modifying Person's UniqueTagList

    Person's UniqueTagList is supposed to be immutable.

    PersonBuilder#withTags(String...) does not obey the immutability
    requirements since it directly modifies the Person's UniqueTagList when
    adding new tags.

    Let's teach PersonBuilder#withTags(String...) to supply a correctly
    populated UniqueTagList to the Person#setTags(...) method, instead of
    modifying the UniqueTagList after it has been passed to the
    Person#setTags(...) method.

[33mcommit e1eafd1145cb5fdcc81bbacecf9e5145903b3fe2[m
Author: Huang Chao <huangchao0825@gmail.com>
Date:   Thu Mar 23 14:10:47 2017 +0800

    [#353] All gui tests are failing  (#354)

    We depend on TestFx to run our GUI tests.

    However, a recent TestFx update breaks our GUI tests, causing
    all Travis builds to fail.

    Let's fix the version of TestFx to the one that was working
    (4.0.5-alpha) as a quick fix.

[33mcommit 4c4e1ed78fd8465512c5b434a3c592da52740717[m
Author: Jeremy Goh <gohydj2003@gmail.com>
Date:   Mon Mar 20 17:18:50 2017 +0800

    [#323] Index is cut off when names are too long for PersonCard (#338)

    The id text label does not define its minimum width on the PersonCard
    cell.

    As a consequence, a very long person name could cause the number in the
    label to be truncated. This is not desirable as users need to
    know the id number of a person to use some commands (e.g. edit).

    Let's set the id label's minimum width to its preferred width so that the
    id label will always be wide enough to display the id number, regardless
    of the length of the person's name.

[33mcommit d87cf6bae333f9254f72cf4fe6242cf2c19a8c6f[m
Author: Ziyang <frank16874@gmail.com>
Date:   Mon Mar 20 17:16:02 2017 +0800

    [#344] Fix typo in LogsCenter#getLogger(...) header comment (#345)

[33mcommit f5efb728b72c193913006d96d4d5591da810af50[m
Merge: 03ed0f6 4ca5e64
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Mar 19 12:56:43 2017 +0800

    [#340] HTML anchors in UserGuide.md DeveloperGuide.md all broken (#343)

[33mcommit 4ca5e64a6e1bcfcde088e593df7db75503ba8e9d[m
Author: VeryLazyBoy <frank16874@gmail.com>
Date:   Sun Mar 5 23:16:26 2017 +0800

    DeveloperGuide.md: add missing numbers to ToC links

[33mcommit 98ad812f3113e7b4292c5b71ad4cf6de375ae7eb[m
Author: VeryLazyBoy <frank16874@gmail.com>
Date:   Sun Mar 5 23:16:06 2017 +0800

    UserGuide.md: add missing numbers to ToC links

[33mcommit 03ed0f651bfce1eac0e863c61d648fe5672507c7[m
Merge: 1f784b0 3a4617f
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Mar 18 15:28:34 2017 +0800

    [#213] Allow updating addressBookPath and addressBookName at runtime (#214)

    Users are not able to update addressBookName and addressBookPath,
    which are stored in Config, because data in Config are not meant to be
    changed at runtime.

    To allow modifying addressBookName and addressBookPath at runtime,
    let's move them from Config to UserPrefs.

[33mcommit 3a4617fc799ffcd33d5b50d46fa13a629f03fb1f[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Sat Feb 25 20:06:07 2017 +0800

    Move addressBookFilePath and addressBookName from Config to UserPrefs

    addressBookFilePath and addressBookName are stored in Config, which is
    meant to represent system configuration and should be read-only.

    That means we should not update addressBookFilePath and addressBookName
    at runtime. However, this creates problems if we want to allow users to
    change the address book file path, or choose a different name for the
    address book.

    Thus these two pieces of info should be kept in UserPrefs instead,
    because it is meant for such user preference settings, and can be
    easily updated at runtime.

    Let's move addressBookFilePath and addressBookName from Config to
    UserPrefs.

[33mcommit 535ed3a77aac64ccde8a5ad6e10752b322ef50ec[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Sat Feb 25 19:59:39 2017 +0800

    StorageManager: remove constructor StorageManager(String, String)

    The constructor StorageManager(String, String) creates two objects,
    namely XmlAddressBookStorage and JsonUserPrefsStorage inside itself.

    However, this reduces testability, as a constructor should be assigning
    dependencies, rather than creating them.

    Let's remove this constructor, so that callers have to create the two
    storage objects themselves and construct StorageManager using the other
    constructor StorageManager(AddressBookStorage, UserPrefStorage).

[33mcommit 1e370962a6c6939e0fc815688f96a542270cd5a6[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Wed Feb 15 13:50:10 2017 +0800

    UserPrefsStorage: introduce getUserPrefsFilePath()

    UserPrefsStorage interface doesn't provide a getUserPrefsFilePath()
    method.

    Other classes are unable to get the current UserPrefs' file path.
    This is also inconsistent with the AddressBookStorage interface.

    Let's add a getUserPrefsFilePath() method, and implement this in
    classes that implement this interface.

[33mcommit 1f784b06cd8055123a5aa5ad06da7a1a0382bffc[m
Merge: 3ace38e 53e85de
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Mar 16 22:15:06 2017 +0800

    [#299] Make UI look-and-feel consistent (#314)

    The UI contains several elements with white backgrounds.

    This is inconsistent with the dark theme used by the app.

    Let's modify the offending elements so that they fit with the dark
    theme.

[33mcommit 3ace38e7e981e3433ab1af9f0ce69afa6aa108e0[m
Merge: 297506b a06749c
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Mar 15 22:21:09 2017 +0800

    [#114] Update GUI tests to verify 'last updated' feature (#216)

    Let's add GUI tests to verify the 'last updated' feature of the status
    bar footer.

[33mcommit a06749cee66343b64948dd091aeae8b77a5c249f[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Thu Feb 9 10:01:05 2017 +0800

    StatusBarFooter: add GUI test for last update feature

    We don't have GUI tests to verify the last updated feature, i.e.
    the sync status in the left corner of StatusBarFooter.

    Let's add an GUI test to verify it.

[33mcommit 982200a86dd430a0519d5ff90f891711d8f12377[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Tue Mar 7 14:05:10 2017 +0800

    CommandBoxHandle#runCommand(...): return success status

    runCommand(...) does not return whether the command execution is
    successful. We have to check it manually with the result message.

    It's clunky to check the result message when it changes based on the
    command inputs. Moreover, in some cases, we do not need to check the
    result message, but we are forced to do so because there is no other
    way of checking whether the command succeeds.

    Let's change runCommand(...) to return a boolean to indicate whether
    the command execution is successful.

[33mcommit 58a9b653ee464ba570ef535e818e4329dba3432b[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Sat Feb 25 19:39:56 2017 +0800

    StatusBarFooter: extract sync status messages into constants

    Feedback messages for sync status are directly used inside the code.

    Thus we have to hard code the same strings in testing code, too.
    This is error-prone.

    Let's refactor them into class constants and use these constants
    instead.

[33mcommit 76be0b3f25accf7682bfa3482bddb3c5426595aa[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Tue Feb 14 15:34:46 2017 +0800

    StatusBarFooter: enable dependency injection of a Clock

    When an AddressBookChangeEvent occurs, the sync status's timestamp is
    updated using 'new Date()'.

    However, because we do not know the arrival time of the event during
    testing, we are unable to verify the accuracy of the time stamp in the
    updated sync status.

    To gain testability, StatusBarFooter needs to support dependency
    injection. And to support dependency injection, we can't directly
    call new Date().

    Let's add a Clock, and get the time stamp from it, so we can inject
    a fixed Clock during testing.

[33mcommit 53e85de25ff2d1c91e7312583dff101275807180[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Tue Mar 7 19:22:01 2017 +0800

    Update screenshot of GUI in docs

[33mcommit 79fb9c3f15a9323a7bb6939616ce28570fd1dcc6[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Mar 2 13:36:48 2017 +0800

    BrowserPanel: Load a default blank page

    BrowserPanel does not load any page when no person is selected. This
    results in a very contrasting white background in a large box among
    the dark background.

    As the background of the BrowserPanel cannot be modified by CSS, we
    can instead load a default HTML page with a matching background color
    to the rest of the application on initialization.

    Let's load a default HTML page in the BrowserPanel on initialization.

[33mcommit 104fad3b3c777336e6929c7cd624c574259c1032[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Mar 2 13:32:55 2017 +0800

    Modify CSS files to better match the general dark theme

    Some elements in the UI have the default white background which is very
    constrasting to the dark theme the application is using.

    Let's modify the CSS of these elements to match the dark background
    of the application.

[33mcommit 977f98ec52f81408625db5c0f42543f03e970f8b[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Mar 2 13:30:28 2017 +0800

    StatusBarFooter: Align save location to the right

    The save location in the status bar is aligned to the left,
    causing it to misalign when the size of the window is stretched.

    This is problematic as it is not responsive to changes to the size of
    the window.

    Let's change the footer element to align itself to the right instead.

[33mcommit 297506b87fabe6de6baa7901388039ec50199802[m
Author: Lin Han <lhlhyong@gmail.com>
Date:   Fri Mar 10 12:13:39 2017 +0800

    [#308] UrlUtil is unused (#325)

[33mcommit c3f8027f059c932c6bc6aded05897dd6eb8c087e[m
Author: Ka Yi <chua.kayi@yahoo.com.sg>
Date:   Wed Mar 8 21:22:16 2017 +0800

    [#296] CommandBox stays red even after correct input is entered (#298)

    After multiple failed commands are entered, the CommandBox continues
    showing the error style even after a successful command is entered.

    This is because each time a failed command is entered, a new copy of
    ERROR_STYLE_CLASS is appended, but when the successful command is
    entered, only one is removed, so at least one ERROR_STYLE_CLASS
    remains. Thus, the CommandBox shows the error style even though the
    latest command is successful.

    Let's teach CommandBox to add an ERROR_STYLE_CLASS for failed commands
    in CommandBox#setStyleToIndicateCommandFailure() only if the style
    class does not contain any. This ensures there is at most one
    ERROR_STYLE_CLASS at any point in time, so removing an
    ERROR_STYLE_CLASS for successful commands in
    CommandBox#setStyleToIndicateCommandSuccess() always works.

[33mcommit 65fdb4818f191c27f46846588172f644483718af[m
Merge: 2419c45 da90e68
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Mar 1 21:46:54 2017 +0800

    [#235] Parser and ArgumentTokenizer cleanups (#261)

    * ArgumentTokenizer: simplify getPreamble() return type
      from Optional<String> to String
    * ArgumentTokenizer: simplify getAllValues() return type
      from Optional<List<String>> to List<String>
    * ParserUtil: remove unnecessary regex usage
    * ParserUtil: remove unnecessary toSet()
    * FindCommandParser: remove unnecessary regex usage

[33mcommit 2419c45d61b3284e76510d0d99ed00f2f4ac899a[m
Merge: 17c1a61 0f027b4
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Mar 1 15:07:14 2017 +0800

    [#207] Add explicit reference to coding style guidelines in docs (#297)

[33mcommit 17c1a61e90087f942153ae13a7d5c84ec2fb1a2d[m
Merge: d741336 b87c361
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Mar 1 14:46:06 2017 +0800

    [#301] Blank person cards should not have alternating colours (#304)

    Blank PersonCard are still created in the panel even though they have
    no content. Normal formatting such as alternate row colors still apply
    to these blank personcards. This can be easily observed by
    increasing the window size and performing a search that only returns
    one or two person cards.

    Let's remove the alternating row colors for blank person card cells.

[33mcommit da90e68f0c36fe10bc114a862d06f4eb50e08798[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Sun Feb 12 16:00:07 2017 +0800

    FindCommandParser: remove unnecessary regex usage

    CliSyntax#KEYWORDS_ARGS_FORMAT is a regex that greedily grabs one or
    more characters, excluding any leading or trailing whitespaces. It is
    used with String#trim() to check that a string contains at least one
    non-whitespace character.

    It is unnecessarily complex as the same task could be accomplished by
    just using simple String utility methods. String#trim() is sufficient in
    removing leading and trailing whitespaces, and in combination with
    String#isEmpty(), can perform the same check.

    Let's use String utility methods instead.

[33mcommit 1d46f717fd7acb2fb5ef9948733e1747713cd89e[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Fri Jan 20 19:22:29 2017 +0800

    ParserUtil: remove unnecessary regex usage

    ParserUtil#INDEX_ARGS_FORMAT is a regex that greedily grabs one or more
    characters, excluding line terminators. It is used with String#trim() to
    check if a string is empty or contains at least one line terminator in
    between non-whitespace characters.

    It is unnecessary as the subsequent check using
    StringUtil#isUnsignedInteger() encompasses the above checks and more.

    Let's remove ParserUtil#INDEX_ARGS_FORMAT.

[33mcommit 21410adb16208a3802302b9dad91e94c8dda99fc[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Sat Jan 21 01:37:54 2017 +0800

    ParserUtil: remove unnecessary toSet()

    ParserUtil#toSet() converts a List<String> into Set<String>, ensuring
    the uniqueness of String elements in a collection.

    It is redundant code as it is superseded by the existing
    ParserUtil#parseTags() and UniqueTagList class.

    Let's remove toSet() and update the logic to make use of
    ParserUtil#parseTags() and UniqueTagList instead.

[33mcommit 46497dc8d01bcd726073ffa2895002c3c6f0ed90[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Wed Feb 1 20:32:14 2017 +0800

    ArgumentTokenizer: simplify getAllValues() return type

    ArgumentTokenizer#getAllValues() returns Optional<List<String>>.

    As lists have a well-understood representation of absence of a value
    i.e. empty lists, using Optionals is an unnecessary complication.

    Let's change ArgumentTokenizer#getAllValues() to return a List<String>
    instead.

[33mcommit 585b1cfc7423e63aadf15cb53ca787021ee2aa7c[m
Author: PierceAndy <pierceanderson.fu+github@gmail.com>
Date:   Wed Feb 1 20:05:32 2017 +0800

    ArgumentTokenizer: simplify getPreamble() return type

    ArgumentTokenizer#getPreamble() returns Optional<String>.

    As strings have a well-understood representation of absence of a value
    i.e. empty strings, using Optionals is an unnecessary complication.

    Let's change ArgumentTokenizer#getPreamble() to return a String instead.

[33mcommit 0f027b45600f074c676ec89bd1ab9e60d31e18f8[m
Author: Ka Yi <chua.kayi@yahoo.com.sg>
Date:   Wed Feb 22 00:22:57 2017 +0800

    DeveloperGuide: Add link to coding standards

    Students are instructed to follow the provided coding standards.
    However, there are no explicit references to the coding standards in
    the developer guide. This makes it inconvenient for developers who
    need to refer to the coding standards when coding. Furthermore, other
    developers who come across this repo may not know about the coding
    standards used in this project.

[33mcommit b87c361f399d735af3e9be9f9471bcd451521b16[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Feb 23 16:06:29 2017 +0800

    Remove alternating coloring for blank PersonCard cells

    Blank PersonCard are still created in the panel even though they have
    no content. Normal formatting such as alternate row colors still apply
    to these blank personcards. This can be easily observed by
    increasing the window size and performing a search that only returns
    one or two person cards.

    Let's remove the alternating row colors for blank person card cells.

[33mcommit d741336a16662b675c117ed2aa3ade11a934f24c[m
Merge: 1eeb6fb f8824a3
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sun Feb 19 15:10:20 2017 +0800

    [#222] Remove unused code in TestUtil (#290)

[33mcommit f8824a3658fb8224a028bb79dfea1ac3ca52a4c8[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sun Feb 12 19:19:39 2017 +0800

    TestUtil: Remove unused methods

[33mcommit 1eeb6fb0a75d11d317390588f6799edb52f33047[m
Merge: f40ee42 fae8700
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Feb 16 23:14:38 2017 +0800

    [#269] Add asciidoctor to Gradle (#274)

    GitHub Flavored Markdown does not support the specialized features that
    this project requires, such as use of colors and easy conversion to
    other file formats. AsciiDoc, like Markdown, uses a readable syntax
    that is easy to learn. It is also supported by GitHub preview. In
    addition, AsciiDoc supports more features, such as auto-numbering of
    sections, auto-generation of table of contents and admonition blocks.
    Styling is also possible using custom CSS stylesheets. Furthermore,
    AsciiDoc is designed to make it easy to translate documents to other
    formats, and Asciidoctor makes it simple for users to generate HTML
    files from asciidoc documents.

[33mcommit fae87009249fc5a0084ea0d4fd28d1d8bf312921[m
Author: Ka Yi <chua.kayi@yahoo.com.sg>
Date:   Fri Jan 20 01:09:26 2017 +0800

    Add Asciidoctor Gradle plugin

    GitHub Flavored Markdown does not support the specialized features that
    this project requires, such as use of colors and easy conversion to
    other file formats. AsciiDoc, like Markdown, uses a readable syntax
    that is easy to learn. It is also supported by GitHub preview. In
    addition, AsciiDoc supports more features, such as auto-numbering of
    sections, auto-generation of table of contents and admonition blocks.
    Styling is also possible using custom CSS stylesheets. Furthermore,
    AsciiDoc is designed to make it easy to translate documents to other
    formats, and Asciidoctor makes it simple for users to generate HTML
    files from asciidoc documents.

    Converting to PDF:

    While Asciidoctor supports conversion to PDF, Asciidoctor PDF is
    currently an alpha release and does not support useful features such as
    font colors. Styling must also be done separately in an Asciidoctor PDF
    theme file, which is different from the CSS used for HTML files.

    To convert documentation to PDF format, we suggest using the browser's
    'save as PDF' function on the generated HTML files instead.

    Stylesheets:

    asciidoctor.css is the default stylesheet by Asciidoctor and
    gh-pages.css is the customized version used by the documentation.
    Having our customizations in a separate file instead of editing the
    default stylesheet makes it easy for developers to swap in other
    stylesheets which import the default stylesheet, such as those available
    at https://github.com/darshandsoni/asciidoctor-skins.

    copyStylesheets Gradle task:

    Asciidoctor suggests using the resources method to copy additional
    resources (in this case, CSS stylesheets) to the build directory.
    However, this does not work as Asciidoctor tries to generate the
    HTML files before copying the resources, as discussed in
    https://github.com/asciidoctor/asciidoctor-gradle-plugin/issues/178.

    Let's create a copyStylesheets task to copy the necessary resources
    before running Asciidoctor instead, a workaround suggested in
    the issue mentioned above.

    Asciidoctor attributes:

    Even though all AsciiDoc files use the same images directory,
    imagesDir attribute must be set in each individual file instead of
    in Asciidoctor's attributes. Otherwise, GitHub preview wrongly
    links to image.png instead of images/image.png so images are not
    displayed in the preview.

[33mcommit f40ee42cb2e29a99c9c6b8757b64b0b0f4284d67[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 15 14:31:47 2017 +0800

    LearningOutcomes.md: fix minor typos

[33mcommit 3ba2795e39f61d0444be0c655d20bb33517622a6[m
Merge: aaff772 b2b386c
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 15 12:24:26 2017 +0800

    [#287] Document how to save project docs as pdf files (#288)

    The documentation files are written in Markdown and published to
    GitHub pages. However, PDF versions of the docs may be required, such
    as for providing offline access to documentation files.

    Let's update the developer guide to teach developers to use Chrome's
    'Save as PDF' option to convert the online documentation to PDF format.
    Chrome's 'Save as PDF' preserves the contents of HTML files well,
    including the hyperlinks, and is easy to use. Furthermore, Chrome is
    a commonly used web browser so developers are unlikely to have to
    install additional software.

[33mcommit b2b386cdbec459681b42191b9a1843c8a8d3e66c[m
Author: Ka Yi <chua.kayi@yahoo.com.sg>
Date:   Fri Feb 10 22:48:33 2017 +0800

    DeveloperGuide: add guide to convert docs to PDF

    The documentation files are written in Markdown and published to
    GitHub pages. However, PDF versions of the docs may be required, such
    as for providing offline access to documentation files.

    Let's update the developer guide to teach developers to use Chrome's
    'Save as PDF' option to convert the online documentation to PDF format.
    Chrome's 'Save as PDF' preserves the contents of HTML files well,
    including the hyperlinks, and is easy to use. Furthermore, Chrome is
    a commonly used web browser so developers are unlikely to have to
    install additional software.

[33mcommit aaff772f1989c11e294c264246da16453876bad1[m
Merge: 13e914d 9af3aed
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sun Feb 12 15:32:54 2017 +0800

    [#137] Split Parser into command-specific classes (#272)

    * 137-split-parsers:
      Update developer's documentation
      Extract FindCommandParser from Parser class
      Extract SelectCommandParser from Parser class
      Extract DeleteCommandParser from Parser class
      Extract EditCommandParser from Parser class
      Extract AddCommandParser from Parser class
      Extract common parser constants/methods to seperate classes

[33mcommit 9af3aed34f48ab4fd833226db0c9a547da7bbae1[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Wed Feb 1 21:49:19 2017 +0800

    Update developer's documentation

    This is to reflect the change in code structure in the Logic
    component due to the splitting of the parser components.

[33mcommit 2658dc4f45e44cf928ca006d7f486c31eb707d92[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Jan 26 18:00:58 2017 +0800

    Extract FindCommandParser from Parser class

    Parser class implements all different
    command parsers as private methods within the Parser class.
    Parser::parseCommand is responsible for performing an initial
    parsing on the given input string and from there determine
    the correct method to parse the String to.

    This causes the Parser file to become very long
    containing all command parser methods
    and their associated helper methods that is only utilized in that
    one method itself.

    The design can be improved by applying the Single Responsibility
    Principle as follows: limit the Parser's responsibility to determining
    which type of command is being parsed and move the responsibility
    of parsing each type of command to a separate *CommandParser class.

    As a step toward the design proposed above, let's move the functionality
    of parsing of the find command from Parser to a new
    FindCommandParser class.

[33mcommit 03097866de219843de84193b7319f071ed597cf3[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Jan 26 17:57:01 2017 +0800

    Extract SelectCommandParser from Parser class

    Parser class implements all different
    command parsers as private methods within the Parser class.
    Parser::parseCommand is responsible for performing an initial
    parsing on the given input string and from there determine
    the correct method to parse the String to.

    This causes the Parser file to become very long
    containing all command parser methods
    and their associated helper methods that is only utilized in that
    one method itself.

    The design can be improved by applying the Single Responsibility
    Principle as follows: limit the Parser's responsibility to determining
    which type of command is being parsed and move the responsibility
    of parsing each type of command to a separate *CommandParser class.

    As a step toward the design proposed above, let's move the functionality
    of parsing of the select command from Parser to a new
    SelectCommandParser class.

[33mcommit a67ac737a8a84dbcf1be1b582b9533596a49d285[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Jan 26 17:54:29 2017 +0800

    Extract DeleteCommandParser from Parser class

    Parser class implements all different
    command parsers as private methods within the Parser class.
    Parser::parseCommand is responsible for performing an initial
    parsing on the given input string and from there determine
    the correct method to parse the String to.

    This causes the Parser file to become very long
    containing all command parser methods
    and their associated helper methods that is only utilized in that
    one method itself.

    The design can be improved by applying the Single Responsibility
    Principle as follows: limit the Parser's responsibility to determining
    which type of command is being parsed and move the responsibility
    of parsing each type of command to a separate *CommandParser class.

    As a step toward the design proposed above, let's move the functionality
    of parsing of the delete command from Parser to a new
    DeleteCommandParser class.

[33mcommit d66527be4db0c692004c5f01530dd526fc6afc3e[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Thu Jan 26 17:49:17 2017 +0800

    Extract EditCommandParser from Parser class

    Parser class implements all different
    command parsers as private methods within the Parser class.
    Parser::parseCommand is responsible for performing an initial
    parsing on the given input string and from there determine
    the correct method to parse the String to.

    This causes the Parser file to become very long
    containing all command parser methods
    and their associated helper methods that is only utilized in that
    one method itself.

    The design can be improved by applying the Single Responsibility
    Principle as follows: limit the Parser's responsibility to determining
    which type of command is being parsed and move the responsibility
    of parsing each type of command to a separate *CommandParser class.

    As a step toward the design proposed above, let's move the functionality
    of parsing of the edit command from Parser to a new
    EditCommandParser class.

[33mcommit b443d880b041cabdbfdc6da7f82f7f520b1b3ef7[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sun Feb 5 20:25:06 2017 +0800

    Extract AddCommandParser from Parser class

    Parser class implements all different
    command parsers as private methods within the Parser class.
    Parser::parseCommand is responsible for performing an initial
    parsing on the given input string and from there determine
    the correct method to parse the String to.

    This causes the Parser file to become very long
    containing all command parser methods
    and their associated helper methods that is only utilized in that
    one method itself.

    The design can be improved by applying the Single Responsibility
    Principle as follows: limit the Parser's responsibility to determining
    which type of command is being parsed and move the responsibility
    of parsing each type of command to a separate *CommandParser class.

    As a step toward the design proposed above, let's move the functionality
    of parsing of the add command from Parser to a new
    AddCommandParser class.

[33mcommit f9cf9ade26595e3df33b1b4e9ad88d6cb6e2621b[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Sat Feb 11 09:20:43 2017 +0800

    Extract common parser constants/methods to seperate classes

    Parser class implements all different
    command parsers as private methods within the Parser class.
    Parser::parseCommand is responsible for performing an initial
    parsing on the given input string and from there determine
    the correct method to parse the String to.

    This causes the Parser file to become very long
    containing all command parser methods and their
    associated helper methods that is only utilized in that
    one method itself.

    The design can be improved by applying the Single Responsibility
    Principle as follows: limit the Parser's responsibility to determining
    which type of command is being parsed and move the responsibility
    of parsing each type of command to a separate *CommandParser class.

    However, this will result in bidirectional links between these various
    *CommandParser classes and the main Parser class because some
    of the constants and utility methods in Parser class will be used
    by the various *CommandParser classes as well.

    As a step toward the design proposed above, let's extract reusable
    constants into a new CliSyntax class and utility methods into a new
    ParserUtil class to prevent bidirectional dependencies between
    the Parser class and the proposed *CommandPraser classes.

[33mcommit 13e914d0558b8b2e402910002497651ae492b046[m
Merge: 2d4aa80 6f75b3d
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 8 18:24:02 2017 +0800

     [#172] Add unit tests for person's fields classes (#253)

    Fields of the Person class (Name, Address, etc.) are exercised
    using integration tests but not using unit tests.

    Add unit tests to cover classes used as fields of Person class.

[33mcommit 6f75b3dc92d0f659a752afe6823acee61779d184[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jan 16 20:33:38 2017 +0800

    Add unit tests for person's fields classes

    The person's fields classes (Phone, Email, Address, Name) are
    previously being tested indirectly by integration testing, through
    testing of the "Add" command, which happened to use these classes.

    Therefore, Add unit tests for them. By doing so, we  are able to test
    the validation code for these classes directly, and use inputs that
    were previously impossible to test in the integration testings (such
    as having a blank address with spaces: " ", which cannot be entered
    through the command box).

[33mcommit 4f04962a297a7b48af8e9c98bfae74f933e16232[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jan 16 20:38:13 2017 +0800

    Fix Name accepting blank names (spaces)

    The current regex allows space characters. However, this means that a
    string of whitespace characters (e.g. "         ") are permitted.

    Modify the regex such that blank strings (such as " ") are no longer
    allowed.

    An alternative would be to edit the validation function to check for
    the length of the trimmed string seperately (i.e. test.trim().length()
    == 0). However, that would not be elegant since we will now have two
    different things doing our validation (regex and the code checking
    length), which feels unnecessary compared to just using regex alone.

[33mcommit fedb4f9cf05844fc145e6b0d2b0c86c3787d2a93[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Mon Jan 16 20:36:42 2017 +0800

    Fix Address accepting blank addresses (spaces)

    The current regex is too flexible, as it allows any kind of characters,
    including a trailing of whitespace characters (e.g. "       ");

    Modify the regex, such that blank strings (including "") are no longer
    allowed.

    An alternative would be to edit the validation function to check for
    the length of the trimmed string seperately (i.e. test.trim().length()
    == 0). However, that would not be elegant since we will now have two
    different things doing our validation (regex and the code checking the
    length), which feels unnecessary compared to just using regex alone.

[33mcommit 2d4aa80ec142ce9c29935bfc68ce4e3ffa69ab5d[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 8 13:55:29 2017 +0800

    Revert "[#246] User/Dev Guide: ToC links broken"

    This reverts commit 1054d0d13f0d39a627db5bd53882bb4bdd162289.

    Fixing the ToC links in the .md version causes
    the links to break in the GitHub Pages version.
    Revert the fix because its more important for
    the links to work in the GitHub Pages version.

[33mcommit 1054d0d13f0d39a627db5bd53882bb4bdd162289[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 8 13:41:49 2017 +0800

    [#246] User/Dev Guide: ToC links broken

    Links in the ToC missing section numbers.

    Fixes #246

[33mcommit bd3ab6479dc1ce50d849254d5e25753720c474e7[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 8 13:31:59 2017 +0800

    Elevate heading level of 'Headless GUI Testing'

    Elevate to level 4 to avoid the heading appear too small

[33mcommit 8976f44fc8e1b48a2d37bed6657976f7400d8971[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Feb 8 13:29:15 2017 +0800

    Add missing blank line in dev guide

    Missing blank line before the bullet list makes the bullet
    list render incorrectly on GitHub pages

[33mcommit 2221d24f2e49a9ec8a9c0d45b9dcb03694d25b0f[m
Author: Edmund Mok <edmundmok@outlook.com>
Date:   Sun Feb 5 20:14:09 2017 +0800

    [#205] Reposition caret after an incorrect command  (#215)

    After an incorrect command is executed, the command box positions
    the caret at the beginning of the command.

    It is more intuitive if the caret remained in the same position as before.

    Retaining the caret at the same position after an incorrect command
    is harder than necessary because the Logic component uses events
    to notify other components of an incorrect command being executed.
    Exceptions are a more direct way to inform the caller the command
    is incorrect. Update Logic to use exceptions instead of events to handle
    incorrect commands. Update the command box to retain caret at the
    same position if the exception for an incorrect command is caught.

[33mcommit 974a908122ec0ad45c3e5584b56eaa3a799d90c4[m
Merge: 941d0af 821f5ad
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Feb 5 19:15:09 2017 +0800

     [#276] checkstyle: fix module name error (#279)

    Several existing enabled modules in our Checkstyle configuration file,
    such as "TypeNameCheck" and "ConstantNameCheck", are being silently
    ignored by the Eclipse Checkstyle Plugin.

    This is because given a module "FooCheck", Checkstyle recognizes both
    its short name ("Foo") and its fully qualified name ("FooCheck") as
    names of that module. However, the Eclipse Checkstyle Plugin only uses
    short name convention, and thus does not recognize modules that are
    being referred to by their full names.

    Fix this by modifying our Checkstyle configuration file to use the short
    names of these modules, so that both Checkstyle and the Eclipse
    Checkstyle Plugin will recognize them.

[33mcommit 821f5ad99b14c44e349d7bb708e891b19e6b5e48[m
Author: eugenepeh <e0012835@u.nus.edu>
Date:   Sun Jan 29 18:54:04 2017 +0800

    Make Eclipse Checkstyle Plugin recognizes all existing modules

    Several existing enabled modules in our Checkstyle configuration file,
    such as "TypeNameCheck" and "ConstantNameCheck", are being silently
    ignored by the Eclipse Checkstyle Plugin.

    This is because given a module "FooCheck", Checkstyle recognizes both
    its short name ("Foo") and its fully qualified name ("FooCheck") as
    names of that module. However, the Eclipse Checkstyle Plugin only uses
    short name convention, and thus does not recognize modules that are
    being referred to by their full names.

    Fix this by modifying our Checkstyle configuration file to use the short
    names of these modules, so that both Checkstyle and the Eclipse
    Checkstyle Plugin will recognize them.

[33mcommit 941d0afebe52dc6bd86b60bd4a11861f48273900[m
Merge: a6c0c98 4de6efb
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Feb 1 20:04:49 2017 +0800

    [#230] checkstyle: ensure consistent ordering of imports (#257)

    New checkstyle rule that checks for the order of import statements in
    Java files.

    * 230-checkstyle-import-order:
      Add import order check in checkstyle

[33mcommit 4de6efb2bd592149c5475e5d65899a17d67f16a2[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Thu Jan 19 09:57:08 2017 +0800

    Add import order check in checkstyle

    This new checkstyle rule ensures consistent ordering of imports,
    following the rules that the default Eclipse formatter uses.
    That means Eclipse IDE users will not need to perform any additional
    configuration to adhere to these new import ordering rules.

    We chose Eclipse's default rules over the default rules of other IDEs
    because we are using Eclipse as the primary IDE for CS2103, SE-EDU
    and TEAMMATES at the moment. However, when the time comes to
    switch to another IDE, we will need to update the checkstyle rules
    accordingly.

[33mcommit a6c0c981f15005501734ffde9c310dd0d3be2699[m
Merge: 9321a79 54eb8b4
Author: Paul Tan <pyokagan@gmail.com>
Date:   Tue Jan 31 14:57:05 2017 +0800

    CollectionUtil: refactor assertNoNullElements -> isAnyNull(Collection) (#278)

    Code quality improvements.

    CollectionUtil::assertNoNullElements() has been removed. Use
    CollectionUtil::isAnyNull() instead.

    * assertNoNullElements-fix:
      CollectionUtil: refactor assertNoNullElements -> isAnyNull(Collection)
      CollectionUtil: fix assertNoNullElements bug

[33mcommit 54eb8b42ba88f85a8305d78060ff0a58bd5a0d4a[m
Author: clarencechee <clarencechee94@gmail.com>
Date:   Sat Jan 14 21:53:54 2017 +0800

     CollectionUtil: refactor assertNoNullElements -> isAnyNull(Collection)

    We refactor the method to return boolean instead of void, shifting the
    assertion responsibility outwards to wherever this method is called.
    Forcing the explicit usage of the 'assert' keyword thus making it clearer
    that an assertion is actually happening.

    We also overload this method with isAnyNull(Varargs) due to the
    similarities of both methods.

[33mcommit 49ec595ad9161d4655de4ff23648f92333d83d02[m
Author: clarencechee <clarencechee94@gmail.com>
Date:   Mon Jan 30 20:56:55 2017 +0800

    CollectionUtil: fix assertNoNullElements bug

    assertNoNullElements isn't working as intended at all. The original
    intention of this method was to ensure each element of the given
    collection was non-null. However, by simply doing
    'assert !isAnyNull(Collection)', the collection is parsed as an Object,
    instead of an Object[]. Meaning it only checks if the collection
    reference is null rather than its actual elements.

[33mcommit 9321a79e2fc882fbfce56d31d2f8df32f11bd16c[m
Merge: da4dc8e 79fd6d0
Author: Paul Tan <pyokagan@gmail.com>
Date:   Mon Jan 30 00:26:06 2017 +0800

    [#229] checkstyle: ensure overloaded methods are grouped together (#251)

    Enable a new checkstyle rule to check that overloaded methods are
    grouped together.

    * 229-checkstyle-overloaded-methods-order:
      Check overloaded methods are grouped together in checkstyle

[33mcommit 79fd6d0bf024aa0ccded5f9bb8fd9459c25676ea[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Mon Jan 16 20:15:35 2017 +0800

    Check overloaded methods are grouped together in checkstyle

    This new checkstyle rule improves the readability of the code as it
    allows developers to see all the variations of a method at one place
    with no other code in between.

    However, note that there is a potential loophole in checkstyle
    OverloadMethodsDeclarationOrder module which permits out-of-order
    overloaded methods when they are separated by a nested class or
    interface.

    e.g. the following code in ModelManager.java will still pass the check,
    even though there is a nested interface between the two
    `updateFilteredPersonList()` method definitions:

        private void updateFilteredPersonList(Expression expression) {
            filteredPersons.setPredicate(expression::satisfies);
        }

        //========== Inner classes/interfaces ==================
        interface Expression {
            boolean satisfies(ReadOnlyPerson person);
            String toString();
        }

        public void updateFilteredPersonList(String keyword, boolean someRandomBool) {
            // do nothing
        }

[33mcommit da4dc8e78218b35ccf991108acf1c56ca8492f57[m
Merge: f74c40c 0940bf9
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Jan 25 22:14:13 2017 +0800

    [#252] checkstyle: check for unused import (#256)

    Our checkstyle configuration now checks for unused imports.

    * 252-checkstyle-unused-imports:
      Add UnusedImports check in checkstyle

[33mcommit 0940bf947c94bbdfb737cea191c2bd1c60a0ba10[m
Author: chao1995 <huangchao0825@gmail.com>
Date:   Thu Jan 19 09:03:40 2017 +0800

    Add UnusedImports check in checkstyle

    Unused imports are a code smell as they make it less clear which classes a
    Java file depends on. Our checkstyle configuration does not presently check
    for unused imports, so let's add an UsedImports check which does just that.

    There is already a slightly similarly-named check in our checkstyle.xml file
    called RedundantImport. Its name could mislead readers into thinking that it
    actually checks for unused imports as well, as an unused import could be
    considered to be "redundant". However, it doesn't actually do that. Because
    an import is redundant if
    1. It is a duplicate of another import.
    2. The class non-statically imported is from the java.lang package.
    3. The class non-statically imported is from the same package as the
       current package.

[33mcommit f74c40cb73cd505ba1d6540bd9361cab1369d830[m
Merge: 6ea90ae cbcd7b3
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Jan 24 15:26:24 2017 +0800

    [#204] Make Travis CI output less verbose (#258)

[33mcommit cbcd7b398f1067d3fa122278f86bb0031ff2e27d[m
Author: Tan Wang Leng <tanwangleng@outlook.com>
Date:   Thu Jan 19 22:41:32 2017 +0800

    Make Travis CI output less verbose

    Gradle utilises different levels for logging (see
    https://docs.gradle.org/current/userguide/logging.html).

    .travis.yml is set to execute gradle with '-i'. This means that log
    messages with 'INFO' level and above are printed to stdout, which is a
    more verbose level than the default.

    The reasons for using 'INFO' level are as follows:

      1. To ensure that the tests are actually running (instead of an empty
         Gradle task in its place).

      2. To determine which test stalled the CI (occasionally occurs due to
         either Travis issues or faulty tests).

    However, such detailed logging also generates a large quantity of
    logging information from non-test-runners, which pollutes the log and
    makes it extremely verbose without providing any additional useful
    diagnosis information for tests.

    As such, remove '-i' to disable 'INFO' logging level, and also modify
    build.gradle to ensure that the progress of the test runner is still
    being reported.

[33mcommit 6ea90ae48e2ce7534faba9851ead4b322a95c3d3[m
Merge: 8164678 4545d8f
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Jan 24 14:31:02 2017 +0800

    [#217] Update URL of help window (#259)

[33mcommit 4545d8f25ff8339d220071322196c70ebd0cbad3[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Fri Jan 20 11:22:00 2017 +0800

    Modify HelpWindow.java to point to the HTML user guide

    The current URL points to the GitHub repo view of our user guide,
    which contains several UI elements which makes it look less like a
    formal user guide document and more like a file in a Git repo.
    Furthermore, the new HTML user guide is more aesthetically
    pleasing and might encourage users to read on for more details.

[33mcommit 8164678f10e07049144c98acd52fc3572ad5c9a8[m
Merge: 0dd249a 8711079
Author: Paul Tan <pyokagan@gmail.com>
Date:   Thu Jan 19 18:53:01 2017 +0800

    [#184] Simplify construction of UiParts (#237)

    Simplification of the UiPart code. Instead of calling UiPartLoader
    methods, the UiPart base constructor is now in charge of loading the
    FXML file. The UiPartLoader is now unused and is thus removed.

    * 184-simplify-uipart:
      PersonListPanel: use FxViewUtil.applyAnchorBoundaryParameters()
      StatusBarFooter: rename addMainPane() to addToPlaceholder()
      DeveloperGuide: update Ui component info
      UiPart: remove deprecated construction methods
      MainWindow: migrate to use FXML loading constructor
      HelpWindow: migrate to use FXML loading constructor
      CommandBox: migrate to use FXML loading constructor
      StatusBarFooter: migrate to use FXML loading constructor
      ResultDisplay: migrate to use FXML loading constructor
      PersonCard: migrate to use FXML loading constructor
      PersonListPanel: migrate to use FXML loading constructor
      BrowserPanel: migrate to use FXML loading constructor
      UiPart: implement FXML loading constructor

[33mcommit 8711079d66e3cfd51e2835ecd9728cfc3d0c2719[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Jan 18 13:35:35 2017 +0800

    PersonListPanel: use FxViewUtil.applyAnchorBoundaryParameters()

    PersonListPanel sets the AnchorPane boundary parameters of its root VBox
    element directly in its FXML file, while our UI code usually uses
    FxViewUtil.applyAnchorBoundaryParameters() to set the AnchorPane
    boundary parameters instead.

    For consistency, make PersonListPanel use
    FxViewUtil.applyAnchorBoundaryParameters() as well.

[33mcommit 88b4c9abbd4687bf59544a4ef9b79b4eb9c86108[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Jan 18 13:38:49 2017 +0800

    StatusBarFooter: rename addMainPane() to addToPlaceholder()

    This is done for consistency with the naming conventions used in the UI
    code.

[33mcommit 2cb1e4ef7672b56e4a7599b1306f5970d8cffef6[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Jan 7 18:03:37 2017 +0800

    DeveloperGuide: update Ui component info

    UiPartLoader does not exist anymore. All UiParts can be directly
    constructed via `new SomeUiPart()`.

[33mcommit fa7dbdef60152365271b7fb2231fa1e97f266ca8[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 15:48:40 2016 +0800

    UiPart: remove deprecated construction methods

    These methods were marked as deprecated because UiParts which used them
    to construct themselves ended up having lots of boilerplate code. These
    UiParts have all been migrated to use the newer and better `UiPart(URL)`
    and `UiPart(String)` constructors.

    Now that no code is using all these deprecated methods any more, we can
    remove them.

[33mcommit 0c7cc550f88f6b21481e4c078dc0d08c40cbc834[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 15:47:44 2016 +0800

    MainWindow: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of MainWindow to use the new `UiPart(String)` FXML loading constructor.

[33mcommit dc69c618a1470a5efae330fb17b234e3e9cf6877[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 15:44:54 2016 +0800

    HelpWindow: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of HelpWindow to use the new `UiPart(String)` FXML loading constructor.

    While we are here, shave off a few lines of code by constructing the web
    browser directly in the FXML file.

[33mcommit 67be0359491387785849f434c4fd4e45006e47e3[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 15:26:53 2016 +0800

    CommandBox: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of CommandBox to use the new `UiPart(String)` FXML loading constructor.

[33mcommit e78d245a577cbe301bf59e2fd1e0a6d006f6345d[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 15:22:29 2016 +0800

    StatusBarFooter: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of StatusBarFooter to use the new `UiPart(String)` FXML loading
    constructor.

[33mcommit 4b229e3ada91eed6af32db7635ecb229c617d5ce[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 15:10:27 2016 +0800

    ResultDisplay: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of ResultDisplay to use the new `UiPart(String)` FXML loading
    constructor.

    While we are here, remove the unnecessary:

        mainPane.getChildren().add(resultDisplay);

    `mainPane` in this case refers to an AnchorPane within
    ResultDisplay.fxml:

        <AnchorPane fx:id="mainPane">
            <TextArea fx:id="resultDisplay" editable="false" styleClass="result-display"/>
        </AnchorPane>

    As can be seen, `resultDisplay` is already a child of `mainPane`, so the
    above code is essentially a no-op.

[33mcommit 443d6fa012adeffad8e7448e1d40d14fe15ce7c5[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 14:55:51 2016 +0800

    PersonCard: migrate to use FXML loading constructor

    UiPartLoader.initUiPart() is deprecated. Migrate the initialization code
    of PersonCard to use the new `UiPart(String)` FXML loading constructor.

[33mcommit 16ba2f9b9c6fe2813ba3f52b17d45190fea7a2cb[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 14:52:28 2016 +0800

    PersonListPanel: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of PersonListPanel to use the new `UiPart(String)` constructor.

[33mcommit 1da3e359b65879d0fde3b1c9849441087e1883d1[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 14:39:37 2016 +0800

    BrowserPanel: migrate to use FXML loading constructor

    UiPartLoader.loadUiPart() is deprecated. Migrate the initialization code
    of BrowserPanel to use the new `UiPart(String)` constructor.

[33mcommit 549e2ce6c770a17bdacfa82e2160b02853629f92[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Dec 21 15:38:15 2016 +0800

    UiPart: implement FXML loading constructor

    There's quite a lot of boilerplate involved if a developer wishes to
    implement a new UiPart. The developer needs to override:

    * `setNode()`

    * `getFxmlPath()`

    * potentially `setPlaceholder()`

    and think of what the sane thing is to do for each of these methods. In
    addition, to make the API pleasant to use, developers need to implement
    a static `load()` method. In that method, the developer needs to further
    decide which of the three overloaded `UiPartLoader::loadUiPart()`
    methods to call.

    The reason why so much boilerplate is required is because the current
    implementation, through `UiPartLoader`, places the responsibility of
    creating new `UiPart` instances (the controller) on the JavaFX
    FXMLLoader. However, FXMLLoader can only use the no-arg constructor of
    UiParts. As such, we need extra code to workaround this limitation in
    order to pass arguments into UiParts, leading to the above boilerplate
    code.

    To fix this problem, let's do two things:

    Firstly, we introduce a stricter definition of a UiPart: it contains a
    scene graph with a root node of a certain type T. This node can be
    retrieved with the new `getRoot()` getter.

    Secondly, we introduce new `UiPart(URL)` and `UiPart(String)`
    constructors. These UiPart constructors will construct the UiPart
    instance *first* before passing it to the FXMLLoader. In other words, we
    are now directly in control of our own constructors, which removes the
    need for the above boilerplate methods. A simple UiPart subclass would
    look like:

        public class NewUiPart extends UiPart<Pane> {
            private final Object arg;

            @FXML
            private TextBox myNode;

            public NewUiPart(Object arg) {
                super("NewUiPart.fxml");

                // We can now initialize final fields!
                this.arg = arg;

                // We can also access nodes in our FXML scene graph
                // immediately!
                myNode.setText("hello world!");
            }
        }

    Notice how short the code is, as well as how it does not need to
    implement a static `load()` method or depend on UiPartLoader.

    One problem is that FXMLLoader does not allow passing in a controller
    instance if the FXML file has a "fx:controller" attribute. Without this
    attribute, JavaFX FXML editors could potentially not be able to link the
    controller class with the FXML file[1], as they do not know what the
    controller class is. However, given the amount of code we save by
    adopting this architecture, this seems to be a worthwhile trade-off.

    There's lot of ui parts which currently depend on the old way of doing
    things, though. For now, let's mark the no-arg UiPart constructor, as
    well as the setNode(), getFxmlPath() and setPlaceholder() methods as
    deprecated. Convert setNode() and getFxmlPath() into non-abstract
    methods so that UiParts who have migrated over to the new API do not
    need to implement them.  Also, mark the UiPartLoader methods as
    deprecated since UiParts using the new API should not need to call them.

    In future commits, we will port each UiPart incrementally to use the new
    `UiPart(String)` constructor. When all code has been finally ported, we
    can then remove the deprecated code.

    While we are also here, let's add some tests for UiPart.

    [1] It should be noted, however, that Gluon Scene Builder (the usual
        FXML editor used by developers) does not actually link the FXML file
        with its controller class, so this commit may actually be a strict
        improvement with little drawbacks.

[33mcommit 0dd249a002f77bde21542f679f19f3d4bfa0444c[m
Author: Huang Chao <huangchao0825@gmail.com>
Date:   Wed Jan 18 12:42:59 2017 +0800

    [#228] checkstyle: check for star imports (#250)

    This new checkstyle rule prevents using '*' imports so that it is clear
    exactly which other classes a class depends on.

[33mcommit 97c34f2b96ec34b3afd93876f3eda12455759c91[m
Merge: bc2f546 2d65a0d
Author: Paul Tan <pyokagan@gmail.com>
Date:   Mon Jan 16 10:47:34 2017 +0800

    [#141] User can edit a person's details (#209)

    An "edit" command has been implemented which allows users to edit one or
    more fields of an existing person in the address book.

[33mcommit 2d65a0d3bcdcfbbb0350d2c8d740dfd798ec6e8e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Dec 26 19:20:00 2016 +0800

    update User Guide to include Edit Command

[33mcommit acc1c8798d14d16e38970376a88b6f04b405b588[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Sun Dec 11 09:23:01 2016 +0800

    create EditCommandTest

[33mcommit a791e8859cc79f4f4e7860cec73a128bb7c20a0c[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Wed Dec 21 14:27:50 2016 +0800

    teach Parser to parse EditCommand

[33mcommit a56fcb0ff747cf25c446f775cf66487cf46ed38e[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Mon Dec 26 14:48:48 2016 +0800

    create EditCommand

[33mcommit 1eb8b13812e55a0f7a43a8e733c30537b2338ed9[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Dec 13 13:54:33 2016 +0800

    teach classes in Model to execute edit

[33mcommit 6db34ed3eee573e74f245a3a5d84e21a34472061[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Dec 13 13:46:52 2016 +0800

    create isAnyPresent() method in CollectionUtil

[33mcommit 5b7c2449df37e09e5eac91df1a27ff531d2b0d31[m
Author: Zhi Yuan Yong <yongzhiyuan@u.nus.edu>
Date:   Tue Dec 13 12:52:44 2016 +0800

    make Person mutable

[33mcommit bc2f54675f66a410eea7f3338f09b125dfc573aa[m
Merge: 32643f6 f54a356
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Jan 15 12:17:30 2017 +0800

    [#60] Show some sample data when the app is run for the first time (#226)

    Objectives for showing sample data at first run:

    * to give new users some data to play around with from the very beginning.
    * to show new users the GUI in its full glory (instead of a blank list) so that it makes a good first impression.
      That means sample data should be well chosen to showcase our features in the best possible way

[33mcommit f54a35645e1cac9aa98babf8c78013c05a5bbe65[m
Author: Edmund Mok <edmundmok@outlook.com>
Date:   Tue Dec 20 22:24:17 2016 +0800

    Add test for sample data

[33mcommit 91b7c120cbff61826704cb3fcdd50167e4052688[m
Author: Edmund Mok <edmundmok@outlook.com>
Date:   Tue Dec 20 21:30:39 2016 +0800

    Initialize AddressBook with sample data if file does not exist

[33mcommit 32643f6b7435056071181de2bd34055bb3b05cc4[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Jan 13 20:04:16 2017 +0800

    Add more info on using pptx files for diagrams

[33mcommit 938adb3f65e0680913c63566102f6a887df56445[m
Merge: d782898 b97aa3e
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Jan 7 16:22:00 2017 +0800

    [#223] Resolve Eclipse warnings (#227)

[33mcommit b97aa3e0cdad1dee8d91747fc1c5193cfc23d485[m
Author: Edmund Mok <edmundmok@outlook.com>
Date:   Tue Dec 20 23:19:22 2016 +0800

    Resolve Eclipse warnings

[33mcommit d782898510a12b3b03b07848cb7a647f3076e241[m
Merge: e1cc235 9c29f8e
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Dec 31 17:25:58 2016 +0800

    [#195] Check for line endings in Travis CI (#238)

[33mcommit 9c29f8ed2c67b326b8bbeec88abe95b28bebbd57[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Dec 28 17:44:28 2016 +0800

    Document Travis CI repository-wide checks

[33mcommit 4e928d4d8b937a5a1f703134b2386e9e2c96d8fd[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Dec 28 00:33:02 2016 +0800

    Implement Travis CI trailing whitespace check

    While our checkstyle configuration already checks for trailing
    whitespace in our java files, it does not cover all text files in our
    repository. Notably: our documentation files and other configuration
    files such as `build.gradle`.

    While we could probably coax checkstyle and gradle to check for these
    files, it is much easier to just hook onto our existing "Travis CI
    checks" architecture to implement this check.

    Trailing whitespace should be considered an error, however we treat
    trailing whitespace in markdown (`*.md`) files as warnings instead to
    accomodate developers who prefer to edit documentation using the GitHub
    web interface which does not provide facilities to easily detect and
    remove trailing whitespace.

[33mcommit 8ee1731ffb32d3bf6f107ab24986b5ae286a783e[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Wed Dec 28 00:32:46 2016 +0800

    Fix "trailing whitespace" errors

[33mcommit 465cb6b67090605d8682735ae41ed5f00d64cede[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Tue Dec 27 17:03:30 2016 +0800

    Implement Travis CI line ending checks

    In our repository, we want:

    * All text files to use only LF ('\n') as their line endings. Not CRLF
      ('\r\n')

    * All text files to end with a newline (Newline at EOF).

    So, ideally, we should have checks that automatically check for these
    requirements in our repository.

    However, we can't impose these checks on all developers, namely Windows
    developers. They could be using either LF or CRLF (e.g. if the developer
    activated Git's core.autocrlf configuration). Even if we did, we can't
    guarantee that developers do not bypass these checks. As such, we have
    to implement these checks on the Travis CI level instead.

    The next question is how do we implement these checks. Checkstyle is
    already helping us with that, but it is not completely effective as it
    does not check *all* text files -- it only checks the source files which
    are used for compilation.  This means that it does not check things like
    resource files (CSS and FXML files), test data and documentation.

    While we could probably teach it to check all files, we meet another
    problem; Checkstyle does not know what a text file is. At best, we can
    only give it a filter of file extensions to check.

    On the other hand, Git knows the difference between text files and
    binary files. As such, let's implement some shell scripts that will use
    Git's facilities to implement our line ending checks on all text files.
    These checks will be run on Travis CI, thus guaranteeing that master
    will not have any more line ending problems.

    These checks are implemented in POSIX shell scripts so that Travis CI
    would not need to download any additional dependencies in order to run
    them. Furthermore, developers running Linux or Macs can also run them
    locally without downloading additional dependencies as well. Windows
    devs would be unable to run them, but then again these line ending
    checks are not useful to them because as mentioned above, Windows devs
    may be using CRLF line endings anyway.

[33mcommit 5318247b46485d8157265b0642de57189495e2a2[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Tue Dec 27 16:33:41 2016 +0800

    Fix "no newline at EOF" errors

[33mcommit e1cc235f159b1a358b364b4ccf1a0dbf8953a8e4[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 24 22:39:55 2016 +0800

    [#190] Make ReadOnlyAddressBook truly read-only (#199)

    * Remove redundant "get empty address book" methods

    It seems strange that we have AddressBook#getEmptyAddressBook() and
    TestUtil#generateEmptyAddressBook() methods, when a simple
    `new AddressBook()` will give us what we want.

    * Fully encapsulate UniquePersonList and UniqueTagList within AddressBook

    ReadOnlyAddressBook declares the following methods:

    * `UniqueTagList getUniqueTagList();`

    * `List<Tag> getTagList();`

    * `UniquePersonList getUniquePersonList();`

    * `List<ReadOnlyPerson> getPersonList();`

    As we can see, there is some redundancy; both `getUniqueTagList()` and
    `getTagList()` conceptually do the same thing, and both
    `getUniquePersonList()` and `getPersonList()` conceptually do
    the same thing as well.

    So, to simplify the API we need to pick one set of APIs: either the ones
    that return `UniqueXList`, or the ones that return `List<X>`.

    Going with the API that returns `List<X>` is more beneficial than
    `UniqueXList`: Lists are widely used throughout our code and the
    standard library, and thus returning a list would be much more
    convenient for developers. `UniquePersonList` and `UniqueTagList`, on
    the other hand, only implement the `Iterable` interface, and are thus
    slightly more annoying to write code with.

    However, there is a deeper problem as well: `UniquePersonList` and
    `UniqueTagList` both contain mutating methods, which violates the
    contract of `ReadOnlyAddressBook` to provide a read-only view to the
    address book. We could solve this by introducing
    `ReadOnlyUniquePersonList` and `ReadOnlyUniqueTagList` interfaces, but
    as argued above, by virtue of not implementing the `List`
    interface these objects are more annoying to deal with and thus it is
    likely better to not return them at all.

    As such, this commit removes the `getUniqueTagList()` and
    `getUniquePersonList()` methods. In addition, we also remove all of the
    methods of `AddressBook` that take a `UniquePersonList` or
    `UniqueTagList`, thus fully encapsulating these classes within
    `AddressBook`. This not only solves the contract violation problem as
    discussed above, it also reduces coupling as users will no longer need
    to depend directly on `UniquePersonList` and `UniqueTagList` any more.

    * ModelManager: merge two similar constructors

    Both ModelManager(AddressBook, UserPrefs) and
    ModelManager(ReadOnlyAddressBook, UserPrefs) both do exactly the same
    thing. Let's DRY up the code by merging them into one single
    constructor.

    The author notes that the `userPrefs` argument is currently not even
    used. However, fixing this is outside the scope of this commit.

    * AddressBook: replace getPersons() with getPersonList()

    ReadOnlyAddressBook has a getPersonList() method which returns its list
    of persons as a List<ReadOnlyPerson>

    AddressBook has a getPersons() method which returns its list of persons
    as an ObservableList<Person>.

    Simplify the API by merging these methods together, by making
    getPersonList() return an ObservableList<ReadOnlyPerson> and removing
    getPersons().

    * ReadOnlyAddressBook: make getTagList() return an ObservableList

    Even though there are currently no callers that require the return value
    to be an ObservableList, this is still done for consistency with
    getPersonList() and to make it easier to implement future UI features
    such as a listing of all tags.

    * fixup! Fully encapsulate UniquePersonList and UniqueTagList within AddressBook

    * fixup! Fully encapsulate UniquePersonList and UniqueTagList within AddressBook

[33mcommit f48f92181a328fb7cb89a1165824c8d2e7bb360b[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Fri Dec 23 22:07:31 2016 +0800

    [#221] Rework how TypicalTestPersons exposes its persons (#224)

    * TypicalTestPersons: remove repetition of typical persons list

    The list of typical persons is repeated in
    loadAddressBookWithSampleData() and getTypicalPersons(). DRY up the code
    by making getTypicalPersons() the authoritative source.

    * TypicalTestPersons: make TestPerson fields non-static

    Throughout the code base, TypicalTestPersons is typically used in the
    following fashion so that tests can access the test persons using a
    shorter variable name, e.g.:

        TypicalTestPersons td = new TypicalTestPersons();
        td.alice, td.benson etc.

    However, with such code, Eclipse will give the following warning:

        The static field TypicalTestPersons.alice should be accessed in a
        static way.

    This is because these TestPerson fields are static. This is problematic
    because these fields can be accessed without first constructing a
    TypicalTestPersons object (e.g. with `TypicalTestPersons.alice`,
    `TypicalTestPersons.benson` etc.), which could potentially lead to
    NullPointerExceptions (if a TypicalTestPersons object was not
    constructed yet) or state leaks (if a test modifies the TestPersons)
    which are hard to debug.

    As such, let's make these TestPerson fields non-static.

[33mcommit e280bbdd7add1bdc32eda889b2df1541a2a667fb[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Dec 23 13:55:06 2016 +0800

    [#236] Reverse #161 (Include test code in coverage analysis)

[33mcommit 15d91fd909ad422aaa0cc13039cbb297c199b448[m
Author: zzzzwen <zhiwen.song.loveslife@gmail.com>
Date:   Thu Dec 22 20:22:02 2016 +0800

    [#233] Add unit test for CollectionUtil class (#234)

    * Add unit test for CollectionUtil class

    * Update comments

[33mcommit df3e2ca0fca50e31ed5d1d5615ea5ae2047c166f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 19:04:29 2016 +0800

    Set theme jekyll-theme-cayman

[33mcommit 6ca9b47712d7087b7ce708485deb602b53a1bf01[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 19:18:35 2016 +0800

    Fix GitHub page rendering in LearningOutcomes.md

[33mcommit a8493447cec673de1c54f2f375ce7253a76f44c1[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 19:10:11 2016 +0800

    Fix github page rendering in User Guide

[33mcommit b7cd36fb51819d806f9c731ca4d05242bf982cec[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 17:57:50 2016 +0800

    Fix GitHub page rendering of Dev Guide

[33mcommit 7b1fc01915cbbec4318217496281325cf27bc4a3[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 17:08:05 2016 +0800

    Refine NFRs in Dev Guide

[33mcommit ee34067fad658c121745a87e31bd177a0ce51291[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 17:00:47 2016 +0800

    Add template for Dev Guide: Product Survey

[33mcommit cbf763bf0daa95e370ce3299eb0152fd8617b427[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 16:54:45 2016 +0800

    Add authors to Dev Guide sections to be written individually

[33mcommit 4bc46893c7d17b28c317c39492d046c86c25a7ad[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 15:26:22 2016 +0800

    Rephrase method header comments to follow the coding style

[33mcommit 7195389ddd0cbdc4956b4baefa2a8da61a25542a[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 14:47:03 2016 +0800

    Add section numbers to the user guide

[33mcommit eaf2f21193a3256de70e0d5942b4341e34d05206[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 14:21:37 2016 +0800

    Add captions for Dev Guide diagrams

[33mcommit a8198d59f47468b83c73d79cc33b788abe0f9c6d[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Dec 22 13:59:59 2016 +0800

    Add section numbers to dev guide

[33mcommit d43d6cf8bbc5c3e3868f19c6bd8fba802619716b[m
Author: MightyCupcakes <gohydj2003@gmail.com>
Date:   Wed Dec 21 00:11:06 2016 +0800

    [#219] Make `GuiHandle::getNode()` return a `<T extends Node> T` (#225)

    * Modify GuiHandle::getNode() return type

    Also removed type-castings on calls to this function in GUIHandles

    * Refactor codes in GUIHandler to ultilise the new getNode function

    * Modify GuiHandle::getNode() to use query instead of its tryQuery counterpart

    * Remove cast

    * Remove unused method

[33mcommit bd02cb898e196560acfbdc98fbacaf333ed08057[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Dec 20 21:46:51 2016 +0800

    Add AppVeyor badge

[33mcommit 04f0810c304e6a424dcd1b18eb1fb8ffd23ee7e2[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Tue Dec 20 21:06:28 2016 +0800

    [#192] Set Up AppVeyor CI (#218)

    AppVeyor[1] is a continuous integration service used to build and test
    projects on a Windows VM. Adding AppVeyor support to this project will
    allow us to easily ensure that our tests do not break on Windows.

    Add an appveyor.yml file that will teach AppVeyor how to build this
    project and run its tests.

    Update our documentation to explain to developers how to set up AppVeyor
    on their own repositories.

    For now, we will run our tests with 64-bit Java only, since the project
    does not use any native libraries and thus is unlikely to have any
    architecture-specific bugs. In the future, should we use any native
    libraries, the appveyor.yml file should be updated to run our tests on
    both 32-bit and 64-bit Java.

    [1] https://www.appveyor.com/

[33mcommit 311ab3c0ccd4d6e49d81234e6d8fe42646e3c834[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Dec 18 18:13:33 2016 +0800

    Add additional info to LO-CodeCoverage

[33mcommit c557d20f894eec40b3eed690a91a0fde9f6182d1[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Sun Dec 18 18:09:20 2016 +0800

    [161] Include test code in coverage analysis

[33mcommit 979e68098b5f3a57d739cdfbc5f43e6fd1ebb048[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Dec 18 18:08:31 2016 +0800

    Add tip about using pptx files to create diagrams

[33mcommit 6cab4c4b826af8d8efc52c768f893d4a0cad89c5[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Dec 18 17:18:45 2016 +0800

    Set theme jekyll-theme-minimal

[33mcommit ce4104b2c15037c0ddf0a4e138a79813d7a480af[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Dec 18 17:16:46 2016 +0800

    Set theme jekyll-theme-tactile

[33mcommit 0c529e619ae7c7166599a8ca8777560b6e183ac9[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Dec 18 17:14:42 2016 +0800

    Set theme jekyll-theme-cayman

[33mcommit d2d6c5522cb94f5e9dea78c297fa254806925901[m
Author: Huang Chao <huangchao0825@gmail.com>
Date:   Sun Dec 18 16:38:16 2016 +0800

    [#149] Support F1 accelerator even when the focus is not in the list (#210)

[33mcommit d1d17d8b8f5caa337653ab376411c27110303e40[m
Author: Edmund Mok <edmundmok@outlook.com>
Date:   Sun Dec 18 16:29:19 2016 +0800

    [#173] Add background color to tags (#200)

[33mcommit 38a52f5ad5e1bb97574f38950aa3b1246cc3b469[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Dec 14 15:39:27 2016 +0800

    Move page title to the top of README

[33mcommit 845249d099d355a00bb33922e1a379033b0006dc[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Tue Dec 13 00:47:47 2016 +0700

    [#186] Construct BrowserPanel in FXML (#208)

    * Construct BrowserPanel using FXML

    The DeveloperGuide states that the layout of individual UiParts are
    specified in matching `.fxml` files. e.g. The layout of
    `MainWindow.java` is specified in `MainWindow.fxml`.

    While this is true for almost all UiParts, there is one oddball UiPart
    that does not have a corresponding `.fxml` file -- BrowserPanel.

    For consistency with the rest of the UiParts, let's construct the
    BrowserPanel using FXML rather than using code.

    * Remove DefaultBrowserPlaceHolderScreen.fxml

    It is not being used at all.

[33mcommit e68f4529ea42ac5929472b76fbb4a7bf9e8cbbf2[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 10 21:53:24 2016 +0700

    checkstyle: ensure curly brackets have whitespace around them #181 (#182)

    * codestyle: ensure curly brackets are separated by whitespace

    The Java coding standard[1] requires that curly brackets ({}) be
    surrounded by whitespace.

    However, there are several violations of this requirement in the code
    base. e.g.

        protected void raise(BaseEvent event){
        -------------------------------------^
                            Space required before '{'

    Fix all of these code style violations.

    [1] https://oss-generic.github.io/process/codingstandards/coding-standards-java.html#methods

    * checkstyle: ensure curly brackets have whitespace around them

    There used to be methods in the code base where the curly brackets ({})
    are not separated by whitespace:

        protected void raise(BaseEvent event){
        -------------------------------------^
                            Space required before '{'

    Our checkstyle configuration failed to catch these errors because we did
    not tell checkstyle to check for the LCURLY, RCURLY and SLIST (statement
    list) tokens. Fix this in the checkstyle config file so that such code
    style violations will not happen again.

[33mcommit e088d3dd380e3f58ef7153611d817250d2cef333[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 10 21:52:42 2016 +0700

    checkstyle: accept LF, CR or CRLF as line endings (#194)

    Checking out this repo on a Windows machine with a vanilla Git config,
    then running `gradlew.bat checkstyleMain` gives the following errors:

        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\MainApp.java:0: File does not end with a newline. [NewlineAtEndOfF
        ile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\ComponentManager.java:0: File does not end with a new
        line. [NewlineAtEndOfFile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\Config.java:0: File does not end with a newline. [New
        lineAtEndOfFile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\EventsCenter.java:0: File does not end with a newline
        . [NewlineAtEndOfFile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\GuiSettings.java:0: File does not end with a newline.
         [NewlineAtEndOfFile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\LogsCenter.java:0: File does not end with a newline.
        [NewlineAtEndOfFile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\Messages.java:0: File does not end with a newline. [N
        ewlineAtEndOfFile]
        [ant:checkstyle] [ERROR] C:\Users\pyokagan\pyk\addressbook-level4\src\main\java\
        seedu\address\commons\core\UnmodifiableObservableList.java:0: File does not end
        with a newline. [NewlineAtEndOfFile]
        ...etc

    This goes on for every single Java file.

    This is because this repo's files uses LF as the line separator.
    However, the default "lineSeparator" value of the "NewlineAtEndOfFile"
    check is CRLF on Windows[1], hence these errors.

    One may argue that we could switch on `core.autocrlf` in Git, which
    would tell Git to automatically convert all LF line endings to CRLF,
    thus avoiding this problem. However, this not only places an additional
    burden on Windows users to configure Git properly, it also does not
    handle the use cases where a developer is not using Git. The developer
    may, for example, instead get hold of the repo by downloading the ZIP
    file using Github's "Download as ZIP"[2] functionality, and will thus
    still have this problem as the downloaded ZIP contents will still
    contain LF line endings.

    Thus, we should either switch the "lineSeparator" property to "lf",
    accepting only LF line endings, or "lf_cr_crlf", accepting LF, CR or
    CRLF line endings. (Checkstyle does not support just LF and CRLF only)

    However, some developers may have `core.autocrlf` accidentally set, or
    may even prefer to use CRLF line endings in their working copy. As such,
    let's go the route of allowing LF, CR or CRLF as line endings.

    [1] http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile
    [2] https://github.com/se-edu/addressbook-level4/archive/master.zip

[33mcommit ba0900e84dd5ca552cd93a6f6c10634bbcf56426[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Sat Dec 10 20:52:36 2016 +0700

    [188] Construct StatusBarFooter in FXML fully

    StatusBarFooter currently constructs and sets up its StatusBar controls
    using pure code.

    The StatusBar control is actually a real control that can be initialized
    directly in the FXML file. We can avoid placeholder elements and make
    things simpler by just doing that.

    Now, one may think: "This means Scene Builder cannot edit this FXML file
    any more!", since the StatusBar control comes from controlsfx, which is
    not supported by Scene Builder by default. However,

    1. Scene Builder can actually be configured[1] to support the custom
       controls from controlsfx, allowing it to edit the FXML file.

    2. Having too many placeholder nodes, and constructing the actual scene
       graph in code, kind of defeats the advantage of FXML which is to
       construct the scene graph declaratively without code.

    [1] http://stackoverflow.com/a/30078204

[33mcommit 8d9ff226f33c05a1acac43e611d94220c089d8f8[m
Author: Jia Yee <jiayeerawr@gmail.com>
Date:   Fri Dec 9 18:05:18 2016 +0700

    Correct typos and grammatical errors in DG (#198)

[33mcommit 7ff3ad82caaf32e71def3d26f133c1152cad0ac6[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Thu Dec 8 19:10:58 2016 +0800

     checkstyle: check for trailing whitespace  #179 (#180)

    * codestyle: remove trailing whitespace

    Some lines in the code look like an empty line, but actually contain
    spaces.

    To be consistent with the rest of the code, let's make sure all empty
    lines are actually empty.

    * checkstyle: check for trailing whitespace

    To ensure that no more trailing whitespace is introduced into our code
    base, add a check for it.

[33mcommit 6c99bdbd9ba4aac9c64643106428409cf0d769b7[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Thu Dec 8 19:10:38 2016 +0800

    build.gradle: add `run` and `runShadow` tasks (#178)

    The `run` and `runShadow` tasks provide a convenient way for developers
    to run the built application from its *.class files or the built fat JAR
    respectively.

    This is accomplished using the application plugin[1] which implements
    the 'run' task.

    The shadow plugin, which we already use, will automatically detect the
    `application` plugin and will integrate with it[2], providing the
    `runShadow` task. It also knows that `mainClassName` should be used
    as the "Main-Class" of the JAR manifest, so we don't need to specify
    that anymore.

    We add the `mainClassName` and `plugin` lines OUTSIDE of the
    `allprojects` block because the question of "which class should be run"
    is Gradle project-specific and only applicable to the root project.

    [1] https://docs.gradle.org/current/userguide/application_plugin.html
    [2] http://imperceptiblethoughts.com/shadow/#integrating_with_application_plugin

[33mcommit 4b99eb594378e44bae3dcf454c2b94cd2215d183[m
Author: Paul Tan <pyokagan@gmail.com>
Date:   Fri Dec 2 21:37:11 2016 +0800

    [183] UiParts should not store a reference to the primaryStage

    * UiPart: move setIcon() into MainWindow

    UiPart::setIcon() is only used by MainWindow. Furthermore, UiParts
    should not be allowed to change the primary stage's icon at their whim
    and fancy, as it may lead to multiple UiParts conflicting with each
    other because they all want to set the primary stage's icons.

    So, make it clear that only MainWindow is allowed to do this by moving
    UiPart::setIcon() into MainWindow, and making it private.

    * UiPart: move setIcon() into FxViewUtil

    UiPart::setIcon() does not depend on any internal data of UiPart, and
    thus is better suited to be in an external utility class as a static
    method. This is done to make it clear that calling setIcon() will not
    modify the state of any objects, besides the Stage passed in as an
    argument.

    * FxViewUtil: rename setIcon() to setStageIcon()

    This is done to make it clear that the method operates on a Stage.

    * UiPart: push down primaryStage

    Currently, all UiParts store a reference to their primaryStage, which
    means that they can modify the primaryStage at their own whim and fancy.

    We want to prevent that -- UiParts should not be able to access the
    primaryStage as it makes it hard to reason about which UiPart is
    controlling the primaryStage and which is not. As such, we want to
    remove the reference to the primaryStage from all UiParts.

    Of all the UiParts, we note that only MainWindow requires a reference to
    the primaryStage. All other UiParts do not, and SHOULD NOT, keep a
    reference to the primaryStage.

    So, we push down the `primaryStage` field from UiPart to MainWindow
    only. All other UiParts thus effectively lose access to the
    primaryStage, which is a good thing for encapsulation.

    * UiPartLoader: rename loadUiPart() to initUiPart()

    All other variants of loadUiPart() will reconstruct the UiPart based on
    the value of "fx:controller" in its FXML file.

    Only loadUiPart(T seedUiPart) does not -- it simply sets up the FXML
    scene graph using the existing UiPart object provided.

    To highlight the difference in behaviour of this method from the others,
    rename this method to `initUiPart()`.

    * UiPartLoader: add single argument variant of loadUiPart()

[33mcommit 61b1f6fa5d259677efcd8df61b73b7569b7d5715[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Nov 19 14:31:05 2016 +0800

    Update Model class diagram to remove Person - - > Tag

[33mcommit a85d69c20af37b762f7242de6368aa28eb9f8568[m
Author: Leow Yijin <leowyijin@gmail.com>
Date:   Sun Oct 23 23:29:33 2016 +0800

    Fixes #165 : AB comparison ignores order of tags

[33mcommit d6ade39ab6da799f0357b2f9477addd76f2f3942[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Sat Oct 22 17:07:07 2016 +0800

    [#156] Document checkstyle use (#157)

    * Added checkstyle plugin for eclipse and add some documentation on how to use it.

    * Attempted to fix invalid values in checkstyle configuration. Added more detailed instructions to setup checkstyle after project import.

    * Added localised checkstyle-related files to gitignore.

    * Removed eclipse plugin settings files.

    * Added tip to click on the text again after selection.

[33mcommit 29ab5fddbadc885313b055194fcd22c10af5d08d[m
Author: Akshay Narayan <okkhoy@gmail.com>
Date:   Fri Oct 21 17:07:20 2016 +0800

    [#163] fix typo in developer guide (#164)

[33mcommit 067d8f3b475e556599b6f77120a36d4ecb6a7947[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 20 17:30:50 2016 +0800

    Add examples to command summary

[33mcommit c2f456d30821125c38eb92610b4c8a5a7338237e[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 20:01:03 2016 +0800

    Move inner class to bottom

[33mcommit b4aded19f02fc030e5d1f33a5958e3410df7b33b[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 19:56:29 2016 +0800

    Remove unused import

[33mcommit 05e3776752a8d5d68b99c3d80f4204fae251ba0c[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 19:55:07 2016 +0800

    Fix typo in StorageManagerTest

[33mcommit 1626849824fd7aeb1db1a568c99c4a532af1f479[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 19:53:55 2016 +0800

    Fix typo in method name

[33mcommit d8839ef9367a5f3f94f2f6f2d0abc74e24b56e7f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 19:41:33 2016 +0800

    Move inner classes to the bottom

[33mcommit 8402fb9147fb7e7873f8f3f567651f8f24cfb92f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 19:36:44 2016 +0800

    Removed redundant default constructor

[33mcommit 9f70ed17db8f90b639905ef08b92d3bd8c52ee75[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 19:20:12 2016 +0800

    [#159] Remove non-static initializers

    Remove non-static initializers except one (keep one as an example)

[33mcommit a6457927e1d5842ebea5332c7d6c47fb6612d4be[m
Author: Leow Yijin <leowyijin@gmail.com>
Date:   Wed Oct 19 16:40:23 2016 +0800

    [#87] Increase encapsulation of UniquePersonList (#162)

    * renamed method for upl and utl

    * fixed storage to use xml adapted tags

    * fixed failing tests and RE-ENFORCED CONSTRAINTS PLEASE STOP BREAKING THIS

    * trim unused code

    * shifted inner classes to bottom

[33mcommit 11d6f54eb698d86600b7d3c1d94ed081c92eacfb[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 14:42:42 2016 +0800

    Update LO-CodeReview

[33mcommit 8e2cf2b28294c2c7d66d0e4057ae07228af1d2f9[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 19 14:29:13 2016 +0800

    Add LO-CodeReview

[33mcommit b12de5a4f66aebfe511148b4bbc43a61e89aa265[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Oct 18 19:59:05 2016 +0800

    Add missing link in LO ToC

[33mcommit 38cfb097d720e083073c0deb041c129bd250f4bd[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Oct 17 17:52:42 2016 +0800

    Add questions to LO-TestCaseDesignHeuristics

[33mcommit 1bae855e638bb022e27a7af44d78e3edc222ce64[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 23:51:42 2016 +0800

    Fix code style warnings by codacy

[33mcommit 5c44a011d18b6e2ade0f09c65c9d888991accdfe[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 23:32:12 2016 +0800

    Add codacy badge

[33mcommit 428a0db8de463902fed14c37fb931902f4de2caf[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 23:10:51 2016 +0800

    Fix more PMD warnings

[33mcommit 62775f89d057403a684d87157d0da1c399dcb446[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 22:59:10 2016 +0800

    Fix PMD warnings

[33mcommit e2e64653bf90843e1d770da70b0f1a623b5fdd91[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 22:50:29 2016 +0800

    Eliminate reassigning parameters

[33mcommit 8fc301f91dffddfd06d812c589fad4fd2858e699[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 22:41:09 2016 +0800

    Remove unused constructors

[33mcommit 2e214de6f0f3953db8963ce5da7840204dec0878[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 20:08:35 2016 +0800

    [155] Split Diagrams.pptx file

    Fixes #155

[33mcommit b3dd6334a0a4abb1353e08a238880dbde5cab94f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 19:44:27 2016 +0800

    Add LO-StaticAnalysis

[33mcommit 68425842a8ac50d7ee772b2fb6396d4e3ff75b92[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 19:06:08 2016 +0800

    Add LO-DesignPatterns

[33mcommit fe8f137369db6548c4bfa59aa6da80632b8da5ae[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 18:11:38 2016 +0800

    Add LO-AutomatedGuiTesting

[33mcommit 0f92d5f96587a095ca19e5089a94be6d128e1734[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 17:55:09 2016 +0800

    Add LO-SystemTesting

[33mcommit c73bd06b3eaee4725dbadaf36edc5d23f82459b6[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 17:44:44 2016 +0800

    Fix checkstyle warning for Parser

[33mcommit d9831a20d159837733146de19454d2e4ac741f03[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Oct 16 17:39:57 2016 +0800

    Add LO-IntegrationTests

[33mcommit a28e9892d5185970098181ecf4dcf93c41815b1c[m
Author: Thien Nguyen <thiennguyen1993@gmail.com>
Date:   Sun Oct 16 13:30:10 2016 +0800

    [138] User can add email, address, tags in any order

[33mcommit 2034f1740c8d85b01835ec7241743c5c507d9935[m
Author: Joshua Lee <me@jolly.sg>
Date:   Sat Oct 15 15:39:02 2016 +0800

    [91] Separate CommandBox and ResultsDisplay

    Separate CommandBox and ResultsDisplay #91

[33mcommit 1927239e91a307bea7821f9ca5b96c5debf95601[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 15:18:31 2016 +0800

    Fix link to StringUtil

[33mcommit ba7205071e402ab4e7b2035f23f5ae1b502d3b5f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 15:16:46 2016 +0800

    Refine LO-TestCaseDesignHeuristics

[33mcommit daa496f6efac093e566451e6a2401739fdfb38f6[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 14:17:31 2016 +0800

    Fix broken link in LOs

[33mcommit 9941eabb4bec0b081212312ba86e64a4608c5010[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 14:14:36 2016 +0800

    Add  LO-TestCaseDesignHeuristics

[33mcommit 7b432582f6d4bd2cf8344bc8d8f01de80da0a474[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 13:08:52 2016 +0800

    Fix checkstyle problems

[33mcommit 8dd845ff7ad1762b8cba9cf00c17731f4815f1f6[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 12:47:27 2016 +0800

    Optimize StringUtil::containsWordIgnoreCase

[33mcommit 38a5a4dd871a6f58c673131992d68b9675ff6fba[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 13 09:53:08 2016 +0800

    Add tests for StringUtil::containsWordIgnoreCase

[33mcommit 5a6f6498876b842202966249512e1a24d347311d[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Wed Oct 12 23:57:24 2016 +0800

    [50] Set up check style

[33mcommit 7359b0bc913aeaee57b5863a12d562a418f07e17[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 12 15:16:32 2016 +0800

    Add test case design info to StringUtilTest::isUnsignedPositiveInteger

[33mcommit 831c819aacea622f5f2245a97beb4c1d53d75836[m
Author: You Liang <youliang@u.nus.edu>
Date:   Wed Oct 12 16:36:29 2016 +0800

    [133] Add a GUI test to test the error dialog

    * Added test case for error dialog.

    * fix typo

    * fix typos

    * change to getNode

    * renamed method names and add in comments

[33mcommit 4e2f1695f401f5e06f7652af54007fb51034b7a7[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 12 14:53:15 2016 +0800

    Add LO-CodeCoverage

[33mcommit 7c481930df6a69fb6a08a036b9e4ee0bed6135bc[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 12 14:22:02 2016 +0800

    Fix broken link to LO-DefensiveCoding

[33mcommit ef2543e16c999b3b647731410bf0495513d83bec[m
Author: Joshua Lee <me@jolly.sg>
Date:   Fri Oct 7 17:34:46 2016 +0800

    [95] Reduce duplication between ConfigUtil and JsonUserPrefsStorage

[33mcommit 76463e67b1bd1bd644a5d9d98197eb5e59425fc1[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Oct 6 19:10:09 2016 +0800

    Fix broken link in Dev Guide ToC

[33mcommit 386c3c108ff4a554d43a8ad38b8be6d56f6d9fcc[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 5 15:11:57 2016 +0800

    Add troubleshooting tips for tests

[33mcommit 239bcc15a1d244a1655b06b9f68e645176e310e8[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Oct 5 14:31:36 2016 +0800

    Add troubleshooting help to DevGuide

[33mcommit 0184f84e138a6b2e41b719be12846e5715c6159e[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Oct 4 14:51:57 2016 +0800

    Remove extra spaces in LO-DefensiveCoding

[33mcommit 3092267187fba507bed344055c782e1c68c16efc[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Oct 4 14:50:39 2016 +0800

    Add ToC to new LOs

[33mcommit b550d0b7ca26f2851e9dc74a595a563118dcf218[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Oct 4 14:44:08 2016 +0800

    Add LO-EventDriven etc.

[33mcommit 1293b88125d56dd1f647d0b9b775855f1dfdbfb8[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Oct 3 11:34:40 2016 +0800

    Remove redundant comment lines in GuiTest

[33mcommit c31c5f5c517f63d566999ab121d57d01ac08ef88[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Oct 1 19:10:56 2016 +0800

    [134] Increase test coverage in storage

    * Add test to cover save/read to default path

    * Fix typo in JsonUserPrefStorage

    * Add dependency injection constructor for StorageManager

    * Fix broken tests due to wrong folder name

    * Add test to check data saving exception

    * Add test for StorageManager::getAddressBookFilePath()

[33mcommit 75942c90c04ff0469d5bb26873b85cd094f37797[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 23:47:46 2016 +0800

    [132] Add some missing util tests (#132)

[33mcommit 3f7ea164ee6ec52ccf98c7e9f37510cb6f7d935c[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 22:38:10 2016 +0800

    Add SD for delete person within Logic

[33mcommit 0c3fb87fdd35afd7327b52b87cec8185c58f7e7b[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 22:15:38 2016 +0800

    Add missing dependency in Logic CD

[33mcommit b378db4929ec8bdd3d16c46886498170d32b2ce8[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 22:13:19 2016 +0800

    Add missing line break to DevGuide

[33mcommit 7c38bbd88e4bb1a0b633577e4f5b151887bef77c[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:58:23 2016 +0800

    Give more details about the command format

[33mcommit b69bf61fea721d590ac2c3d0ed995f6e903e2dbd[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:52:19 2016 +0800

    Fix typos in User Guide

[33mcommit 10c2b39bad1c3f2b9a5ac3639d7e710526d28055[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:44:30 2016 +0800

    Fix broken link to releases

[33mcommit 22932cec056d9d65d5786b2f4cccd3c8fc9c2fbf[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:42:31 2016 +0800

    Add releases link

[33mcommit e2be60c946e0eb25e79cadd2f6c9370c9b1749d2[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:12:12 2016 +0800

    Fix typos in UsingGradle.md

[33mcommit 2eaae0831d95a897471dfe72648618c5a916c6ad[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:04:39 2016 +0800

    Add Build Automation heading

[33mcommit fd165514cdf4dbebe31c12af006856b59692d4a8[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 21:01:57 2016 +0800

    Add Dev Ops heading

[33mcommit 05f8c18b8c4bb60de0de2b0962e89c5eb5c26ecc[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 20:58:16 2016 +0800

    Add missing # in Dev Guide

[33mcommit 651d56357862b7e26daf8f265847d1747e003bb6[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 20:56:09 2016 +0800

    Fix typos in DevGuide

[33mcommit e7b090ed2f2a5840fd5f51a4fd0ee3fb7e3dd745[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 09:37:00 2016 +0800

    Mention auto-changed settings files

[33mcommit 1e5fe333e134aa90e128e160eaed9a149d196982[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 09:31:59 2016 +0800

    [131] Code quality tweaks (#131)

    * Rename ShowHelpEvent

    * Fix comment problems

[33mcommit 3930af40204b34906c67f8eb59a09f8f2e6fbacf[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 30 09:31:42 2016 +0800

    [130] Tweak Gradle preferences file (#130)

[33mcommit f779f77dac7e7958ad4c7df081d96110844ac6e4[m
Author: m133225 <m133225@hotmail.com>
Date:   Fri Sep 30 09:00:33 2016 +0800

    Added photo for Martin.

[33mcommit c65c6ecacd796fc33d871c6fff0473bb0734a0a9[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 22:52:35 2016 +0800

    Warn that set up can take a long time.

[33mcommit d3f05f521093577f079bef10436848b2c3c6cbce[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 20:16:54 2016 +0800

    Increase photo display size

[33mcommit 540f2d509f31966fd644451df103f07da6ce3768[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 20:15:14 2016 +0800

    Fix png -> jpg

[33mcommit 914eaa6efb348671bbb40407d7ff71cd7273029b[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 20:03:12 2016 +0800

    Add dev photos

    Fixes #119

[33mcommit 2bdfca48baaeb10fbba9cf45a5d779f0e2e04a72[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 19:51:29 2016 +0800

    Fix typo in .gitignore /data/

[33mcommit e85c3d76edab3d79fd282c9afec7f1ee94c6c7f2[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 19:47:38 2016 +0800

    [103] Document that index must be a positive integer (#129)

[33mcommit 6fc3b166ab6b10bc18568eb5c2ed829666df72a5[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 19:33:51 2016 +0800

    [128] Tweak logging (#128)

    * Add prefixes to important log messages

    * Tweak event handling logs

    * Update DevGuide about logging and config

[33mcommit 0f217ae2aaf3ec66ac7af4a8e42abd5aab45ce60[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 17:30:56 2016 +0800

    Update DevGuide to match SD

[33mcommit 36549e7feedcb5fd8fa53ac2ebe4675204032e1e[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 29 17:26:21 2016 +0800

    Update DeletePerson SD to show UI update

[33mcommit 822552a7760a3051777f44b35f8572e594639a89[m
Author: Joshua Lee <me@jolly.sg>
Date:   Thu Sep 29 09:54:26 2016 +0800

    Updated badges

[33mcommit 7875c84f9c55356bab781bd7c1c6aced92645639[m
Merge: 241ca32 ed1b128
Author: Joshua Lee <me@jolly.sg>
Date:   Thu Sep 29 09:44:23 2016 +0800

    [121] Increase test coverage

[33mcommit ed1b128561bd9ec3c47d089bb99845524f3c38f4[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 28 20:36:35 2016 +0800

    removed unused code

[33mcommit 221d9962dae0e2dfcef629c2526539dc38fc1fae[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 28 17:14:41 2016 +0800

    removed OsDetector and all related methods

[33mcommit 241ca32006dab9e4c58189e306f5a3b80463d3cc[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Wed Sep 28 22:30:20 2016 +0800

    [122, 126] Set rolling file for logging

[33mcommit 4b091a401609b1672a363913d7ab00f26da11814[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 28 20:20:24 2016 +0800

    Fix switch indentation

[33mcommit 1f1e9821309fcea6bf8f4d72fcfb079d3064ed85[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 28 20:13:03 2016 +0800

    [111] Create sandbox folder if it doesn't exist (#125)

[33mcommit 91b1c0c2dca92726ba2170c9dda87bee41efbe99[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 28 19:36:51 2016 +0800

    Add clarification about enabling assertions

    Fixes #105

[33mcommit ee4cc48307f30c9511c367082f20920e913bdc53[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 28 19:38:20 2016 +0800

    [112] Rename unitTests -> nonGuiTests (#124)

[33mcommit e49a96ca1315f68b956dfe79f0298085de6f4b7f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 28 18:21:43 2016 +0800

    Add ProductSurvey section

    Fixes #120

[33mcommit c5bbb3ec5d3f46513c91260aed6aa40690344a98[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 28 13:00:17 2016 +0800

    [118] Remove IncorrectCommandResult (#118)

    * Rename events package controller -> ui

    * Remove IncorrectCommandResult

[33mcommit 1e199b60fe885f54dc0ff97bee086c5279b75d77[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Sep 27 23:07:47 2016 +0800

    Add contributors Akshay and Sam

[33mcommit 9744f5e306c3b965e36d86e7175b8337545ae616[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Sep 27 23:04:33 2016 +0800

    Start LearningOutcomes.md

[33mcommit 9686528b6bbac4bd8317dbf89ee42876cfa38fdb[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Sep 27 22:55:36 2016 +0800

    [94] Fix compiler warnings (#117)

[33mcommit daf5657bc565e27f64b7b27d2c441c670500d766[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Sep 27 22:29:53 2016 +0800

    [115] Move event handler registration to child class

[33mcommit 5f6299dc8277789c71785d286176a942eba4cd86[m
Author: Sam-Mauris Yong <mauris@users.noreply.github.com>
Date:   Tue Sep 27 15:21:48 2016 +0800

    [98] Implement 'Last updates timestamp' feature (#113)

    Implement 'Last updates timestamp' feature #98

[33mcommit feecceffc94bac107dc927e99fc70d063b2bfb28[m
Author: Akshay Narayan <okkhoy@gmail.com>
Date:   Mon Sep 26 15:53:20 2016 +0800

    [99] remove "(private)" in readonlyperson.java (#100)

[33mcommit 177844fa34ec87ad0ab0f83581fd82f8815f2d4b[m
Author: Akshay Narayan <okkhoy@gmail.com>
Date:   Mon Sep 26 15:52:32 2016 +0800

    [96] Fix typos and grammar in DeveloperGuide.md and UsingGradle.md (#97)

    * fix typo in developer guide

    * fix typos/grammar in using gradle document

    * Remove "what are dependencies and" in Managing dependencies section

[33mcommit eaf53399684f379e42cd1e6aca9bd4c35f736e38[m
Author: Akshay Narayan <okkhoy@gmail.com>
Date:   Mon Sep 26 15:51:19 2016 +0800

    [101] remove [p] from add command help in the program (#104)

[33mcommit 7ed69a79809b55e172743dbb0d74b012565cf6e1[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 14:43:03 2016 +0800

    Fix typos in EventCenter description

[33mcommit c6530f9058c9ff9d718471edc8a1e184f4d2f94e[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 12:44:08 2016 +0800

    10 KLoC -> 6 KLoC

[33mcommit fbdb57370df557b19286509562297ff091297d98[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 12:35:37 2016 +0800

    Move AddressBook change event handling to Storage

[33mcommit 8de0932e6d797664b63c4fe890ae9d7fbeb35e27[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 12:19:05 2016 +0800

    Update Logic CD

[33mcommit f046197dd2fe553c07e1c2fd470f3b059be86fd3[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 12:10:15 2016 +0800

    Correct activation bar in SD

[33mcommit 3a99016d854adac863dc730d351d429760c1c200[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 12:08:41 2016 +0800

    Update event handling SD

[33mcommit d21db896c1bd9511844a124ba060f249132c031f[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Mon Sep 26 11:45:36 2016 +0800

    [43] Add eclipse project files

[33mcommit 32fde569dbf6aa0a2701b627c589ea8a9a1ca21f[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 09:17:04 2016 +0800

    Fix typo in Windows command

[33mcommit 86f812bdd47f9b649a86566a07296e81aed0fdae[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 26 00:11:10 2016 +0800

    [93] Add dev guide details

    * Add architecture description

    * Add UI component description

    * Add Logic details

    * Add Model and Storage details

    * Add sequence diagrams

    * Refine SD description

    * Updated SD lifeline

    * Update pptx file with SDs

[33mcommit 29ad56db646046ee6994974a9537579fd74bc721[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Sep 25 21:21:38 2016 +0800

    Fix broken link in README.md

[33mcommit 2d77ca44460dd3e0c859896e277df0e36d4bed32[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Sep 25 21:19:06 2016 +0800

    Add UI image

[33mcommit df14561e1dd0ef40d42ffd5abb91e5f681c29f05[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Sep 24 20:00:47 2016 +0800

    Improve SLAP in MainApp

[33mcommit cc1974efad9d8072c6ffd13aecbc9a9b6beeba56[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Sep 25 18:28:55 2016 +0800

    [90] Complete dev guide

    * Add architechture diagram

    * UiManager: Remove unused method

    * Clean up Config class

    * Fix broken ConfigUtilTest

    * Config file : prefs... --> userPrefs...

    * Extract Model interface

    * Extract Logic interface

    * Extract Storage interface

    * Extract Ui interface

    * Add missing comments to Ui

    * Move UnmodifiableObservableList to commons.core

    * Make ModelManager keep an instance of UserPrefs

    * Rename classes related to Xml serializing

    * Remove Ui -> MainApp coupling

    * Add data folder to .gitignore

    * Fix compile error

    * Add Archi and component diagrams

    * Tweak image size

[33mcommit 51cefc33e1a1c895286444810946c81655d94591[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Sep 24 19:50:01 2016 +0800

    Remove GUI unit tests
    Fixes #66

[33mcommit 58d8591d43eda5687859e77a4dbf751fc509ee87[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sat Sep 24 19:38:51 2016 +0800

    [89] Refine storage

    * Remove unused UserPref parameter

    * Add StorageManager::readConfig()

    * Extract ConfigStorage

    * Assert config file path is not null

    * Add ConfigStorage::save()

    * Add test data folder ConfigStorageTest

    * Handle extra fields in the config file

    * Rename ConfigStorage::readConfig() -> read()

    * Remove unused constructor

    * Replace old Config storage methods with new ones

    * Add JsonPrefStorage

    * Add JsonPrefStorage::readPrefs()

    * Add JsonPrefStorage::savePrefs()

    * Connect JsonPrefStorage to StorageManager

    * Cleanup StorageManagerTest

    * Rename ConfigStorage -> JsonConfigStorage

    * Fix broken StorageManagerTest

    * Add Config::toString()

    * Rename methods in JsonConfigStorage

    * Config: keep preference file location as string

    * Add XmlAddressBookStorage

    * Remove *.xml from .gitignore

    * Add read/save methods to XmlAddressBookStorage

    * Reorder StorageManager methods

    * Eliminate Supplier/Consumer use in StorageManager

    * Remove unused SaveDataRequestEvent

    * Remove unused code from StorageManager

    * Rename LocalModelChangedEvent

    * Remove SavePrefsRequestEvent

    * Rename File Saving/Opening exception events

    * Rewire dependencies from UiParts to other components

    * Tidy up MainApp

    * Decouple StorageManager from Config

    * Add missing tests to StorageManagerTest

    * Remove unused static methods in StorageManager

    * Add AddressBookStore interface

    * Implemented AddressBookStorage interface

    * Add UserPrefsStorage interface

    * Add missing comments to StorageManager

    * Move JsonConfigStorage to ConfigUtil

[33mcommit 814d758a4ba69e7b19f7509bed897fcf37610d45[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Fri Sep 23 00:15:18 2016 +0800

    [88] Refine commons

    * Split commons into core and util

    * Move ComponentManager

    * Make LogicManager and Ui to extend ComponentManager

    * Rename Ui UiManager

    * Move exceptions inside commons

    * Move events inside commons package

    * Rename EventManager

    * Rename LogManager and LogManager

[33mcommit 3bf3067994fcf29fff1dafaaf0e4971afa524cdd[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 22 23:30:41 2016 +0800

    [86] Refine model

    * Delete dead code

    * Remove unused Config parameter

    * Remove ReadOnlyAddressbook interface from ModelManager

    * ModelManager: Remove dead code

    * ModelManager: remove extra comments

    * ModelManager: add missing comments

    * ModelManager: Remove updateStorage()

    * Move getEmptyAddressBook() to AddressBook

    * Refined ModelManager API for filtered list

    * Refine comments

    * Remove unused UniqueData class

[33mcommit 92bc32b631c62041625a021719adf7c280711570[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Thu Sep 22 18:39:27 2016 +0800

    [85] Refine logic and parser

    * Remove dead code, narrow scope

    * Removed Parser -> Model dependency

    * Move filtering to ModelManager

    * Mover parser and commands inside logic package

    * Remove dead code from Command classes

    * Rename Logic -> LogicManager

[33mcommit 0f49d497dd200f1233996b4da39d4d562f3c23cf[m
Author: You Liang <youliang@u.nus.edu>
Date:   Thu Sep 22 09:48:40 2016 +0800

    [24] Rename controller -> ui

[33mcommit 3a7f6c9891c6bb9d57d2748db37a1ef2910329c4[m
Author: You Liang <youliang@u.nus.edu>
Date:   Thu Sep 22 09:31:34 2016 +0800

    [70] Add GUI test for help window

    * HelpWindow Test

    * remove logging

    * remove return param

    * added delay after opening a help window

    * removed accelerator testing. as headless doesn't work

    * refocus on main app after closing help window

    * extra space

    * fix code style issue

[33mcommit 979d2f8e167b2b1afcab461bfeee9a2a63bdb7cf[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 21 23:44:19 2016 +0800

    [83] Cleanup utils and merge with commons

    * Remove JavaVersion

    * Remove DateTimeUtil

    * Remove unused messages from Message

    * Remove PlatformExecUtil

    * Rename Utils

    * AppUtil: Removed dead code

    * Remove ManifestFileReader

    * Move UnmodifiableObservableList

    * Rename util -> commons

[33mcommit 3625a1a9952a511930f01e9453cf902851828e32[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 21 23:01:44 2016 +0800

    [81] Add a Logic class

    * Add Logic class

    * Remove MainWindow -> Parser coupling

    * CommandBoxTest -> LogicTest

[33mcommit 64e4fba535dacdab162c5c5c6ce3092b4181f629[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 21 21:37:56 2016 +0800

    [80] Refine browser to be a UiPart

    * Make Browser a UiPart

    * Move BrowserPanel to controller package

    * Refine BrowserPanel

    * fix anchor issue

[33mcommit cf8eb864bf4ac8cb8c710f5fdd3ef03fbfa7c98e[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 21 19:13:15 2016 +0800

    [79] Further cleanups to UI

    * Rename PersonCardController

    * PersonCard: remove dead code

    * Make PersonCard a UiPart

    * UiPartLoader: add missing comments

    * ResultDisplay: remove dead code

    * HelpWindow: Remove dead code

    * MainWindow: tweak comments

    * Remove unused event classes

    * Use events to load page when list selection changes

    * Make PersonListViewCell an inner class

    * PersonListPanel: Use raise instead of post

    * Move ShowHelpEvent to events/controller

    * Remove KeyBindingEvent

    * ShowHelpEvent: add missing header comment

[33mcommit 57c151cc9c0ea3cdf72cfce8b7fc86915d20ca0c[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 21 16:30:22 2016 +0800

    [73] Cleanup UI

    * Rename BaseUiPart

    * Clean up UiPartLoader

    * Clean up UiPart

    * Remove dead code from Ui

    * Add more detailed error reporting during UI loading

    * Move event handling code to the bottom

    * Refine MainWindow::load()

    * Refine MainWindow

    * Auto-detect placeholders

    * Remove About Dialog

    * Remove local variable MainWindow::ui

    * Refine StatusBarFooter

    * Reorder code in PersonListPanel

    * Remove multiple selection mode

    * PersonListPanel: Remove dead code

[33mcommit c6799bfaf200a0fd8af50d2751353b5e9ec6a581[m
Author: Leow Yijin <leowyijin@gmail.com>
Date:   Wed Sep 21 15:19:55 2016 +0800

    [39][76][77][78] Bring logic tests from level 3 (PR #74)

    * separated ui setup from other component dependencies setup in MainWindow

    * tightened return type for browsermanager's getBrowserView

    * changed resultdisplay values to be accessible without javafx

    * separated commandbox logic from javafx ui component

    * changed components to expose parts for testing and modularity

    * ported over level 3 model's new utility features

    * ported model equality comparisons

    * ported logictest utility methods and updated implementation to match level 4 with ui

    * restructured packages inside model to actually make sense

    * ported testdatahelper from level3

    * ported level3's changes where parser would not instantiate any model objects

    * added simple commandbox tests and updated allowed name format

    * REMOVED PRIVATE FEATURE FROM MODEL

    * fix undetected merge conflicts

    * commandboxtest for add commnad

    * minor renaming and refactoring of methods in ui and model

    * added list and delete tests

    * added find tests

    * added select tests

[33mcommit 843d0c6924068967d682ecc9a9480dfae3b894d9[m
Author: Leow Yijin <leowyijin@gmail.com>
Date:   Wed Sep 21 12:54:14 2016 +0800

    update .gitignore

[33mcommit adde2fc45c378791fd0d7cc26f4c1a51594e9af4[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Wed Sep 21 10:53:21 2016 +0800

    [71] Cleanup gui tests

[33mcommit 3eeda193204ff169fb5579e0e977c8eed6a70301[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Tue Sep 20 18:01:16 2016 +0800

    [65] Clean up build.gradle

[33mcommit b9e4c32cdf2b1f926685459615a6ca8f471a5b09[m
Author: Joshua Lee <me@jolly.sg>
Date:   Tue Sep 20 17:53:36 2016 +0800

    [72] updated UserGuide.md

[33mcommit fc1c3bb84e389b013d078274ed22a1c4ee511bff[m
Author: Joshua Lee <me@jolly.sg>
Date:   Tue Sep 20 16:11:41 2016 +0800

    [11] UserGuide now loads in the help window

[33mcommit 295e974c7d4d5d9d1d9cef8e26dab034c5a7dcd6[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Tue Sep 20 13:36:23 2016 +0800

    [68] Flatten doc structure

[33mcommit f060198b6dd66958f8a66500c4b3d0d458d91d6f[m
Merge: 010d72d 362af07
Author: Joshua Lee <me@jolly.sg>
Date:   Tue Sep 20 00:11:39 2016 +0800

    [46] support select command

[33mcommit 362af07525b7696bd91e05bbd7d3ef0d380dc72e[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 14 20:47:17 2016 +0800

    implemented select command

[33mcommit 010d72d609226740ac258881656f07fda9152f1e[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Mon Sep 19 21:13:30 2016 +0800

    [53] GUI tests: use setText instead of write

[33mcommit d1e4d36bfd5f49ad1a67e6487154dd42f162c994[m
Author: You Liang <youliang@u.nus.edu>
Date:   Mon Sep 19 19:04:11 2016 +0800

    [41] Search substring will return incorrect feedback message

[33mcommit 6544d4b74b097356cee7d1870f6600db839bbbfc[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Mon Sep 19 18:03:52 2016 +0800

    [62] Gradle is not running unit tests

[33mcommit 377cfc16a5919c3bb8367973b24482cc809649f0[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Sep 18 16:34:14 2016 +0800

    Add build status badge to README.md

[33mcommit ac70505954f26f6fccbbeb7635283d1f5ed4be22[m
Author: You Liang <youliang@u.nus.edu>
Date:   Sat Sep 17 21:55:39 2016 +0800

    [56] ListAll and clear command tests

[33mcommit 9bf69ec997d276f4d0dfa2c9c2102645f449c99f[m
Author: m133225 <m133225@hotmail.com>
Date:   Fri Sep 16 13:10:05 2016 +0800

    Fix to alignment in travis documentation.

[33mcommit 96fa3d5746f5bcce625f7ea375d1e6b8656e493e[m
Author: m133225 <m133225@hotmail.com>
Date:   Fri Sep 16 13:08:29 2016 +0800

    Added missing documentation images.

[33mcommit 7127241001afea8123a38dd6ea1d2596d7406a06[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Fri Sep 16 13:05:18 2016 +0800

    [49] Setup CI and ensure tests are passing

[33mcommit 95055c85a26c71d4296652adcc079a43a1eb1b0a[m
Author: m133225 <m133225@hotmail.com>
Date:   Thu Sep 15 10:51:25 2016 +0800

    Changed result display to text area element instead to allow for scrolling if text is too long.

[33mcommit 4653f0e3682af178e8ea0d5c70f9e2dc9a51dca9[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Wed Sep 14 22:14:25 2016 +0800

    [48] Tweak GUI to emphasize active components

[33mcommit 126d62a4ef96e296922a325adcad4ce90e8a6929[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 14 20:22:16 2016 +0800

    fixed COMMAND_INPUT_FIELD_ID for guitests

[33mcommit c9f22204ce46453ae220f88a2ca387263986f47b[m
Merge: 5e630cf b60fc02
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 14 16:49:03 2016 +0800

    [37] clear command box after executing command

[33mcommit b60fc021b720468582bb1348e468d41be3fff481[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 14 16:47:33 2016 +0800

    cleared command box after successfully executing command

[33mcommit 5e630cf5f4a31ebae9913f64f113c3b96ea4761f[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Wed Sep 14 11:52:57 2016 +0800

    [23] Extract CommandBox as a separate UI component

[33mcommit 7eb03772c52564c3ea28486dc3fd74c7e65dd675[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Tue Sep 13 21:47:19 2016 +0800

    [25] Increase height of StatusBarHeader

[33mcommit 623480bb301d16ed4b1476aa508fc4a78f874c44[m
Author: You Liang <youliang@u.nus.edu>
Date:   Tue Sep 13 21:21:37 2016 +0800

    [33] Implement FindPersonsByWordsInNameCommand GuiTest

[33mcommit 9f503e08158441aaf60e4d60f415fb7cea871036[m
Author: m133225 <m133225@hotmail.com>
Date:   Fri Sep 9 15:13:15 2016 +0800

    Fixed logger output to log file not using the specified custom level.

[33mcommit 03849f2c11d4d6784a03ceaa78fcf3da03cb6a74[m
Author: m133225 <m133225@hotmail.com>
Date:   Fri Sep 9 12:59:05 2016 +0800

    Removed unnecessary status bar and added promptText for command text field.

[33mcommit 6d8c91f00b6d145c1300afe766fec22f146d8bc7[m
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Fri Sep 9 12:52:20 2016 +0800

    [26] Use util.logging's logger and update logging documentation

[33mcommit 62fa36850ddd5610ff8eb066b3fa24addb974a12[m
Merge: 355209c 23e53fb
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Sep 7 16:50:47 2016 +0800

    [22] support Help command

[33mcommit 23e53fb4039d02fb2403538bc073452d34ce3026[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Aug 31 17:48:44 2016 +0800

    implemented help command

[33mcommit 355209cf87f63fa48c2f75adc1199b2fcab5941b[m
Merge: 106dc15 129fd97
Author: ndt <thiennguyen1993@gmail.com>
Date:   Mon Sep 5 00:20:16 2016 +0800

    [31] Delete command GUI tests

[33mcommit 129fd977cae7a2ed093753363ae0faab8d5243dd[m
Author: ndt <thiennguyen1993@gmail.com>
Date:   Sun Sep 4 19:05:19 2016 +0800

    Rename delete test cases

[33mcommit 106dc15ab0c4cc5f6f1d95816dae76d1432c9883[m
Author: You Liang Lim <a0125975@u.nus.edu>
Date:   Sun Sep 4 20:14:01 2016 +0800

    remove test prefix

[33mcommit 3346f95f0831a775a11a5f0fbb73a553a012244f[m
Author: ndt <thiennguyen1993@gmail.com>
Date:   Sun Sep 4 16:13:10 2016 +0800

    Add gui tests for delete command

[33mcommit b4e81348ec5a7188aaa061fed66884dc8aaf146d[m
Author: You Liang <youliang@u.nus.edu>
Date:   Sat Sep 3 21:39:03 2016 +0800

    Add AddPersonCommand test cases (#30)

    * Add AddPerson test cases

    modification of the guihandles

    and slight modification of the fxml

    * remove author

[33mcommit 6fb2658e18b92e0cd4d97bc9e7dc28b8e6bce2ba[m
Author: You Liang <youliang@u.nus.edu>
Date:   Thu Sep 1 23:20:27 2016 +0800

    Fix test case failure

[33mcommit d1691eb3e04bd50db9daa361239626d4eb329946[m
Merge: 386dffd f2559db
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Wed Aug 31 10:26:24 2016 +0800

    [7] Add gradle-related documentation

[33mcommit f2559db2e3b562f912a2f69830a1581fc7ba345e[m
Author: m133225 <m133225@hotmail.com>
Date:   Wed Aug 31 10:25:17 2016 +0800

    Minor refactoring and corrections.

[33mcommit dc6b73784b5a93ba7345d7e11c9b584c4207df23[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 18:20:33 2016 +0800

    Updated documentation for building the jar file.

[33mcommit 750b82871a75d92e727c13abd3be8a225a182793[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 18:15:51 2016 +0800

    Added shadowjar dependency and task to compile the application into a standalone JAR.

[33mcommit 28a1efe9fc27609f2ecfd9c9e30fee7e0562437f[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 17:30:49 2016 +0800

    Minor refactoring and removal of outdated testing documentation.

[33mcommit b774039458ded6da6ed2c373c6d8dd32455963f0[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 17:18:59 2016 +0800

    Some refactoring and moving of instructions to more appropriate places.

[33mcommit 2c03b8ff6a40a01ea3377c45f1f474e0baa22f9c[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 17:08:23 2016 +0800

    Extracted managing dependencies into a separate markdown and linked the intro markdown to them.

[33mcommit 6a9ed284d0c0ca9a6e25f9efdfdd7a9e598e8bd6[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 16:59:58 2016 +0800

    Added pictures to explain how to see the status of the travis build. Moved travis configuration into a separate folder since it is not part of gradle.

[33mcommit 53fe17afcb47af273e9629b2fca92275695b2418[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 29 16:48:19 2016 +0800

    Added back coveralls task and plugin.

[33mcommit 6fe47b3441bccc6f5dd0860738fe3b520849f40e[m
Author: m133225 <m133225@hotmail.com>
Date:   Fri Aug 19 14:53:01 2016 +0800

    Some documentation about learning basics of gradle.

[33mcommit 386dffdf2ad3453c7ac73cb7d93694c270f4ebae[m
Author: You Liang Lim <a0125975@u.nus.edu>
Date:   Fri Aug 26 23:52:05 2016 +0800

    prevent key binding from being triggered

[33mcommit e5b340676f18d23b5bab3dfe30fd316d633ac9d9[m
Author: You Liang <youliang@u.nus.edu>
Date:   Fri Aug 26 23:48:23 2016 +0800

    [18] Implement FindPersonsByWordsInNameCommand

    * added filteredList into modelManager

    * added qualifier

    * minor refactoring

    * implemented unique list

    * added ListAllPersonsCommand

    * added back status bars

    * added exit app event. and remove main app dependency.

    * clean up

[33mcommit a9b45254cb2f0cbf5f055a075c8905b2f7551e16[m
Merge: 7ccc4a7 2137a96
Author: ndt <thiennguyen1993@gmail.com>
Date:   Thu Aug 25 20:35:11 2016 +0800

    [15] Implement DeleteCommand

[33mcommit 2137a96c30aaf2c971ec5e6ba44a0cb433db8072[m
Author: ndt <thiennguyen1993@gmail.com>
Date:   Thu Aug 25 18:14:10 2016 +0800

    Add displayed index to list cell card

[33mcommit b8ed0900daea2e5e2f771cd4453099a9eaa6ce19[m
Author: ndt <thiennguyen1993@gmail.com>
Date:   Thu Aug 25 18:06:22 2016 +0800

    Implement delete command

[33mcommit 7ccc4a77182abfe41817b57a6e7a6fb2eb3bc879[m
Author: You Liang Lim <a0125975@u.nus.edu>
Date:   Wed Aug 24 17:14:17 2016 +0800

    minor bug fixes. Show person tags and ClearAddressBookCommand Implementation

[33mcommit 9ffcef4d1e3b09a433153f5e59148a3803075156[m
Author: Joshua Lee <me@jolly.sg>
Date:   Wed Aug 24 17:06:14 2016 +0800

    added .DS_Store to gitignore

[33mcommit bf265bd321dce10ad8d2cfc0203aca8f0d4271c3[m
Author: You Liang <youliang@u.nus.edu>
Date:   Wed Aug 24 16:57:46 2016 +0800

    [8] Integrate parts from level 2.

    * integrate from level 2. compilable. Not yet fully integrated.

    * Make add command workable, but there is some issues in marshalling into local storage file.
    And fix some bugs

    * Fixes marshalling issue, forgot to call LocalModelChangedEvent

[33mcommit a2660a0f7b67e0796a57eed505fdc6637f9d1847[m
Author: m133225 <m133225@hotmail.com>
Date:   Sat Aug 20 13:50:08 2016 +0800

    Some refactoring and cleanup in the ui classes.

[33mcommit 57c1f8fabdf8f52261fffa8ffeed43aafdba146f[m
Merge: 8018379 b69d2df
Author: Martin Choo <m133225@users.noreply.github.com>
Date:   Sat Aug 20 13:37:33 2016 +0800

    [5] Change to code sample GUI

[33mcommit b69d2df97b83c749bffe79b2aece9ac9c78cbdeb[m
Author: m133225 <m133225@hotmail.com>
Date:   Sat Aug 20 13:36:48 2016 +0800

    Minor refactoring and renaming of css file.

[33mcommit e3187d227cf620a523245236d59673c96b7a08df[m
Author: m133225 <m133225@hotmail.com>
Date:   Thu Aug 18 01:07:59 2016 +0800

    Fixed padding for horizontal scroll bar.

[33mcommit f79d2f23c5961e5ee36c1fea104fd42b81af587d[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 15 23:56:50 2016 +0800

    Slight tweak to scroll bar padding.

[33mcommit 98ab07df9fd97120bc128bd85b6b3372dbaa7d35[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 15 23:45:39 2016 +0800

    Removed the navigation arrows and customised the thickens of the scroll bar.

[33mcommit e8e19d05143ff5a6d86a2dc400aa845575cd71f3[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 15 21:08:56 2016 +0800

    Revert back to dark theme with a couple of changes and improvements to the GUI.

[33mcommit 174b1d01aaf36c9b7a8e37315f00174ab8034ad5[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 15 19:49:49 2016 +0800

    Changed to blue theme and other GUI optimizations.

[33mcommit 70068b1ab2fd10eeb97568c48eacfa5d74c339c5[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 15 16:18:00 2016 +0800

    Fixed default webpage width being too small after change in layout.

[33mcommit bba8f409d6719c80646c8ca7ca7f7ba8302951aa[m
Author: m133225 <m133225@hotmail.com>
Date:   Mon Aug 15 13:37:57 2016 +0800

    Updated GUI to the code sample colour and layout. Some minor tweaks will be required to make it nicer.

[33mcommit 80183799de10c6690a5b05722ea32925c26c1bed[m
Author: m133225 <m133225@hotmail.com>
Date:   Sat Aug 20 13:24:39 2016 +0800

    Fixed browser not loading profile page after ui restructure.

[33mcommit d96694832ac11cc75fdebd38bc7df632d8e9e8f0[m
Author: You Liang <youliang@u.nus.edu>
Date:   Thu Aug 18 19:19:48 2016 +0800

    [3] Restructure ui to reflect physical ui

[33mcommit df1119c3e1f88c3688639e794741f5181234415a[m
Author: m133225 <m133225@hotmail.com>
Date:   Wed Aug 10 11:01:26 2016 +0800

    Removed filtering and filter parsers altogether.

[33mcommit c940c8f61c513afe30b8db47b53efe9448735295[m
Author: m133225 <m133225@hotmail.com>
Date:   Wed Aug 10 10:32:46 2016 +0800

    Removed unused FileUtil methods.

[33mcommit 0414e21d54d8985fd41f1b353380b4939581ad5f[m
Author: m133225 <m133225@hotmail.com>
Date:   Tue Aug 9 20:39:17 2016 +0800

    Added coverage task back.

[33mcommit 5ce58c4ee734f57978205f057f84d539738abfe1[m
Author: You Liang <a0125975@u.nus.edu>
Date:   Mon Aug 8 21:45:40 2016 +0800

    Rename into seedu.address
    Clean up gradle build
    remove launcher

    Fixes #1
    Fixes #2

[33mcommit 7916322fad9d11ef3fa7ca67574062bb6de3e950[m
Author: You Liang Lim <a0125975@u.nus.edu>
Date:   Mon Aug 8 17:32:17 2016 +0800

    address book level 4 draft

[33mcommit 9db8290614e92ad72bc905cf80d6693b9eaae7fe[m
Author: Damith C. Rajapakse <damith@gmail.com>
Date:   Sun Aug 7 15:17:27 2016 +0800

    Initial commit
